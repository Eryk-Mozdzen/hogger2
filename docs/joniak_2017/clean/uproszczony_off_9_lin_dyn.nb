(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    570607,      10682]
NotebookOptionsPosition[    566798,      10579]
NotebookOutlinePosition[    567178,      10595]
CellTagsIndexPosition[    567135,      10592]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Linearyzacja dynamiczna", "Text",
 CellChangeTimes->{{3.669296702032968*^9, 3.6692967037050285`*^9}, {
  3.6699114751459627`*^9, 3.6699114766959686`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"loadNotebook", "[", "\"\<uproszczony_off_9_model.nb\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6734398194438753`*^9, 3.673439819554882*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"wyliczSterowanie", "[", 
     RowBox[{"wd_", ",", "w_", ",", "k1_", ",", "k2_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"eta", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Eta]", "1"], "[", "t", "]"}], ",", 
         RowBox[{
          SubscriptBox["\[Eta]", "2"], "[", "t", "]"}], ",", 
         RowBox[{
          SubscriptBox["\[Eta]", "3"], "[", "t", "]"}], ",", 
         RowBox[{
          SubscriptBox["\[Eta]", "4"], "[", "t", "]"}], ",", 
         RowBox[{
          SubscriptBox["\[Eta]", "5"], "[", "t", "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"uklad", "=", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"G2u", ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Eta]", "1"], "[", "t", "]"}], ",", 
              RowBox[{
               SubscriptBox["\[Eta]", "2"], "[", "t", "]"}], ",", 
              RowBox[{
               SubscriptBox["\[Eta]", "3"], "[", "t", "]"}], ",", 
              RowBox[{
               SubscriptBox["\[Eta]", "4"], "[", "t", "]"}], ",", 
              RowBox[{
               SubscriptBox["\[Eta]", "5"], "[", "t", "]"}]}], "}"}], "}"}], 
           "]"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"podstawienie", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "\[Rule]", 
          RowBox[{"uklad", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"y", "[", "t", "]"}], ",", "t"}], "]"}], "\[Rule]", 
          RowBox[{"uklad", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], ",", "t"}], 
           "]"}], "\[Rule]", 
          RowBox[{"uklad", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", " ", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}], ",", "t"}], 
           "]"}], "\[Rule]", 
          RowBox[{"uklad", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Phi]", "u1"], "[", "t", "]"}], ",", "t"}], "]"}],
           "\[Rule]", 
          RowBox[{"uklad", "[", 
           RowBox[{"[", "5", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Theta]", "u2"], "[", "t", "]"}], ",", "t"}], 
           "]"}], "\[Rule]", 
          RowBox[{"uklad", "[", 
           RowBox[{"[", "6", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Phi]", "u2"], "[", "t", "]"}], ",", "t"}], "]"}],
           "\[Rule]", 
          RowBox[{"uklad", "[", 
           RowBox[{"[", "7", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["r", "1"], "[", "t", "]"}], ",", "t"}], "]"}], 
          "\[Rule]", 
          RowBox[{"uklad", "[", 
           RowBox[{"[", "8", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["r", "2"], "[", "t", "]"}], ",", "t"}], "]"}], 
          "\[Rule]", 
          RowBox[{"uklad", "[", 
           RowBox[{"[", "9", "]"}], "]"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"wp", "=", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"w", ",", "t"}], "]"}], " ", "/.", " ", "podstawienie"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"wpp", "=", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"wp", ",", "t"}], "]"}], "/.", "podstawienie"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dcoe", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Coefficient", "[", 
           RowBox[{"wpp", ",", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Eta]", "1"], "[", "t", "]"}], ",", "t"}], 
             "]"}]}], "]"}], ",", 
          RowBox[{"Coefficient", "[", 
           RowBox[{"wpp", ",", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Eta]", "2"], "[", "t", "]"}], ",", "t"}], 
             "]"}]}], "]"}], ",", 
          RowBox[{"Coefficient", "[", 
           RowBox[{"wpp", ",", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Eta]", "3"], "[", "t", "]"}], ",", "t"}], 
             "]"}]}], "]"}], ",", 
          RowBox[{"Coefficient", "[", 
           RowBox[{"wpp", ",", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Eta]", "4"], "[", "t", "]"}], ",", "t"}], 
             "]"}]}], "]"}], ",", 
          RowBox[{"Coefficient", "[", 
           RowBox[{"wpp", ",", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Eta]", "5"], "[", "t", "]"}], ",", "t"}], 
             "]"}]}], "]"}]}], "}"}], " ", "//", " ", "Simplify"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"coe", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Coefficient", "[", 
           RowBox[{"wpp", ",", 
            RowBox[{
             SubscriptBox["\[Eta]", "1"], "[", "t", "]"}]}], "]"}], ",", 
          RowBox[{"Coefficient", "[", 
           RowBox[{"wpp", ",", 
            RowBox[{
             SubscriptBox["\[Eta]", "2"], "[", "t", "]"}]}], "]"}], ",", 
          RowBox[{"Coefficient", "[", 
           RowBox[{"wpp", ",", 
            RowBox[{
             SubscriptBox["\[Eta]", "3"], "[", "t", "]"}]}], "]"}], ",", 
          RowBox[{"Coefficient", "[", 
           RowBox[{"wpp", ",", 
            RowBox[{
             SubscriptBox["\[Eta]", "4"], "[", "t", "]"}]}], "]"}], ",", 
          RowBox[{"Coefficient", "[", 
           RowBox[{"wpp", ",", 
            RowBox[{
             SubscriptBox["\[Eta]", "5"], "[", "t", "]"}]}], "]"}]}], "}"}], 
        " ", "//", " ", "Simplify"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"test", " ", "=", " ", 
       RowBox[{"dcoe", "//", "Simplify"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"test", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"test", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", 
          "\"\<{0, 0, 0, 0, 0}\>\""}], ",", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"test", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[Equal]", 
          "\"\<{0, 0, 0, 0, 0}\>\""}], ",", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"test", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}], "\[Equal]", 
          "\"\<{0, 0, 0, 0, 0}\>\""}], ",", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"test", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "]"}], "\[Equal]", 
          "\"\<{0, 0, 0, 0, 0}\>\""}], ",", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"test", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "]"}], "\[Equal]", 
          "\"\<{0, 0, 0, 0, 0}\>\""}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Kdd", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"test", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"coe", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"dcoe", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"test", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"coe", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"dcoe", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"test", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", 
            RowBox[{"coe", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", 
            RowBox[{"dcoe", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"test", "[", 
             RowBox[{"[", "4", "]"}], "]"}], ",", 
            RowBox[{"coe", "[", 
             RowBox[{"[", "4", "]"}], "]"}], ",", 
            RowBox[{"dcoe", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"test", "[", 
             RowBox[{"[", "5", "]"}], "]"}], ",", 
            RowBox[{"coe", "[", 
             RowBox[{"[", "5", "]"}], "]"}], ",", 
            RowBox[{"dcoe", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}], "]"}]}], "}"}], " ", "//", " ",
         "Transpose"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Det", "[", "Kdd", "]"}], " ", "//", " ", "Simplify"}], " ", "//",
        "Print"}], ";", "\[IndentingNewLine]", 
      RowBox[{"P", " ", "=", 
       RowBox[{
        RowBox[{"wpp", "-", 
         RowBox[{"Kdd", ".", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"test", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"eta", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"eta", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}],
              "}"}]}], "]"}]}]}], " ", "//", " ", "Simplify"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"K1", " ", "=", " ", 
       RowBox[{"k1", "*", 
        RowBox[{"IdentityMatrix", "[", "5", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"K2", " ", "=", " ", 
       RowBox[{"k2", "*", 
        RowBox[{"IdentityMatrix", "[", "5", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sterowanie", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Inverse", "[", "Kdd", "]"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "P"}], "+", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{"wd", ",", "t"}], "]"}], ",", "t"}], "]"}], "-", 
           RowBox[{"K1", ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{"w", ",", "t"}], "]"}], "-", 
              RowBox[{"D", "[", 
               RowBox[{"wd", ",", "t"}], "]"}]}], ")"}]}], "-", 
           RowBox[{"K2", ".", 
            RowBox[{"(", 
             RowBox[{"w", "-", "wd"}], ")"}]}]}], ")"}]}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"l", "\[Rule]", " ", "0.1"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"test", ",", "sterowanie"}], "}"}]}], "\[IndentingNewLine]", 
     ")"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"rozwiazRownania", "[", 
     RowBox[{"sterowanie_", ",", "test_", ",", "q0_", ",", "tmax_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pstrona", " ", "=", " ", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"G2u", ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"\[Eta]u", "[", "t", "]"}], "}"}], "]"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lstrona", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"qu", "[", "t", "]"}], ",", "t"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sterbez", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"q01", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "<", "6"}], ",", 
        RowBox[{"j", "++"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"test", "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"sterbez", ",", 
             RowBox[{
              RowBox[{"eta", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "\[Rule]", 
              RowBox[{"sterowanie", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}], ";"}], ",", 
          RowBox[{
           RowBox[{"lstrona", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"lstrona", ",", 
              RowBox[{"{", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"eta", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", "t"}], "]"}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"pstrona", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"pstrona", ",", 
              RowBox[{"{", 
               RowBox[{"sterowanie", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"q01", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"eta", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{"t", "\[Rule]", "0"}], "}"}]}], ")"}], "\[Equal]", 
              "0.01"}]}], "]"}], ";"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rownanie", " ", "=", " ", 
       RowBox[{"Apply", "[", 
        RowBox[{"Equal", ",", " ", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"lstrona", ",", " ", "pstrona"}], "}"}], "]"}], ",", "1"}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tosolve", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"rownanie", " ", "/.", 
          RowBox[{"sterbez", "~", "Join", "~", 
           RowBox[{"{", 
            RowBox[{"l", "\[Rule]", " ", "0.1"}], "}"}]}]}], ")"}], " ", "~", 
        "Join", "~", " ", "q0", "~", "Join", "~", "q01"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rozwiazanieu", " ", "=", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"tosolve", ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", 
           SubscriptBox["\[Theta]", "0"], ",", 
           SubscriptBox["\[Theta]", "u1"], ",", 
           SubscriptBox["\[Phi]", "u1"], ",", 
           SubscriptBox["\[Theta]", "u2"], ",", 
           SubscriptBox["\[Phi]", "u2"], ",", 
           SubscriptBox["r", "1"], ",", 
           SubscriptBox["r", "2"]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", " ", 
         RowBox[{"Method", "\[Rule]", "Automatic"}], ",", " ", 
         RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "rozwiazanieu"}], "\[IndentingNewLine]", ")"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wyrysuj", "[", 
    RowBox[{
    "rozwiazanieu_", ",", " ", "w_", ",", "wd_", ",", "tmax_", ",", "anim_"}],
     "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{"wd", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "/.", "rozwiazanieu"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t\>\"", ",", "\"\<ex\>\""}], "}"}]}]}], "]"}], " ", "//",
        "Print"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"wd", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "/.", "rozwiazanieu"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t\>\"", ",", "\"\<ey\>\""}], "}"}]}]}], "]"}], " ", "//",
        "Print"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}], ",", "  ", 
             RowBox[{
              SubscriptBox["\[Theta]", "u2"], "[", "t", "]"}]}], "}"}], " ", "/.",
            "rozwiazanieu"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t\>\"", ",", "\"\<skrecenie\>\""}], "}"}]}], ",", " ", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", " ", "Blue"}], "}"}]}], ",", " ", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(u1\)]\)\>\"", ",", "  ", 
            "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(u2\)]\)\>\""}], "}"}]}]}],
         "]"}], " ", "//", "Print"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["\[Phi]", "u1"], "'"}], "[", "t", "]"}], ",", 
             "  ", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Phi]", "u2"], "'"}], "[", "t", "]"}]}], "}"}], 
           " ", "/.", "rozwiazanieu"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t\>\"", ",", "\"\<predkosc\>\""}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", " ", "Blue"}], "}"}]}], ",", " ", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(u1\)]\)\>\"", ",", "  ", 
            "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(u2\)]\)\>\""}], "}"}]}]}], 
        "]"}], " ", "//", "Print"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["r", "1"], "[", "t", "]"}], ",", "  ", 
             RowBox[{
              SubscriptBox["r", "2"], "[", "t", "]"}]}], "}"}], " ", "/.", 
           "rozwiazanieu"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<t\>\"", ",", "\"\<r\>\""}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", " ", "Blue"}], "}"}]}], ",", " ", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(r\), \(1\)]\)\>\"", ",", "  ", 
            "\"\<\!\(\*SubscriptBox[\(r\), \(2\)]\)\>\""}], "}"}]}]}], "]"}], 
       " ", "//", "Print"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"krzywa1u", "[", "t_", "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], " ", ",", 
          RowBox[{"y", "[", "t", "]"}]}], "}"}], " ", "/.", " ", 
        "rozwiazanieu"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xu", "[", "t_", "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], "/.", "rozwiazanieu"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "  ", ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yu", "[", "t_", "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", "[", "t", "]"}], "/.", "rozwiazanieu"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "  ", ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"x1u", "[", "t_", "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], "+", 
             RowBox[{"l", "*", 
              RowBox[{"Sin", "[", 
               RowBox[{
                SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "]"}]}]}], 
            ")"}], " ", "/.", " ", "rozwiazanieu"}], "  ", "/.", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"l", "\[Rule]", " ", "0.1"}], ",", " ", 
            RowBox[{"R", "\[Rule]", " ", "0.03"}]}], "}"}]}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"y1u", "[", "t_", "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"y", "[", "t", "]"}], "-", 
             RowBox[{"l", "*", 
              RowBox[{"Cos", "[", 
               RowBox[{
                SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "]"}]}]}], 
            ")"}], " ", "/.", " ", "rozwiazanieu"}], "  ", "/.", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"l", "\[Rule]", " ", "0.1"}], ",", " ", 
            RowBox[{"R", "\[Rule]", " ", "0.03"}]}], "}"}]}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"krzywasu", "[", "t_", "]"}], " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x1u", "[", "t", "]"}], ",", " ", 
           RowBox[{"y1u", "[", "t", "]"}]}], "}"}], " ", "/.", " ", 
         "rozwiazanieu"}], ")"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"x2u", "[", "t_", "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], "+", 
             RowBox[{"2", "l", "*", 
              RowBox[{"Sin", "[", 
               RowBox[{
                SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "]"}]}]}], 
            ")"}], " ", "/.", " ", "rozwiazanieu"}], " ", "/.", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"l", "\[Rule]", " ", "0.1"}], ",", " ", 
            RowBox[{"R", "\[Rule]", " ", "0.03"}]}], "}"}]}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"y2u", "[", "t_", "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"y", "[", "t", "]"}], "-", 
             RowBox[{"2", "l", "*", 
              RowBox[{"Cos", "[", 
               RowBox[{
                SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "]"}]}]}], 
            ")"}], " ", "/.", " ", "rozwiazanieu"}], " ", "/.", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"l", "\[Rule]", " ", "0.1"}], ",", " ", 
            RowBox[{"R", "\[Rule]", " ", "0.03"}]}], "}"}]}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"krzywa2u", "[", "t_", "]"}], " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x2u", "[", "t", "]"}], ",", " ", 
           RowBox[{"y2u", "[", "t", "]"}]}], "}"}], "/.", " ", 
         "rozwiazanieu"}], ")"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xpu", "[", "t_", "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"x1u", "'"}], "[", "t", "]"}], " ", "/.", "rozwiazanieu"}],
          ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ypu", "[", "t_", "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"y1u", "'"}], "[", "t", "]"}], " ", "/.", " ", 
          "rozwiazanieu"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"vu", "[", "t_", "]"}], " ", "=", " ", 
       RowBox[{"Re", "[", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"xpu", "[", "t", "]"}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"ypu", "[", "t", "]"}], ")"}], "^", "2"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"krzywadu", "[", "t_", "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xd", "[", "t", "]"}], ",", 
         RowBox[{"yd", "[", "t", "]"}]}], "}"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"krzywadu", "[", "t", "]"}], ",", 
           RowBox[{"krzywa1u", "[", "t", "]"}], ",", " ", 
           RowBox[{"krzywa2u", "[", "t", "]"}], ",", " ", 
           RowBox[{"krzywasu", "[", "t", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{"1", "tmax"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Black", ",", "Thick"}], "}"}], ",", "Blue", ",", 
            "Green", ",", "Red"}], "}"}]}]}], "]"}], " ", "//", " ", 
       "Print"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"a1", "=", 
       RowBox[{"Animate", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Show", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"vu", "[", "t", "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
              " ", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"AxesLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<t\>\"", ",", "\"\<v\>\""}], "}"}]}]}], "]"}], 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PointSize", "[", "Large", "]"}], ",", "Red", ",", 
               RowBox[{"Point", "[", 
                RowBox[{"Dynamic", "[", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", 
                   RowBox[{"vu", "[", "t", "]"}]}], "}"}], "]"}], "]"}]}], 
              "}"}], "]"}], "\[IndentingNewLine]", "}"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"curvsu", " ", "=", " ", 
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"krzywasu", "[", "t", "]"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"curv1u", " ", "=", " ", 
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"krzywa1u", "[", "t", "]"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"curv2u", " ", "=", " ", 
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"krzywa2u", "[", "t", "]"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"PlotStyle", "\[Rule]", "Yellow"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"curvd", " ", "=", " ", 
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xd", "[", "t", "]"}], ",", 
           RowBox[{"yd", "[", "t", "]"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"krzywa1u", "[", "t", "]"}], ",", 
           RowBox[{"krzywadu", "[", "t", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Black"}], "}"}]}], ",", " ", 
         RowBox[{"Axes", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"True", ",", " ", "True"}], "}"}]}], ",", " ", 
         RowBox[{"AxesOrigin", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], " ", "//", " ", 
       "Print"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p1x", "[", "t_", "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], "+", 
            RowBox[{"0.05", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{
                SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "+", 
               RowBox[{
                SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}]}], "]"}]}]}], 
           ")"}], "/.", "rozwiazanieu"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p1y", "[", "t_", "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"y", "[", "t", "]"}], "+", 
            RowBox[{"0.05", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{
                SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "+", 
               RowBox[{
                SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}]}], "]"}]}]}], 
           ")"}], "/.", "rozwiazanieu"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p2x", "[", "t_", "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], "-", 
            RowBox[{"0.05", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{
                SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "+", 
               RowBox[{
                SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}]}], "]"}]}]}], 
           ")"}], "/.", "rozwiazanieu"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p2y", "[", "t_", "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"y", "[", "t", "]"}], "-", 
            RowBox[{"0.05", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{
                SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "+", 
               RowBox[{
                SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}]}], "]"}]}]}], 
           ")"}], "/.", "rozwiazanieu"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p3x", "[", "t_", "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x2u", "[", "t", "]"}], "+", 
            RowBox[{"0.05", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{
                SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "+", 
               RowBox[{
                SubscriptBox["\[Theta]", "u2"], "[", "t", "]"}]}], "]"}]}]}], 
           ")"}], "/.", "rozwiazanieu"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p3y", "[", "t_", "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"y2u", "[", "t", "]"}], "+", 
            RowBox[{"0.05", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{
                SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "+", 
               RowBox[{
                SubscriptBox["\[Theta]", "u2"], "[", "t", "]"}]}], "]"}]}]}], 
           ")"}], "/.", "rozwiazanieu"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p4x", "[", "t_", "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x2u", "[", "t", "]"}], "-", 
            RowBox[{"0.05", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{
                SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "+", 
               RowBox[{
                SubscriptBox["\[Theta]", "u2"], "[", "t", "]"}]}], "]"}]}]}], 
           ")"}], "/.", "rozwiazanieu"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p4y", "[", "t_", "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"y2u", "[", "t", "]"}], "-", 
            RowBox[{"0.05", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{
                SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "+", 
               RowBox[{
                SubscriptBox["\[Theta]", "u2"], "[", "t", "]"}]}], "]"}]}]}], 
           ")"}], "/.", "rozwiazanieu"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a2", "=", 
       RowBox[{"Animate", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Show", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "curvsu", ",", " ", "curv1u", ",", " ", "curv2u", " ", ",", " ", 
             "curvd"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Graphics", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "Large", "]"}], ",", "Red", ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"Dynamic", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"x1u", "[", "t", "]"}], ",", 
                    RowBox[{"y1u", "[", "t", "]"}]}], "}"}], "]"}], "]"}]}], 
               "}"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Graphics", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "0.02", "]"}], ",", " ", "Black", 
                ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"Dynamic", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"xd", "[", "t", "]"}], ",", 
                    RowBox[{"yd", "[", "t", "]"}]}], "}"}], "]"}], "]"}]}], 
               "}"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Thickness", "[", "0.006", "]"}], ",", "Green", ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Line", "[", "\[IndentingNewLine]", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xu", "[", "t", "]"}], ",", 
                    RowBox[{"yu", "[", "t", "]"}]}], "}"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x2u", "[", "t", "]"}], ",", 
                    RowBox[{"y2u", "[", "t", "]"}]}], "}"}], "]"}]}], 
                  "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
                 "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Thickness", "[", "0.009", "]"}], ",", "Red", ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Line", "[", "\[IndentingNewLine]", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p1x", "[", "t", "]"}], ",", 
                    RowBox[{"p1y", "[", "t", "]"}]}], "}"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p2x", "[", "t", "]"}], ",", 
                    RowBox[{"p2y", "[", "t", "]"}]}], "}"}], "]"}]}], 
                  "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
                 "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Thickness", "[", "0.009", "]"}], ",", "Red", ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Line", "[", "\[IndentingNewLine]", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p3x", "[", "t", "]"}], ",", 
                    RowBox[{"p3y", "[", "t", "]"}]}], "}"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p4x", "[", "t", "]"}], ",", 
                    RowBox[{"p4y", "[", "t", "]"}]}], "}"}], "]"}]}], 
                  "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
                 "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"anim", ",", 
        RowBox[{"Print", "[", "a1", "]"}], ",", "0"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"anim", ",", 
        RowBox[{"Print", "[", "a2", "]"}], ",", "0"}], "]"}], ";", 
      "\[IndentingNewLine]", "0"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6706077250002394`*^9, 3.67060772640132*^9}, {
   3.6706077838446054`*^9, 3.6706079184883065`*^9}, {3.670607974301499*^9, 
   3.670608004265213*^9}, {3.670608079469514*^9, 3.6706080911011796`*^9}, {
   3.6706081848975444`*^9, 3.6706081852325635`*^9}, {3.67060824548901*^9, 
   3.670608265400149*^9}, {3.670608338081306*^9, 3.670608345971757*^9}, 
   3.670608931597253*^9, {3.67060898522132*^9, 3.6706090021172867`*^9}, {
   3.6706090421645775`*^9, 3.670609044708723*^9}, {3.67060907542548*^9, 
   3.670609087393164*^9}, {3.6706091207890744`*^9, 3.6706091770662932`*^9}, {
   3.6706093345333767`*^9, 3.670609350000409*^9}, {3.6706093983215103`*^9, 
   3.670609450100616*^9}, {3.670609524732771*^9, 3.67060974369322*^9}, {
   3.670609815699361*^9, 3.670609830651391*^9}, {3.670609930050599*^9, 
   3.670609934348607*^9}, {3.6706099855557137`*^9, 3.6706100147437773`*^9}, {
   3.6706104826268454`*^9, 3.670610608954521*^9}, {3.670610645201597*^9, 
   3.670610808265952*^9}, {3.6706108838072934`*^9, 3.6706108839292936`*^9}, {
   3.6706109715684805`*^9, 3.670610975414489*^9}, {3.6706110077265654`*^9, 
   3.6706110577016706`*^9}, {3.6706111678179097`*^9, 3.6706111697149134`*^9}, 
   3.670611255234092*^9, {3.670611298160185*^9, 3.670611336762272*^9}, {
   3.6706113727353525`*^9, 3.6706113761013584`*^9}, 3.6706145119674115`*^9, {
   3.6734398247621794`*^9, 3.6734400268287373`*^9}, {3.673440302715517*^9, 
   3.6734403108309813`*^9}, {3.6734404843799076`*^9, 3.67344052078299*^9}, {
   3.673440598076411*^9, 3.6734406217717657`*^9}, {3.6734408370550795`*^9, 
   3.6734408670557957`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xd", "[", "t_", "]"}], ",", 
     RowBox[{"yd", "[", "t_", "]"}]}], "}"}], "=", 
   RowBox[{"kolo", "[", 
    RowBox[{"t", ",", "0.5", ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"td", "[", "t_", "]"}], "=", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], ",", 
     RowBox[{"y", "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["\[Theta]", "u2"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["\[Phi]", "u1"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["\[Phi]", "u2"], "[", "t", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hd", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xd", "[", "t", "]"}], ",", 
     RowBox[{"yd", "[", "t", "]"}], ",", 
     RowBox[{"td", "[", "t", "]"}], ",", 
     RowBox[{"wirowanie", "*", "t"}], ",", 
     RowBox[{"wirowanie", "*", "t"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"test", ",", "sterowanie"}], "}"}], "=", 
   RowBox[{"wyliczSterowanie", "[", 
    RowBox[{"hd", ",", "h", ",", "1", ",", "0.5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"test", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0.1"}], ",", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "0"], "[", "0", "]"}], "\[Equal]", "0.4"}], 
     ",", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "u1"], "[", "0", "]"}], "\[Equal]", "0.4"}], 
     ",", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Phi]", "u1"], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "u2"], "[", "0", "]"}], "\[Equal]", " ", 
      "0.4"}], ",", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Phi]", "u2"], "[", "0", "]"}], "\[Equal]", "0.4"}], 
     ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["r", "1"], "[", "0", "]"}], "\[Equal]", "0.02"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["r", "2"], "[", "0", "]"}], "\[Equal]", "0.02"}]}], 
    RowBox[{"(*", 
     RowBox[{",", 
      RowBox[{"WhenEvent", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "u2"], "[", "t", "]"}], ">", "1.4"}], ",", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "u2"], "[", "t", "]"}], "\[Rule]", 
         "1.35"}]}], "]"}], ",", 
      RowBox[{"WhenEvent", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}], ">", "1.4"}], ",", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}], "\[Rule]", 
         "1.35"}]}], "]"}]}], "*)"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rozwiazanieu", "=", 
   RowBox[{"rozwiazRownania", "[", 
    RowBox[{"sterowanie", ",", "test", ",", "q0", ",", "tmax"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wyrysuj", "[", 
   RowBox[{"rozwiazanieu", ",", "h", ",", "hd", ",", "tmax", ",", "True"}], 
   "]"}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.669296714795369*^9, 3.6692968289880733`*^9}, {
   3.6692968987554345`*^9, 3.669296912210871*^9}, {3.669297044247342*^9, 
   3.669297049484518*^9}, 3.6692971550440426`*^9, {3.669297323316671*^9, 
   3.6692973287158575`*^9}, {3.669297402425336*^9, 3.6692974167968264`*^9}, 
   3.669297554925408*^9, {3.669300583005519*^9, 3.669300638641673*^9}, {
   3.669300678517783*^9, 3.6693006836997995`*^9}, {3.6693007748970585`*^9, 
   3.669300780558074*^9}, {3.6693015321152325`*^9, 3.669301540852255*^9}, {
   3.669301586523384*^9, 3.6693016256234956`*^9}, {3.669301676442641*^9, 
   3.6693016774746437`*^9}, {3.669302469783453*^9, 3.6693024798674803`*^9}, {
   3.66930265372501*^9, 3.6693026845600977`*^9}, {3.669302940413848*^9, 
   3.6693029729899416`*^9}, {3.669303027476097*^9, 3.669303043545143*^9}, {
   3.6693030868692627`*^9, 3.669303091229277*^9}, {3.66930314727744*^9, 
   3.669303170152508*^9}, {3.6699112173121514`*^9, 3.669911225133175*^9}, {
   3.669911277719341*^9, 3.6699112848313646`*^9}, {3.6699113334505177`*^9, 
   3.669911349515568*^9}, {3.6699113938467083`*^9, 3.6699117332207794`*^9}, {
   3.669911773975907*^9, 3.6699117898519545`*^9}, {3.669911824910058*^9, 
   3.669911843228121*^9}, {3.669911897082301*^9, 3.669911916286355*^9}, {
   3.6699119871025677`*^9, 3.6699119897315764`*^9}, {3.6699121208199706`*^9, 
   3.6699121837281647`*^9}, {3.6699123041325397`*^9, 
   3.6699123828187904`*^9}, {3.669912421890927*^9, 3.6699124552410374`*^9}, {
   3.669912517680228*^9, 3.669912529670263*^9}, {3.6699127617380095`*^9, 
   3.669912767206029*^9}, {3.669913294022702*^9, 3.6699132974617143`*^9}, {
   3.669913562094559*^9, 3.6699135659865704`*^9}, {3.6699136230937567`*^9, 
   3.669913656151861*^9}, 3.6699136982889996`*^9, {3.6699137355101194`*^9, 
   3.669913744177147*^9}, {3.6699138560715103`*^9, 3.669913858399518*^9}, {
   3.669914056873169*^9, 3.6699140594391794`*^9}, {3.6699140936462927`*^9, 
   3.6699140959273005`*^9}, {3.670607734571787*^9, 3.6706077377899714`*^9}, {
   3.6706079282608657`*^9, 3.670607933037139*^9}, {3.670607980891876*^9, 
   3.6706080594363685`*^9}, {3.670608270793457*^9, 3.6706083089736414`*^9}, {
   3.6706083500039883`*^9, 3.6706083745443916`*^9}, {3.6706084094053855`*^9, 
   3.6706085056488905`*^9}, 3.67060859778216*^9, {3.670608628599923*^9, 
   3.6706086401765847`*^9}, 3.6706100505928555`*^9, {3.6706114069684343`*^9, 
   3.6706114305624914`*^9}, {3.6706114606455526`*^9, 3.670611461563555*^9}, {
   3.670611501063637*^9, 3.6706115165636706`*^9}, {3.6733630746043215`*^9, 
   3.6733630815277176`*^9}, {3.673363137371912*^9, 3.6733631377499332`*^9}, {
   3.67344065506267*^9, 3.6734407455448456`*^9}, {3.673440811306607*^9, 
   3.6734408134537296`*^9}, {3.6734409865096283`*^9, 3.673440987821703*^9}, {
   3.673441970974936*^9, 3.67344199534333*^9}, {3.6734420288512464`*^9, 
   3.673442029811301*^9}, {3.6734441845215435`*^9, 3.6734441872727013`*^9}, {
   3.673444727721613*^9, 3.6734447389342546`*^9}, {3.673446511775655*^9, 
   3.673446515674878*^9}, {3.6739547568711047`*^9, 3.673954782473569*^9}, {
   3.673954865654327*^9, 3.673954912721019*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"Csc", "[", 
     RowBox[{
      SubscriptBox["\[Theta]", "u2"], "[", "t", "]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}], "]"}], " ", 
    SuperscriptBox[
     RowBox[{
      SubscriptBox["r", "1"], "[", "t", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SubscriptBox["\[Eta]", "2"], "[", "t", "]"}], "3"]}], 
   SuperscriptBox[
    RowBox[{
     SubscriptBox["r", "2"], "[", "t", "]"}], "2"]]}]], "Print",
 CellChangeTimes->{
  3.6733630908632517`*^9, {3.673440686477467*^9, 3.6734406963660326`*^9}, {
   3.6734407373103743`*^9, 3.673440747610964*^9}, 3.6734408148898115`*^9, 
   3.673440874421217*^9, 3.6734409904138513`*^9, {3.673441976590257*^9, 
   3.6734419961073737`*^9}, {3.6734441881877537`*^9, 3.6734442079738855`*^9}, 
   3.6734444102114525`*^9, 3.6734446419747086`*^9, {3.673444688539372*^9, 
   3.6734447404073386`*^9}, 3.6734450149780436`*^9, 3.6734465167309384`*^9, 
   3.673954783145608*^9, 3.6739548788270802`*^9, 3.673954915117156*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"True"},
      {"False"},
      {"False"},
      {"True"},
      {"True"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6733630908862534`*^9, {3.673440686478467*^9, 3.6734406964040346`*^9}, {
   3.6734407373483768`*^9, 3.673440747647966*^9}, 3.673440814926814*^9, 
   3.673440874457219*^9, 3.6734409904508533`*^9, {3.6734419766302595`*^9, 
   3.6734419961453757`*^9}, {3.6734441882257557`*^9, 3.6734442080178876`*^9}, 
   3.6734444102494545`*^9, 3.6734446420107107`*^9, {3.6734446885753736`*^9, 
   3.673444740445341*^9}, 3.673445015016045*^9, 3.673446516768941*^9, 
   3.6739547832936163`*^9, 3.6739548788630824`*^9, 3.673954915155158*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
uS9v4ffzxEqoFtsaFlW9vZ2009GOPbWYTUTtda1O0uhajmwthkX90r32hbRd
8bxYLcYfs4Onpoe08Km96zWYZ5xB/+9+0qlLtA01mFrhl73VlOPk/lvz3lRj
GcWM8/N0pI0l3wZVY0tlijVSzKRLenuOVGNnKu1vXN5GeqRSl60aK6xO00vn
IC058oepGmOof8fzmYe0+f0x1mrMqmGtf5sgaTqBHQzVWM0rmXwNEdJMxy9P
VGE8zZbuoWKkbdr0y6uwsaGxGnU10lZr12NfYOgoX1iIFmnDjV69F1jauJb+
Cz3Syu32W15gC1P+vHOGcP8MdxorMYPZggHJ86TZc4cfV2L5v7/nXzIhHRlF
m12J0SyyeqRZkHa7OJ1eiZkvqyh9ukQ63bE8shJ7seZCx3oV5rk3LSuxSL5/
+p0RpEVNApQrsMSWluHG23Deu7atFVimf5r/87ukC0fmmsuxAimn7bkJ/+8H
CS7HKr+rPEpMIR3Wgx8rxxqjtyvdvE9awtiIoxxrVxnq8M6E6z/M0JdjPTNl
V6/mkKZ2a9CVY6OZYWtGeaT9xI+sP8dUJTmffm8ijaZ55ZRha4oyTKP0SmRe
8VquBGOa3HjwmZl04dgD2hKM637HoaZtpCmPivuLMRG97LeVHKTlhiveFWNS
654X83hIUwVYK4qxI0Xqf1MESNtlLt0qxlQv8t2O3EE6luOgajFmwD4h6r+L
NHtJU18RZvKyptJ+N+nxdNorRVilttaVGTXSqW21loWYm+nlxn83SL8+zDCW
h7FlTg4qR5JOP6byLg8rHHbfvBZNumt+OjMP05Fc3tEcS9rq7UnzPOynE1WZ
NYk0a9jbzcdYWCmj2el7sL4ciXuMiS3G+Cc/IG3O5SnyGGs4zpv6/SFptJSz
7hFmGfqgUvQxaa9lq9BHmF7u1wLtFtLSCRP2OdjkuOXbmDbSqm6HJHKwSJmx
n586SGsNSvzLxvZ4ODMIfCaNlah0ZmOvKhckLLtJN0Rfe5KNWa0GnszpI53/
/Zp3NraB0FqPD5Feczl4KBtLD4uiyoyR1hPGhh9ix99yZHpMkl45aRb9EJOc
0U24z6pMeM9J78uZWNPBT6WD7KRD+tk7MzAbX9OO3TykXSosQAZGUzc04yBA
OvyPZuUDLJNiv61kB2mRSqr6A0xZfW7/312kOWPuDaRjPbd8dY7vIS090B6Y
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
O1JaSA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"ex\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.6733630908632517`*^9, {3.673440686477467*^9, 3.6734406963660326`*^9}, {
   3.6734407373103743`*^9, 3.673440747610964*^9}, 3.6734408148898115`*^9, 
   3.673440874421217*^9, 3.6734409904138513`*^9, {3.673441976590257*^9, 
   3.6734419961073737`*^9}, {3.6734441881877537`*^9, 3.6734442079738855`*^9}, 
   3.6734444102114525`*^9, 3.6734446419747086`*^9, {3.673444688539372*^9, 
   3.6734447404073386`*^9}, 3.6734450149780436`*^9, 3.6734465167309384`*^9, 
   3.673954783145608*^9, 3.6739548788270802`*^9, 3.6739549152231617`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwk23c8Vm0YB3CroiTJiCQkK4miZNznUbJCUsnOyp5PVkZmVvZehSYaKGTU
fVBmkSQju5BkJbwSes+5++v9fD+/67ru69zn9NQ/r4Clq94VOhoamnOMNDTk
fwXj1+/e5isFZZuS9VIzq7AXjGL7nO3iMRpe0wcMeZVYnc/Te6J2udg11Z/T
oYUvsEYpd9vNdsVYuYsCY15DOdYc06m+ZItjtvH0mm0Cz7AW+dCqadv3mDbT
/Jamtw+wR4q7rssWd2ATOnc2VI/dx372W+d6FH3ANl65Xdd9cBe7zsP4ZSHv
I+YWO5XSl5aHpafr2M7F9mBlckfEHN1TsdbEfvdJ22GMpgBLO/dxJx6ZkdaS
LD2CUQzWf1Tdt8Yl7DCjo8WEc4V8/xzzwKlbEv2oRaPYvPDBYJaGUHzjtAyc
z/uK2aU5qfBxJ+P5HIM6CXxjWMHP3ynKZ1NxlfEbw4dzxjC7L7xWQv7p+M2w
HhrX9HFMd6GZx6s6G9/92vfUTOw3bF76G33ZeD5ek7S/K2bbJFZZLF7dOXAH
N7N8Zy0RNYmx5lX73n5/F79HyxfuGPYd052v8rMquI9LU+qav/v+wISSlSue
ihTimq+26EzYzmF2WnU9yVeKcem/lkuc83OYRMJbpUSOEjyG/3L7fsV5zFeC
XkzEqwT3sKz2vPBmHuu0VjPslirFVSbc3pR3/cQuDPIMjMU8w+Ui+Ha3717A
nnVQjr8ZeoZLiL5znDBZwD5z7QnOk3yO73IQ2cU1voDpfjF9adP8HP8yM2jh
s/QLGwka1G8aK8O7426WJ5xYxN79/aIqIVKOtx4+wVQYsIjZMe9arLYtx5+5
p5T0bVrCihScbzl+LccfsJ1kWNBYwgoqzodm8FXgWc/nLm2NW8LYJdh+MhhU
4MFLmn/lOZcxxcKHc6UNFbhH2oreeaNlzC2A/vT67wrc7viDB463l7HwsKMh
tyRe4LrXaHVyhP/DZrly7v+MeYHzr7/IWT+2goV/XX/tK1+Js9++Ms/ht4Kl
ZI7y/7WoxBmxXSqS+ArGGi/9hjayEp8LcvlhpvYb6ziXW5v6vhL/IsCLed/8
jfm/9KKR/lmJd9e3JMW//41VDpywNdtZhUOGA/K1l1axhOaac6HaVfiz+52x
vdmEz1Ncwuyr8AeqQaPzw6uYj5A428GwKjwusj9SwO4PNq/0GfiXV+EhYlED
Jx7/wcbuK4hLvavCvVqPSenN/8EeW2wJyRmtwk2Zk3pCfNYwhonPR0sZq3Hd
J9jB7JdrWHOH2WtLnmpcRWfm+nOadaw5QkF6WLwal5vL6nyrso6l8KdsPihf
jUskqAuPRa5jzHPOVZrq1Ti/9PK1tXfr2EhEXv3Ji9U4e+fdNvadG5g6rh3D
ZVGNM149J3Do4gZGuWHn1eZYja/t+utxOnMDm9yAo3ae1fh82eNm08ENrOyg
Ic9sQDU+dtGI10vgL1Y2He1kcaMa713e4hZ35S/mH6y/p+lmNf42vfz1g8K/
WN7YZqP9idU4lLPiwmf+Yiluopd9U6vxPqfI8h+7aSg0ubw6HRnV+Hmly8P/
ydNQIrPZVcWyq/G27ceYGExpKD4OHY5ROdV45xm2jHZ/GopJ8bd9S4R7o2aF
M3NoKHIW4jlxhIeaWsutXtJQMmjq9xsS/WObHqpIDtBQSu460hhkVuNTp0I/
rvyhoWh5ebjEpRHPE3zZ8vUeWgo/VhzxN6kaX8YVfsYq0FJq3zyzfRpHPP86
V5CBMS3l5aEfUrejqnE6xUWW/X60FFHtKObOUOK+fDtuzWTRUmgk/Li0iftg
qXwsUVlNS2ENVz3D5lWN71qOrAn5TEtx8q+6I+RSje+WuaKpvUpL0fXM3hdx
pRrnoyr3cfHQUcIM7rUqmlTj4rO/lx8b0lEqVdMCnqhV41IS3Te8r9FR5qsl
T7goVuPHHJ6xn8yko4zopZfHSlXjJyccjvT00lG6xO5FLnJW4+pCanX5K3QU
N7ub3spM1biO5X5dp930FErGJ4uV1SrccKjfmdaAnsKwelqmeKAKN+OtXHvr
TU9x2+F5r4z4/qyNUm6mpdNTmoNu/pJ8WYW7dWsVHuwh8kcut2Iyq/DI9ldj
F/UZKEICN6/K6hDfM3PWVX4vBkrZz9MJ4vJVeIqmF92PVAYKhT5vZ+GBKjy3
UZI/6BMDxXpGWFTrTyVeAXONiy5sopg/zmdzzq/Ex58Gd27obaaMXH3Rwt//
Ap+aNrVooW6mWM+Nn2+ofYHPi8vPJydtprDK2FVyPXiBrz1Y2C7WuZnCvOeZ
bLvrC5w910rj/LktFMaYIxdq/lbgJ+NP1z48y0hRH3jgqLmrAg/SLCvsdGGk
1B7iv3d+qRyHm/Ynr8cyUuwUblw62FOOy/vT2Jx/R+RJCfVaWeX4UfuabX/V
mSissemtoXzluNAp6Uv6J7dS+NnP8+/mL8M3/8c7yyDLTHkjZS0Qt/MZfuXw
6nbp7ayUDOlpzuzPj3Ct/oj7u/lYKaKcgSeupzzCZSI4lGgOs1IqF8XWknQe
4QzDUk7vdVkpJTkHnlx6XYTfibNtdU5hpbCqrs35FBfiwzNd4UV7dlLyfjHe
109+iBs+Lv67X5yNYr7woPlj4l2cYqCUvk2BjdKrE8brcuEuLsrwVvLXGTaK
FNuDZ2Zcd/EV4wnTemei/kL0jMrtO3jatr0vzUvZKHmcl0/JleTjHx2ifW7J
7aK4sZXu8GzNxbXFrvzkVGOnBIWd8hc/lImv3vSsGdRnp9Rmc9fZd2TgBbM3
btyzYaeUjCzZXfDIwBnKHnAfCWeniH6LXZWA6Xg1mFTWbmCnSDFntc0YpuHC
FxyTQk9xUJqVh56UlibjXRV+JprnOSgrSrv8iy8n48HcMcI7rTgodvqUCgOW
ZHxg6HH17RAOCiOL+ePHzkl4sv3sl6o6DgpN3pDbRZlEnCbQ/eg8xknhF4gf
+1wfiz8dDV6vOMtJoZn6eZJJJhY3VklqCrjMSXGTdFK98SAGr2B6brwtkJPC
Kvit3jL+Ju6UshgqDDkpUnKLLFluUXhfoXeXiSIXhfErfTKf2w08nDny9n4t
LkqCAJdQ2VIYLuOaYTdlzEXJs8zFIvzD8ASZqjVvPy6KXMe2PyOxobgqviqU
XM1F2Z2x654SHow/6wrwbJHbTZkcHjyxUuGPF9ywtvyisZuinq5S5Nrjh98+
dubsH6PdFPPLMza3V33x6IzdYocCdlN6D71JYNO4hluZPB9IqNtNmY+i3J3Z
5IWzj02eMtDkprDvVyljXXHFt6a+l3I35qao5IvX6sS44DSqFXujnbgpI91f
VwIOOOPTD0P/q4njplA0/cbibBzwBke+R/s+clOCvv3nnSh4Bff6dZ7tmzEP
JUiutNFpSR93uif/968TD4XGjDlZsuwCbnlRYHr3dcJFrnSv/fRwnRezDZp5
RL0uo+MpTS1cxC/q2tMxIo/a+UzB7zjOJ+Fm07REuENU8gDbYZx9UP/8yOY9
FJrJ6K3HR/hwGkzoEJsYYZogSjgfH9ZLh494OhPWktd8efIk1v78flvcdcIH
x0c5a05jb6xjqh/GE6YesV/cr4GVNhqm9JUSdt1/tqXpLBYdvaimtLyHEhTP
pTJ8SB9TYBMvZgjkpVCMvoU+KDPH2mmNWtrieSm1PKPxExctMPOfUV/T8ngp
QXc2Xf75ywIL6/jOJVZP5MaMr8KErbD2uMIg7U17KZQdUQJXba5g5tf7sjg5
91KCJo41DM1ewRacmcqHhfdSaNQEis572GBc2vbf3dUJS9g7eHjZYubbxPTS
bhKWM692NbDHFlYNnC7nELYV7/jdYo+FTUWGiz4hrM55ukXOAStsmayubidc
EDh1kcURW4go2D+8k49Cs7X28tYsJyzMu1epQJCPEgS/56UtO2GctowG7keJ
vMs85q6uM6agahdDf5GwwHND83VnLIxBdEkkg6hv1uI8Lu+KcS5e2vGzgHBU
577sUFes4GuEWHUVUX9/PLi61RVrq/9mqtVP5B1Ox4TF3DDzZ1w+HNOEjzfY
XdFwwxby1ZKG1viI3+uT0fF2bhhn8MNGN759lKBzBYbP7rphBW49IycO76PQ
vNn24xnuhimYb/lDR9lHoXxK7XjymZiH2R5OtSCs9XTbre3u2IJkuoYZlfBx
nw9pB9yxML4mK5FQwiOSpmmK7ljhunBG1T1i3jmFSxW27pjijP6zkHLivGpL
+yE/d6x9IPzdmUainlFnljuemFczQTP0jcit5Y53P3PHbjzi3PNwhbBmfKzp
a3csRvsuTyUDP4Xm5Kjfpo/uGJ/SR5lgDn5K7QLr0us5d+ybzI+68b1Ezuax
b3jNHSuRoD+rKcxPoZwq/3WAiYpdE9oz8FSSnxLU6N6RzU7FTvIetd91nMgl
V2JU9lGxbexnlr0xol/N4Pl+MSrWtc0qdECNqM9YP6dwhIrdpvdjVdYl7HXs
Yaw8FbP9k3TrvgFR33/Nee9JKpaiM/36mjkxb7vNzevqVKw2//SUth2x3zFT
cUUdKja9eJtV0I3ov22iZXieiu1WXzm27E30B8Tl9lyiYirZ50xbA4l8V2t5
pTEVc5stCr0dQfTXS4ZsmFGxHGWGImo8Mf93rOEjCyrWnGLaoZpOuPP7Qp0V
FVv8VrHMk0t4PcXs9BUqxq/AunfuATFfVm/8uA0V04qzP/X6KTGvcXNvFmGf
0Xr79ArC+W97XQnfk+FNcISEL2rPVhL9HRGeFVgjMa9JOczHmoqtfW4f2NVO
7Hd5wLHUkoqJSYrST34i5oPbj2zNqZh+cLDYy0Eib4vpuWVKxUK6Pp9NGCfm
Oe8VuWBExZ6KyHhZzxDOeXD0pj4V++wbmyO3RNhOfOOUHhXb3D5Rz7xOnOdc
NxeoTcWOCFC+jzAIUGoVGT5TiPuMblqQjWIXoFA2Bn4YKVKxCh4tE1NeIu+q
f1MlS8W+ON8PkRYivPvl7wJJKibPbvC+76gAJShOXVmNeL82tqVLTxQIH0/M
/c1JxZKqt/KGnCK8ZTzoFAsV+2H+yk78PGGPG225f9yx3WWc8RtGxLxXaupl
P90xlS1u5Z2WxPnlT69Yf3PHcp4I0vlRBSg0Jocv5X1wx7RWI7LfJhJe0Xv6
Od8d89EercvNJOZh0j0cqe7YvTz5yav5hJVaxdcj3LE11RkZ3lJi/mUNxk4n
d+xJsl67UwdhvjyhqiPu2OeJR4uUXuK8lkP7vPe7Y5vlN+3hGCH69QL45ne5
Y2YjL2xfzRF56+VPfItuGMuhvbQsOwQpQQu3TNxK3TDXxm9Hi7UFifftYdnP
74bVUh47SugLUihSxT5qzG4Ya43b3UIzQQrNppMMi7OuWEnxb7Z7roSnT3rb
ZbliCxnbFjISCR/L1DeadsG8HA+XhHwi/HwTh1WQM+bP6i2hb7qfQiMuqhHs
64BFG20+sO4kRKGhL1EPlrPGgBTz8ncPIUrQzde/A7daYz83sTV1+xO5OXt+
6oAVZlC6174khjC74sDmYCvsAKPsE6vHhGVbTsi9tcRqy61kW38Q/aFNE51X
LLBl1rrT6Q4HKDSfjRYYqaZY0UQjZxiVsEa0iO8+U8z05btvbr6E2UscdNpM
sDe2vVGa0YQj8lx2i5tgiXCubb2QcMJC5LlJI0zCiU/f+jvhUyvyd3wMMKsm
PxtpO2EKzddN3j3T5zFrRWGdZVfCStQprcLzmE1ph2yNN2Er8bBjNucxu+wD
m05HEH5NmTQe1cNcXN/fNXhA2EAoeWzgHObLtX80cIwwqy/foY9nMf+YtmaV
acIOtHTWRmexAFqfEqZFwoquTVFfdLCgH+8Ck+lFKDRS22til7SxcNyL76Eg
YdnWx/LCWliSbatxuzlhaGc+8kwdSxnwOJVsR9hN8Li3ujqWem7fQQM3wpLS
AStDaliGgsfqaCBh49+spSxq2O0dfJlLtwkbuqYW+JzGil64d/MOEk7PZGrw
OonVbeE+52goSqGxZDhYICmPTdyV1OyzIGyq53Uj9ATGTFE5peZAuBO/fvaz
HGbg4yq7349wOJdPUexxbG6ygbs/h3B26vfZrbLY3lbqF80RwjIjoZ9MpbCT
NpH9lZOilKBPXLwpeYcxO7rbXcI/CXvJqWyNksTK5Fsa6ejEKDSLDNyB1hLY
mUf7HlXvF6NU9v5l+Koiil2LeXdV3JbI7wwnMj/kx26LfnHKcCU8797GHrYP
e/PmvyubfQhPa0jY1+7FWNcFDb5EEu7IT9qkxYM9dL6mmFVEmCbQwOHpLuwd
U7ws43MyD8835GTDFu7fk/SqIVwrN64YxoqBoff8eu8IJ7Ti5V+3Yp90hDdt
nSWcJ/7jo+4GWJ1S2PBeJqxrvZ/myQrgjzj33/gGYUoJ05V9v4AT7v+9boc4
hYZfAG6KGwH0Uh/brkkTpqkpo9ZMQumdQWnfPQgHGf3l6WHEqxl7RJv8Cdce
T9Hs24qfpJGsuRdG2FyiS/wjM35hrn/4cgrps/JL+qy4V9txse7nhEscg3w3
duF/38TVPK8hHDmsNDXIjke+HNdOfE04Q0bauYoDz3yUTNX6SHj3VX7eK1z4
y6i5mvoFcr/vr3fG8uCng1V18lbJ/WJOimvvwdt9bo0E0B0k9pvVDWTixYdt
z2w6wUZY7v6p2957cTrVhzrF0oQzCqRy2Pnxm0obIzEnCPe+3S1tw4+zy168
6qBMmFHRY6WcHz8gRJ9x4Bzh2qfVbroCuDrd5dFsN8KUw3MXqYL4h9/lV6/5
EKaJyMqsEMSNfjJvvhREni96XfS3IO44Ui3OlkB4RUPU7Np+PA5yekQWk/N+
zxjbCeFcFc6bbV4Qnj/OZ50nhOc9eZNxCicsNVne0y2El+ZQX220k/PVTrFj
B/Au3/bNnrOEWYdseP8ewE2pBzL1lgkXcD/4flAYn7D3Pyi1QVi91U/rkjD+
n4G47o/tEsR9X7F4WSiMB+kGf2nmIGx37U13hzDOqN7r8WAv4d3OCfnLwjjP
8fBMi0OEKR2Gb4EIfldy8CAmS1gUPlWxEMElhGUgrxJh1t+80SEiuBLHly89
WoQjW5aO1Ing5r+UJHScCDOmPr98WBTfzkbT0eVBeGTnEytNUbxaqv6qcQDh
ghMZJtaiuO3ZMK4vNwi7HdHiCRDF2V1Ua+ziCCeY3/FNEcXrYhgvz6WR+9nN
OBSJ4i6PWum8cgnniXBOQlG8eVJHM7SEsK4J9varKO65ZecsUxV5Xi6t76Io
Lij8MTGhjtz37TtVBjH8vUqqLFcrYYPAsxq7xHB/q0t9tzpJn0nUERDDxUK4
A4T6yec5u+WgpBjendfP/+grYZ+crNcnxPBQ/NYb6WnCK7fqt6uI4VJDl+0q
F8l9FXJ3aIvhg2sCzNg66cdsIxfE8Og9Y8UNmw4R75em/4GxGH5c/sF5LRbC
GSaPcizE8DEDu/86OQnX3j22YiOGJ3qLZxvuIyy1vj3dUQwHadNgRISs/1t/
ylUM/1H29IuNFGG5nSc+u4vhGR/dwmfkCPdq1qtdFcNPLxwR91Am3DF07CZh
4p+ZbasahNWlmMupYnju4RfuwXqEC7Icv7mJ4Vo61zgYjQn7TKrru4jhv50U
quKsCE8aCqgQ5z+4uW7C4USef+RFma0Yfr4Ip8nxIGweNOdoJYbTtATfEwwg
rPtMTtFMDH/y7ZR64Q2yX+b4VgMx3Gjz5unDcWT9Rt87XTF8y4Hm+Io08nmb
XGLVxfCyU9FHlXLJ/oVyW0wMt7DU6nn9kNyPezlKVgxnCWbx0ywh6yWYZQ+K
4XYwqf5SHWHW9499OMRwjsELNkMt5P3Ket5nEsPr/3BuvdJJuPn+3//WRHHe
E9nnqF8JB11x6h8RxVsumS6t/CDMqO8d8kEU9/Lalxm4SNYzvvCrE8U7nt8d
idkkSbz/iiXDPFE8oPNK2C4WwjQ3jV3jRXHxnyKiWZyS5O/dL9rroniY5GPX
hyKEmxV3/TEQxeUKyzbqNAgzVjtv2yyKjzd53VHXI8xv7nh2XgRPmpBTfW9E
2Dxmw/+zCD69/1XsgCNhdaeD956I4Pm3G3j/iyXMestGS0sEzzGR6LmYRnj3
Cx2xoyJ4Bk9yYtltsr/YfI5bBI9LM99MLSacZ31H9Zsw7hv3Z266gzSPYIC/
MK53Xfr1l12Hie+J5fh8+gGcweyWfXsm4d1mEjL5+/HncfL9nXpSxPeySNv3
hg+3zGbZVK1PmObqx7gwPpyt4ItkvhFhSnj1nAof7lYXHeJqSda/CeVs2otL
LH4WY6YS1rWfXmvhxe8Z+vmcTiQ8/xZe/MSDpwi95Kh8T7hW+K05Ixd+SjoB
y/1IOEica7WNE19QsrYP7yHn8+/NSebEdS8xv7owTNi8YDiOjxNnjjax/jlL
1j9eTZDlwMPm1p6Js0gT99PHHXJ1F+5RraR7S4twrfiL3P2seLlRE12fLmH+
5Oi53h348qpuOftFwpSdWQ0OO/BrCtY8MaaEaRTHshJY8Osvo8d8Xch6Le6R
H8x4BOzxMUgg62MKJl4x4c1mFgdTUshcLVXEhAnf+ndq8H0GeV6DesoqIx6D
bZxUyyftIMQmx4gn1AptP/aMsLnjrhS4Gc+qd8/f1UVYSvdBwyw93m/55/zZ
XsIlt6iSmfQ4L/2NzTcHyPN+nNVTocdvn8pwpBsnrKuk9TCbDr/7Bsr+XCJz
i5RXOrT448Ztre1cR4j9NwQF4DrEW+8vRBkTZnWmS9mxBJ/t7nAPuEx4RHix
N2MR3rNZnXezIlwyXNEnuAij6c7OXXIkHORm8ezEL3hBfuXHAT/CtcGH7l37
CacKNcfrssh58YfjTKfhwH8e1uW3yf4SmnepP+D707lfC+4QThD5FdIxBctG
f43GFxF26xynaH2Hgdy3hkyrCXdcSowwmoDsUXM9v/uOUPgr1FLfDI/AzT3c
l2YGiVxnnaHvxAj8LaTSPTJKzrPZt3ZwGA7VZnQ1fScs5TiYUTAAC1eUP6T+
Jsz/znHzhx4I7FJapbmPEvvO/o6uaYPSFVDjwF7CNGBROf8tFGL43rxbgHTO
3uX4FsiUp9T0V5RwUF3J+xsNsKtn4nWbHJmz5Z6wr4H2aide2RuQptHdb+cO
ZkW5G0pNSEeeyVhIAtStv9/9NictNJaVkwf82yoHouxJGwz7GT0FCefl1gp9
SWu9+a30EnDI7mZYuE569fiiKw6yOFe2yYeSXqC7oVYH7va92NN6kzT1ROap
N6Di8nGFqRzSHNjAcAtQUOY6dSSfNDe/jvJbUCv4n6bvfdJ9HZ5Z70DLeIXR
1qdovkOl+Hsw4HjMVxwnn69zo+n3B2ChzRlCfU3mfFWnEzvBhORyVHUTmef9
fiT0Ecz9LM/U7CBz/8pt8l2Azke2ymGUdHvme4VuEGHIUfdsHD2/PsvLbsCs
sNS8+p10zXcluR7AsVHWG71A2u7cW75eIBoms1JEL0PYL+9bQx94coWd5tcW
0hue3VKfwRG1xS0KzKQFX1elfwaKW8u43rKTvrhP63w/OJtw9PiPA6T1OCMe
DoAu913YUXHS+g30fweAwflfqn6SpNd3eegNAkvO5/rbjpNWcq6bGATf/ksy
O69Aurf+mugQcOqj2mRjpLU5xm2HgFfOEa+D6qRporLnhsCfALbrV7VIP5Jx
lx0GQZcXbtTokv6QKus9DBiUO2PpL5I2bW95NgyiBJ+lnjEkrZzc8W0YsDAk
3Uo2JRz0Vrxv2whIGne/329B5u2lHYIjIKdAutzRgbQJdVJ/BDT3WTXnupD1
lToe1BGwuDWt/yOVzN8zyMSMAH7F5tkt3mSu2dp4ZwSccV6lVfQj7Vn0qHwE
eN2W4HALJH1X+1TDCLjz3kz0XijZX/XyQ+cIaKdJVOiNIPM3/EEjI2BV+rUO
cwzp97XHf44AYaslC0oC6WdpfxlGgV6KiKdHCmn9g6O7R8H1BsPIggzSDBfv
i4+CouWb2QM55HzdGLoTo6BbBD5lzScdnnz71CigM5yvU7lP1q9xs54ZBZLR
gp98CslcwXhEdxQY1lyYfPyE9M+qmEujIGw6/M9IKVmvrMFmOQpK9laxcFSQ
fmhr4zoKBnR+CGhUo/tacfcfBYxBe2UDIGl3GpaIUSBTela9tJ6sl7+6I24U
mH8JNh5vJJ39XD1xFMTsKnPhfkvWz7DeJFypMhGs/Z7MQ7CChFEw5rk7Nfgj
6fp3V4mc9aFmQXkP6WODL9JGgWKvf833frK/h9H89iiwZSpu3ztCeqpI//4o
SJIfHT03RnpSKbZwFEDHXUs3Jsn+FM4NwlM5pxmrp0kzvnryYBRwtnvvmZ0n
za/8OG8UnPxbKCm4RPafi+bMGgUuUgPK+r/J/HoAF3F+lgXLxeh19H33jBFu
TKLYQVpZIt/slpY5ChZeU/0WNpGOThLPHgV8S/fihLfKkr9HT54RuaZwT74R
C+mG4Aspo8DzElN5HBvp7Itnbo6CvEiF5npO0qJ7vgeOgndVzv3LPKQT0tM9
RsHKVO6s+D7S70veO40CId5O2sv7yfMmb3+wHwW62gwcySKkW2MO240C/+vH
RJsOkvWfrBmujIKCYjuFP4dJV16MNBsFXSNZOodlyHqfzzsvjAIatjYLKznS
Ca84VUeBxKm/HumKZP1OrkPHRoGBh3TkWwqZt51mFhkFofetsv+qoH3yr/GO
gqfdqU+PapC586+tXKPg85bmOltt0szmX9hGweYTq13Z50h7PfjJPAqOOEhM
vr9I9o+b6dKPArNssz/0RmS+9ElxaQREv0tgkTMjnfiF9+sIqFivF3CyJF1T
cb19BHyRXJLJsyH7FR5xV48AFnMR9S4HMmdafFc4AuQTDY0ZXck8lrchdwTY
1N90UbxK5jEDZhkjIPHXq2A3bzLfdIE7YQS4dCZYmPiRVqkKvzECtEqtlNUD
Sd/rlvIeAWIJxwRkQsn+bIFNV0bAZlcmWv4IMv/vUvfZEeA/dSHofRrpK38f
MxLnjf64LllB+lTmueUhoFILzXiqSa8dNP8wBARyE8FmSHpwn9CLIbARYM23
UEc6qedV3hAYMDm+MdhAOn86NnIIVClsHWppIX2uqNVhCKTxDL4qbyMt5xV0
egh4/C6+lf8B7SudtHsInOsNCYj9RJo+pWp8ECi+5/afXiR96MjLmgHA/XTa
uHeF9DF3+pgBsByDK7xZI311w0uf+H13TNpTQnOMsO14Md8AKNW88iebgXTB
Hv6pfhAnJtcfwUjawfEt3g+cGLfVXGUmvbdZN68faHwbzLrMSjot9VVYPxBu
LPE9w04auHvY9oOdr9SuFR0lnb8UtdAHJoo8veyopKWupIn1AP29G0MFXqQ3
WdatdIOG+HC1776k5XV8PnQDGbodJWKBpB9rGj3uBvc80nc7hJKeDl8I7Qbs
3/YFF0WQfjmpcrEbhBoWfJ+6SZrx0bt93WDhrZTewQTSVT99xz8BS1BV7ZhC
2k2vvOgTGPqwtuFSQfrzh8eSXeDTSmiE5ypp2ai36h+AiiPzfPkGaZ3jpjs/
gLLBFINluuNkLsU80gH26+6tO7aFNDV+sLIDJNXfF/PeRtp9fT61A+jGNL31
4SXNX3Wp5T14t28bqz8gbVBsxNEG3qgmZYSEkE6RZFtuAuM2NW2+4aRrg2Lu
NIHNEWN0V6NJ64auazQBkYfb5RzjSAdZ+i80AvWmY85WSch7R+41Avtvl+8Y
p5FmFmO1aQTRW6J6zmeRXtNdPNQI3qn1K6vcId3puLmiAXxUF/qxqZ60nPbl
yNdg0U6bf6OBdM6mTdqvAXuU18XlFtKSzYpbXwPZwtzo2TbSCZUatfVAv6UZ
n/hA+vGxPvd68FnDOaVplHTeizc+deCLZoVSFK0cYVYzg2kI6B2HqcGbSM/r
pYVAIHSTseAaE+m8dA5xCE4/kh503046xa2k6xWweWvE5rCTtNTUGZ9XIOJH
qJolB2mDkFaWV6Bg2xN/I27Sqj82Ul+CloPdpXp7Sa/C2ztegqkzfyc0BUib
7ZcNrgELWuoJzMqk39EuqlWCXc7uDQynSXevpbe/ADKxWatr6qTTpFq1X4CL
T14fXtIi/abwRFsF8Gqbtp7RJZ1wvvFSBUif4cgav0B6Y0N8pRxUbsfeDxqQ
fpr+9mE56Dtkx9BtQrpD/o1xOVjVTjzRbo7qDQ4zlwPas5+/xAeR3uzc/6MU
NMOL+z3CSK90nrpfChIkP1gZRJLe3fncpBTwszSP8SeQ1txd86IETAacOrAp
hfSUZKZhCSiZgVe+p5OWSfz6oxj4mMo/aMtG90X9JFAMKG3lE6W5aH/dAxZP
QdCZxKmPkLRom86dQqBew3ywsp40nLn1swCwHox0zGkkTdE6eroA5G0NnLZu
Jx3GI7nnIbDzXZXQ6ET3Z/459QGQmvJ0PtRNWkvRfucDUNviNLs0SFqHi2v9
HqBRV1/gWid9epK/Kg80v3h9ZI3mBOEooXj5PJAggl0dYSAdmnzZIxfwbzm2
WMBMmuvqgustQGncv3yCl7SU2/WCTBCk8ve3sQJp4fOdj5KAepmvPAUjPfNW
/V0iYBVa9hU6Rdop/eB8Asijn/kzrUlaPfxdfhyorf+8HmBEOiiw50MkoFGu
oM27Rnr+bd0jX2Ck8q21N4A0a1QPhw8oU9udsjMEWVZmhydgOaNhqhlOmnJh
oMgd2On4CodGk6Z5kpvsBOrPPZqriUP2qrlsA3gvDlQuJpE2P69MawG8DLaH
HEonXZvev2IAPhiDMzbZyIY/9p0DEpdd2XNz0X5Koy0nQbhl3mDPXTQvaCVn
SGnkyocHrAXId6MS1aC8PZ2bxmNU75CZYgDveDWmSLxC+afIZy5w7dp/plfq
0L6zDW/doH6AqMjtBtJ5lbwxVFgSZDjf3UKa31NuryfcGhZdtaMd7fP7nbAP
vJqoM7QwRDqhv+98EFR53C1SRSNPft9bSwci4O3iLT9/MpCuPdG3PxKuPJOr
FmcineAb5x4J9SrsQ622kzY/UyYaBR9XZWnl7CRNcWt3ioabX73l+MRBuuTD
ye6b0Lx2bWg7D2n+PYqssbD69aECVT40305nKhZyNJm5BwqSplncZhgH3Vrj
5SuFkfdkesXB1rZa+p/iaH4dFhoHhT78fCd2mHRQI8tEHLzeJZhmeRTlidlL
8bC35/zl7OOk8z67FSbAI/1hol0K6HwhHY1EGDNU/pOZQpr1rHJVIpwYnag+
rYL6X/+YToSUca6w6+qkdb//IZw1qa79Qou01A6PnkS4+OMa57wu8uz8cCLU
mSsaFr2I7ufcCZUkWLDQX2BhiPJnSZNJkG6ZmZplihyfejMZmvxWUvhoQdot
h5EuBb5Yc2FgtkHn9z08ngLZaPLaVBxIj9TbHU6BTvQf0gJc0Pvhg/QpsHEz
nXkFFd2vSf9EMuTfelRszgv131AQTIG+260XRPzQ/tz0DSmwizW1xjwQ1TNZ
BKdCSfbGsMxQdB9p6TxpMJLrP+3OCNLzqotOaTCluflr/U30fq8au6XB3GtZ
157Ho/zTZbk0WCTutONeMprncnAsFVb0K91PSUfnv7rzIBXWx+xQuJGNnq/s
aEMqbFca7fDMRc/PeelsGvw8+8zG5i6qL7bZSIPjuWFr+g/R+8wSz0iH87r6
SWqP0HlvaP9Lh2u0oqJyxSjfuX1rBmR8/vuV6HN0/kGjT+mQ3frtee4X6Hti
YqGmQ36OW9+ZalDOG8+SDg82ugSuQvS+PYpn0+AxbwrHj3o0v7xfOx2eFGV7
1N+I7uv2vcV0qNP3lfKuFX0/MRnZGdAwurz7ZTuqt7u4MxNaK0Q4PelEeX+J
fCZ0mzagu92N3r/kCFsm9L8lnhH3Gb2/ntxHGTBSZ+1Q4BDKnxgdyoApf9te
u35B33etbk86zC3JNTSfQPd9K+Z3OiyycJ/TnUI5fXV0BqxgO3VDeRb1s1jL
ZcL61+x7jiyg5zEOeJMJ2z0mSgSXUX9LNGMW/HygUnXXKnq/WPNSJhzvjhqg
30DztmqnZsL5CGPqIq0Cud/4YcZMuCZ3iHF8E/L9ogjifqc2bn1iIq17VvBK
BtyV3XG0cTtp/o/wfQbk07rTUrETeV3LNxOKr1+9/JCDdNBhXe4seOzp6aV0
buSiPb5Z8ORlrpuRe0mb//kVkgV1WL/zXxNA/dukjmZBw7rqCvsDpN3eGt4l
7pcao2UkRjovRGcTcb/7zb5oHiJNKTO7lwH9uw77KEiTThBz6CLu9wYti4Qs
6peOcMmEKcc+3uU9gc6jbSD2yf1278R2JdIl1+PSsmBRhtf7dQraL8IYz4IV
GupXZlVI14a2R2bB+lXuP0PqaH7iB9os2PboR8J7LXQfZ56fz4S9Jq+Ea3XR
PiKn6jPg2Pb4lyUX0P0dD36cAeehuV6+AekOHUZA3K/rkclEE/Q8RdxcWZBR
gOF6iDny4/KRLLir89Ouq9boPizGzbIhX+jDQis7tK9rl1s2FJe5hl1wQufd
mWLNhsfGNT+puKH96cYvEPebxuso60FaKnbWORPqqM3SCPug830rC4jvdwVP
4/QnzRou4JwBrQsTJbYEofww33QGdDOyqv8vFO3Dl1WfCVlyp0YUI9G8Z3R3
suDjr+5/g2PQeU3fRbOhpujvvU0JaF+vPRLZ8JtTkCJzKpofpPQwC4aVbjE+
l4nmX519mQkFl+Oupd1C/XvHKjJgrTxnRn8+ui8Vps0Z0CzwVgX/A1S/S5j4
87H2WujTlSL0vIstfzJgFuPjX0VP0X28ZprKhHLaR9nmnyGf4yLe56fEainZ
F2j/3K8NWZDarXzWtwbNt5GzzYKse1qccRx9D1Md8Znw6WXdGIY3aJ+d1IAM
qHWvp0ijGeXvaNPS4dSkWUvcO/Q8anes02HkoYlvHzvQ+9e9xpQBhanOm7k/
oX1Lr65mwNcVi0Jmfaifra8hE5r/8Tt1dxB9Twb+gllwA6O3nBxF9bXtc5kw
Jyw66NDEv+9lQTYTyrfszKVOoe9to/VABuzdnvnqxSx6niRW7nTopcc/sLaA
ckezpDTInv5wVfk/dN79/b/TYGm/JHfEH7Qfk+8Q8fvFX3H83V90fs58bQac
tlbS38mgSP5+UY6qZ8Lowjce+oykKQpcpzOh6OyZ5Gxm0rW0D0szYOORj6Uj
rKSDzhwqTYfW3kYdBzhIS9lgCWmQ7uXorAM36Y62xjepMJfGfnvJXuTo+r5U
qHh6/uCSAGndLT13iN/7KG9NeWHSCY02ienQp33DLlCcNP8daZABOXeFR7yR
JJ0X7+aYAcsubX/AdBTt0/aZIQPq5aS80TmO+vWK9hF/P4zs+ZqsQNotIHc1
FcYeuEvbh5Ee2cawkQLFHcT5+VSQE0zKU2Dz01JgpY7mH+MSTIU2v+RMC7TQ
/G11MBUyyNX6zeii/Z3kDqbB0WAZaywV3U/w1b5kKMzJEueWie7PZEQgBToU
fXuRfwvlf6f+JsNiUDfamY/mdZ30SIaLnVnbGB6gea/y7yfBE7YesrJFqH7t
1UgivP5H+7LNU7T/zT9pifB1vEhU+jPSrNb0vxIhoxDt8+YKdN/f+MOToGRj
G61eLzqfR1MsEV41engwdAA9z0r800RYORt0sWwEnffIcTYRroUYBY6PofsP
S2tMhMpcMoWc30mbR90/kQjDH23/qDaDzuP76ZIAW7Fvaz4/SdNsWbGOhzu6
aoWLltB8i7TxOHjBLku3/zd6X8XPbsVD3622udZ7lMh5Lk70sRC/TWlJ3Ud6
hOHvbCxkOMrzq3E/aZp2tY44qN70i3dFhHTQlJFYPIw1blMVk1BC929VHwc7
5x64GUkpofs0KYyFnGFBWTdlUP/mTukYaLzb6M1LOeS1hMVomPf46OyMIpp3
WBWPhk06NEreZshqR+5FQuavfTYFlqT5fQNFoqCu9/OEPhs032kvSzRM3RZb
vdWRdF7frapo+DnXZkzBFdW/6HoXDffJUFicr6LzDgYfjIbWzdxyt73RfIel
35Gw0OSXxXs/9Py+r3Ii4Oz8u5vEP+3JeZ9UKsPh0RsPyqXD0H18FJsOhz7c
QcOWkSj3kHsZAV8+MWRKiUHP/+pKQCSkPXn0aEMCyusYX0dC1W5m0+UUtO9K
qFkkjHaYCBfJROc5jplFwPcbeInBLVT/IZA1HLInZ36OykfzbiWuhcGtn3Z9
oN5HvmnYEQZpuOKajAv/3Veq1Q24bMAIVZ6g58tN3R8OZ7JCyg6VonlqN++H
w7GBtSLOcnS+65lH4fAzn3f+30rkg5uJ+g7zn+mTL9HzPf0jfAM23nGM+1CL
5s9LrYfCl2PjYdVvkAv2c4XCZ8LmfnebUX2y6N8QWGD32T3mHcp/GiaEwtyi
C3aeHch9v5TDYNp0u5lZF6o/u/15GIyR1Lio1ovsVPI4DIa4vT4jNYD2j4gW
CIM+z5ROco+g/fDsQ6HQZfGFHN0Ymjc7zhECrY8dOfzjG6pf5lEPhkY+jw90
/UD+EKsTDM9VC/O+mkP3pfF7RwhUX8tje/AL9T/uIPYFYA9T/H/o+zCpKA+F
MkGpf73/oPyi8XwoFK/fsWz+F93fjFhqKORniJ7WoAek/8wVh0AuVYavR7aQ
DnKPpAZDlsjrfXu2kaaxDJMJggytK+8ZdqB8+sH4dbi67WrjDBtpSpq8YiCc
15552c2JcpMEkyA4EW/7HOdBfn1NOhgOfhgtLOAjza8u8iYYdu0yyUsURPPP
RwwHw9aL3Wm+wmgf/nb3YFibrhtrJU661oEnJghW9LWGakmieTxH31yHj/ec
9pU9gvp19JP94V1T3I3vGNonb8LDD2blnrDdIo/6X++m9YcJo89N55VQv1mv
XQAM3y95oU8Z1as+77kO/a8UaNafRvM2/awKhNSHgsqPNJCFu2oCof33nOMp
2qg+6nPzdWh+kEsy4Bya17q2NQDqOycK2VxE+Yvp775Qq3jbnrOGyL16W6/B
kz9v7JQzRVbX0fSBckdpGAUs0H6Nqr98oKSn7wbTFXReUPdxXyj0YnFxwQ7V
07Pb+sE9v11+9DuRNv9yhMkfsil8H33jhjxfM+QHGQOsep94kB559GbYF27A
wfY0H9TfeUDhGlykMWgI9Ef77i+96A2nTnbW2AWh/ks2LZ5wJEzr2bkw9H4q
JY08YXdjY4F8JNonU2KrF2xjVM7dH4Pyp8P83vCNZk0qcwLK7fbv8IHVMbIx
S8lo/pkNLx9Y0l4cMpSO9tHtFPeBD1jFrzVlo/Nuxkh4Q8kJwxWGPDRPQiLK
E76oifI+eQ/dh515y1VISaxaDixA+Tf3B1TYbPPd89Vj9H284miiQl1F7qXV
EjQ/eiz/KuzbqeEhV47yT+kRHtDym88vzyqUx3rQecKplwXU56/Q/NqmLg9I
Ter9OV+H6p/e++8q/GPL6C7ZiPLp/EwqDFOSm3dsReenpu51h8y77FwL29Hz
xuhyu8GUyfTZiU6U31bf7QZ5YZOzUA/q1zj71A3eS/5v2qIfnX9or647PGQv
4pQ7jPKN+Tx3WAEu/Rj4ipyd6+YOAXuEA88kel9amtVusPF7xfdL02g/qqiq
K9TBJ+xS59H96T/96QS7UzgnOxfRPvuKLRzhZQdVW9bfaJ8vrwwc4STmNaG9
jvq5hficoBvHgys3aTEyf/jmuxNcmfo01ryJNM1wjpwzDK7dZL15K3LD1RYn
uDVN9uspFtIUP/ksR5jkeMUymI10XrLjuD3kUU4dhZzIevb77OBdzgbzNR7S
5tOff9lAienF4RP7kJlUPtrAsjqhy9770flHb4jbQsX0C0NlIih/wXfdFjY4
hZkuHERmDAy0hTonywYOS5Ee2cO31RZ2c40ZO8uQ1o36xG8DzWZ29RfJkU5Y
Pv7DGk7UnzKaVCTdMfTtmRV0ybjad0AZ1dfNjFjC/5zvGlidRs8nvJ5hCYNO
fezJ00D7i+v6W0JGbvpLQ9po3qlMQ0uYMHuke48esuxpdku4+43lRUN9NN+4
Pd8C5mUmdaUZkdZSYN1iAcVc6893mZGW+ZB10RzK8wjqnbUl7ZAgqm4G6+fO
fYhxJD3ZaK5lCs80BOu2upLu9ZYSNIFdWaXvt3ig599RvGQETdxGdU77kJYK
BtOGcOz0zvYQf9K1UGqfIXTeo6xdG0S6xMo5zQAuz7u9Ww9D76uU65QBvN6Y
d0YhCkN/v8isXoKbczpafWJRjjc4X4Lx7jSaFYn/3j/79EW4W02q5Vcquu/f
rG/Pwzxec3XpLLSPlR9+DoouxDe53Ebv7y5FTReWNOGqj++gfidV9bNQ7tZc
w/cHyBXtj8/COuq+0yKPkJmC0nXh6tJcAm8x2j/ZUusclLlWO7DzOcoVFNXO
QZe1BNEtL5D3nTp6FhYEWnisVaP9H+eXaMAvdEdqf0Lkc818KpA3nI75Wz2q
f3thBYP6TB8vDTT+e56VM4owIebu3Q+tyEfc85Vg6w6PucZ25Lr7QcqQIVlF
4WUnMmZBdxoCTo6I0m5kqqOVGvTJHO988BnZ2GP4NHzGW8GXM4R8RSwbg9O5
4Q6JX5D7gpOloPD+SxXhE8i6PX+2Q/MHInT+U8h57HHMIEtsRdt9FtncXXkH
6HrcnGmz8M9yV+kgi1TmuPEycpjyZTGo/txe+twq8smZT8dgyDH5ANUN5GVO
DXk4ZHJjbC8thbQPS4QU9LvtHE3+75TkeaYb80q7Ry5K7dqEbMbdfASUC4Du
7VuQradPYEDPStifkQn5o8BjZTB3j0WQfhuy//J1AGImlpvWmZHvHA0+AsRE
h51XWJCDvsDtoNG+adcvVmT+oto90PJRcdUM2799Dluxwr/T6Zcn2ZGFvkSI
gxzJoE1fOZEDjsUpAzk3u0eDu5Hlpao0wadS3XO9PMhsyolnAfWX3H+dvMis
Wr91wA5ZgVttfMgz8KwGeOzFdKqZH1kt3pMCNCp/TtYLIns0XTgMJn73xb0S
Qt79/KEACFWol6kURt7sFi4L+AOKPj8TRa749VwVvIJJQU/EkYc3jM4BIxo/
4QIJ0kFhqd4XwX/KVu/uSCInMufog5TQM9RbUqg+3j/xApBuOLo74wjygBit
LmjfzAuTZJALG+dUgKM6g3XsMeQJz/snAGP0NFOkHLKipL4iuP+2qzhEHhn3
0tMAJ7e/uhigiDzlXHMeDOvc/+MNkNN/3TIE/gmx+VQKsgp7lgng7vRUcz6J
7N31yxhU7DKbsVVBfn1s5hI4f1E12VIV+cS1lnNgPk3yhKk68sqtPDUQ28s5
fEnz33437pwE4jx/w/S0kJ/+MtMETcbfxLV1kOlz8y8A61vvO9R0kR3495oA
2uEXXif1/t3vl1RzcJs/j1fpArovF+vjFoAlWrr5kD7KjbCqyyDwV/1VPgPk
J+/HDcG8yYV9O4z+7Xe+RQ+YN463/jVGbt8eowk6Dnt7zZv+2y/fXRMoZzIK
jl5Gvu5pch48o8tq+2CBHOFWYwwEnQ5eq7dCjqaPsgBJn14KPb+C9rGvzbYC
9JhOx11blKc5JFgBj4JhvxR7ZK4idwswttNd5IYj8pEzL4zBBT+6j57O//a7
v3oeNIwlX7dxRaZhsdUBx3QOiF9y//f9f/Q4Bx68qPikdhW5MVDZEHAKqAfL
eSJLBgtagIjoPgkxb2Q7qwJrsPLLoZf7Gtrvwm1ZG2Bnuha61e/ffUnYXwG9
jbGH//ijfIox0BJoSO3r/3Ed5cJ9d0xAdWZJ+EAQcvD2sgtAnP7kkbYQ5PJ8
m3Mgy+nj4Kuwf39+fvLrg23d1lFPw5E9Pc5cBv7YskxuJPL3J5rWYLogYiQ+
GtnSwt8WmLBxxwTFoPPjg83sQJtf0XH3OJT3h760AWBc4atFAsrL3m21Ak91
2uL0klC+/+F7E8BXaSZ/KuXf+ZHyF0G8wPz40TTkuSXpC4DmZnCiUMa/7+mZ
lDFwW2RT4shC3sf11BKMmN6b3JSDfHXjlC041ySbsnwLnfc3btEe1Es1Yd9y
kdtZmR3AkSyDHz35//a5G2UL7tBPpTXfRf1Ai98K7HL2O1l1H3n+j6sJCOtm
ni18+O881cGLYBG7nZlViPz+0J1LwLrw8Ombj5B38aiag09sdfN+T9B8jbmH
V4Cqv16OUzGy4twfe1Ax/lXNtBR5zobOCQif9fyl/Rx5W/xxR5BeuTkXlCP7
BHXZAkbBDM3DL9D8g8IdlsDnptjyvipkPYNaYzC5WJ3PWoMc2PNLHxiaaWnT
vkIuoYsyAa1Ngys/IfLZmLvWQF7a9d6XWmRV/xJHUJRFo/uxHrl18a4b2MOQ
9Of1G3S+pOomKohx3v+wrBHl3duK3cFad5ne/WbkRztdXIETRXUjtRXVTxdI
2IOBwp7C8Hf/7jv8vCXQ2mV/0bsd1fcotRiBV/6rNHYdyLpu243BcvHEfEgn
qs+ac7ECUl87R251ITfM2DkCB068o7L7399fY4Lu4J7Go9qPvcg531eoYMg/
vWT2M/Lnvmoq4CoJzWMaJE3xrvVzA7pfXROEhlFe86HGHkRzmgRho2j+aquw
JXijoe5m9BXlvLq+xmDdX8bccxzlwcHHzcGxEn7dhG8o/3Q1wha4fWWmPPr+
7/soKHIFRZy/Dzf+QF6fGaaCrxrj+0Zn0Pkfb2/yALwBH3aszaF5J4r/UIF+
yau/nAso/8q0zQ0kfC2ck15E/X8uCdiBFs60Ya1lZMqBNXNApxny3nYFub7f
0hQoBrjgIavI+mPRVsCrxKj41tq/95WFO4Lir6q5lRuka7eLtrmDSc6j8R9p
lMn6wcsaHkBQc1/gLB1pStnBhx7AJGCbK9Mm0kHuPh1UkFryn5nQFuT7IbEu
oP3rVx2MCZn5naoNYOTqAEbbkGXXDpuDk5ovJT23IxcxppkD/4ACvoQd6Lz1
UGVbUFGSwvJoJ/L2lj5XMPc1aKNhF6r/9iTkKhDlcp4d4UD73Nh51hNYahoO
/eFC9S//6/UAOQGn2zl5UD1+XZkKukukoTQv8j33SCfAOrb3qRYf8q33LtZA
g2vrbVt+5E1Ou81BiOZybIggcm8vsAIvA74E3BJCXnIXcQTLJe3OlcKka5sD
P7qDw2PVph9FUd4ZOeYB7Lgeas+KI0f4THqCO5rJSkyH0H4hKzkeYCAg8JDQ
YeSbg8bugKPUcS8m/a8/9ZgD0Bm7tN3o6L/7uN9vCSK5VNY9ZJHTjKfMQb2m
1Ez8cVSvenLNGvwJ4B0sOoHs+/mPA5ApZWxrUED1KqpdrsBlbPHliBKyntIn
N1DANfr4D4Z83HzQFYxqtuVwnkT9jrObHAHP9aoYaRWU6yj/Zw0ulN7311JF
HimE5iBuLNHJVh15ZY3eEjRxXTcJ0UT9g2aOtoDmjIPWLS2UNxYrOAP56/qK
lToo/xzp6QY8Sk9KfNRF7298JsUNPB2T5J3V+3e/UV+cwSTXHmami6hf4eEJ
OyBwZsva/kvIUc9iLYHMp1OdPIbIwQ9tzIHq5aCCncaof+GbqRUw+P7yOqMp
yuVs39kBh6u/L/w1Q/n2+Rln4L8ue3DZHJ2f2UbsEx9BpZ2xRGb86OwG7uws
7vlqjfo/nq5zBmXZP558tkH9P7xi7EDjAdGwD3YoZ2jhtgK9xdZGzQ4oNxU5
Yg6mTuRL4U4oD020tgTrrwc3V7ig3Gg42Raw6vAMPnb7d1+a/U5AsFf/+V0q
+p42P+R3AzKWyVFZHmifyCpjN6A6/f5yoheap7qFxwUYeDEfi/RB/a2th+2B
A40Gc6Avyr1yCq2Af/SNL57+KL8oKGgO4tnrK52uI38452sB7tzeiLMKQvV3
2XVtQJmowhWjkH/38/KBI2h85q1wLgw5P+uKK+hVLNupHo72G5w75AamGue/
gUiUT4tTXMCa7iEoG43mTewpsQcs/fYpEjHIM0OHrYHAlQcO++OQ28vFzIHM
3BcKTwIy6/pt4v1d28e1MwnN6+GlvwIM6E1mtqQgx3GddwAOsRmvN1KRB+aM
XIA/16fMpfR/7+NYqyuIy9/pNp2J/CToqAvIO6ij+jUbubprmwN4Xh7N+/nW
v9+HPUXWoBFrWujI/ffnJYr4+7e3hb6lKR/lWaO3L4Op85RceBe5z5piBdYG
/T3L7yPHNdbaAha7qjOPHyLfYjvqCAQWlgTuFqJ5KvOXnICM/5GVzEco3xfR
5gBUN7u2JzxBefoHFltgkPDoXkQxMus01RI48Ez6Xi9F9XZ1BmbA/57QOc/n
yPGLtZdBvKSFiFM5ck7XMytwp/LWuuUL1H82fdUWlJ38/NGwCuXOw4MOoPEd
Z5FuDfL1YCNH0Kt/PkjtFXKJ8ml7MDUSrw9w5FeMGlfAusM7Cdk65EyOCXPA
usRIL/Ea+d2lLyZAMPB0n2ADsuwK8fsowxRSzN2E/MJttzVQTYY3WFuQx69u
sQMGe/8Yb3mL9gv+ruMAHB8eP7LxDuURyyIO4Lq0B+NSO3L67mxbkFBTMvSj
A1kDBBLPd3qm7Esncn3lTzNQ9l7sZl8XcnXNrDFI2F93f7UbzWfoeWgOHL0N
avf0odx0LwPx76e3c58V+1FukudjBwT3RSyZDqLcsTvcHqxT+VgDh5G/1b62
Jf49XC6eN4qs69htBcp4tE/XfUXmeDttBuJdxi5/GUeepO0yAg71fr70k8gm
xY7/t1zn8VR9Xx/ApZSiQkmZQzJnijIs8yzjNU/XNV5DmfKVimhQhhKSJEkq
lYRKiP2TJKloQEKlkoSQJCE9Wef58/36rL32cPY5Fy8wXrfmlMQQ9Xvz49/4
jUHXbhqNUN/rzf/+vpyr02vxH0Wf//xvPV3cb/qTxqnft/w//nDLL+xv8QR1
n/ncfeB49TL+lknMN6cYeULQyvOqw1NoAelGFzD2VrPm/I0OX5fuARvvPGPK
z+L4udWXGTDH7nfI6g/mH2gs/tDlPpe/6y/mKRscA+BWWWZ1+iL9hXxLv4g/
HF8i216+GB1d+ezffXRuGH3Jhubbl+wBRiUuyyeXoRMX1TuDKMt3cd4VaIFI
C3eYsz8KapxUff1eBry+IuLitAq9wb7KHypmKyNjuNDtZkJMOG5tdfwMz4IP
7BrvDATmxc/FNWsxb+Cf8QPDX/se9KxDjyoneoOoxdp3c+vRg0n5rjCXf31a
SAB97I26M7ye0F+jI4S2kX7hARXG3fJ0EezPZSL07zxzw00TNqId40/4A3OU
3adQnJrfbiwADPUL9j/YhL7t/dAfRLPVc/o3o7sfh/nA7NfWCjYZ7K8oaO4J
ndr+zyTlqP3+bXOCipN/vpgooHsexTpD2ucsVqYielXfCi8I3C4nlKyMvkbb
4QOGaQ/Ur6uin0X3+YHIB1e7p2roza9t/WFGdSLk2zac//mnPb7QefRY0ipN
zD2MJ+lQ0StauEUbzeWh6QppilW1Njrot8rijhB4yPp1uB6aYSvuAoZdA98z
DNBWYi1eICIXx3nbCC2syekDM/G8mztM0HP0un/zvSrRmzLD+Tu1GL5QvtnQ
nc8SvayWlwGpe3uit1lhvZSXgQcEtkWcdLFBc/yYdgQD8RUlsXZotzO7HUD4
vwtNZ2k43iLyrgvMtGz7UOuILr/+3As6hJ/PvnVGF4fQGFAWEbDur+uC69en
q/pAatO8oqgH5kG3NRmgGz6gJOSFvhn+2gsmBVqV+b3RG/t+uUBx0x0VPh+c
X0JNyQHcw8+prvXD3GF7Fg24BA9v5Q7AfKm5vDM0NoWorWKiP7zj84CYcJo6
RzCa6XCSDvKCWtvYQxes63Mwxhs+NolvZ9uFOWvlLB2ywzk0WMPR1sP/eYK5
4A+NvxE4X09BnAvMN3VrzkWhJTa9o0FFeIPW72j0w1YZe/AXvKY9FYNudBty
AP5HJ+FHLFoyotMVWsP36Izvw/7pgze8IFHQW/dbHJ5PHmeEN6g9MtUbOoDr
O1vQ6g1D4Yr6XxJxfMLODjrkC6436D+E471Yj3qA3aO/Bh+OUP3uOjjD0ogv
hu+OYv1q09f2UCPYZtSTjPY+5m8Hux5VGnelosc2ldBAIiLfpOM4ju+NS3aG
LsEjpi/T0Tpr9N0h9VGoWVsGmi5z0RN0IxzMn2bh+O38/96HSUFti8fZ1P1O
cfOA4kcSlk056Ig6Fldwj+Dc8SAX/anhkwNwCU3uqM/D/WU/CLaDxkc9VnX5
2L+5M8QWYiIeWNcUYL2l/kZ7kBO6bnO3EHPpgkEH6HuUYXu7CM9LI/6gM2RF
xNqVX6bWe07QFUyFGPalxdjfmt/o3/flkRnt+jXs13xt3BnKI5Qciktw/M1H
4Y7gL7TB8VIpjs99u9se+JtZnArLMFeJXWQLrRGDTucr0GlX3WwgUei5c95t
7F9kGWALas13Xc5UYu79gdMehiLOu2ZXYb+yTSk0yBdKcsusWXDBxse+DmDX
vNM9vRbrTTPdHWBppKNHGsH6lcfCaVAjBJ7J9bheXu4eO9jZvMkrqQFzOz42
WxCLXEk/1IjjQ73WW0On0E96QhPmBxTMrSC5udc7rhnHfzf+YgUQ2cjY24L1
3Ms/WsOEUIlPzFNcj6y1kw1cbs703d264PTyT/ttwDVyr1/E8wWLiqQ52MAq
YR//XS8XXNai89gaGprNA0LacXya4hEriI5UDmR2LthmJEx+B8gI8zP9uxbc
NWspbAnvmhcF+XQvWMPqcLYFZEZ+DaL3Lpi+616WOfAbx4bbv1uw4kSNthkU
rueIMe5Db1MZMQGZ4bNx2z/iepraR4yhok7usFw/nr97W6QxaKTXpYgM4H73
PD5lDPcZVhk8g9jfqUvXBEy3vs9hG8Lz2ROz1RSeLws7Pz2M9f1H/pqCczfL
5eFveD4NM/2m0FdysuTdGPbvW7HeBALjxW69+I7jR31SDGHM9lZ14w8cvyPP
VB+iJQzr7/5Ev8lepAfzU+1N135hvW/icj048tjv2bnf6JzuHfqwKm/qVfos
1nsGWRtC9s6k7oN/0B+tBYxBSG/9h+i/1PM8uN0YitZc/cJcZLCQH8qIMQC5
ge2j7osXzJJez6kDt6taJq3Z0FETMttAK8VtVn8ZuufNQVVo9BhZpLYc3X9v
7VawUNzPLs2B5pHK2A4vWVetFlyJ/R9zyeuCa0c+7+rVmD+TVDGAj1e2CLJy
o5scTxtAUGy92E8e9DK7xzowYWkrPbgWPUoT2Qp7RD5u6VmHtoxp3gwsExFq
revRvtePCcLRxsXa9/nRpp9dRYHrdJbBbUH0gU4peTjN3GR+RRg9ZbN2Gwhr
VdrkiqK/qRrpwuVVJk5pYuhGt1FdUPjw2uOABBrq8rZB5a1A30hJdNlglCTA
kd9B/lJU/6G4V3UPnZPDXWTQ6/uOryeWsgIxlnLovrhYHtL+53qcjgJ1vvGu
K8H9udZhZUXqfKF8C/QXPkvZpIxOZb+pASG7PTPWq6IHHh3Tgh8mYzkcauhx
v1gliOU/cH5eHa37dtEvbdZvXJe/b0cHct+UIsn/u1DSr4meHNquQrgzlG+9
1kYr+2spkRzfB9UtOmiuQj9BIqpOq6/To9Yn1iIMxcs/N5UZUOfb3qMKir27
n100QmvxaqlDVenS9mwTavzJVxKgk3C6+5gZdX6rQkRJk73Uh30WaFZx+W3E
SrL6y64daCenFbqkc9pslGGNrvl0QZt4PumedLBFd9VVKJGBc8GzpvbU+a6/
0lkXGja3SMsBPWIjpgCT+mnsW5zQks0/lGAfr/BqMRfqfASOcsCz8uWuOm5o
Wj5ThQhb/Sxy90DbVc7qk51DfWN7vNBm0nuNyf+OPNU47Y0WprEbEC7xqsO3
fdA2KWMqhP6/i89f+KFZvsnPape7nRAYC0Cz752QBdbpWH/OILToMqnlYJfl
Xy4dgh6U89lKLirazRnvRE+L6BuTyafaJr5h1P64jSyJIVM6IyECHXc335yc
YuN9mx9F7ffgjB4ZuMAiVRuNLtCz3kzUYCTiTQw6jMEhCEndr+umYql+IhPL
oCv6Afva/dTzn9u7lUituWmvFE+dF7eTKdlzMzffKgF9BZJtSIvFka/BB9Ep
7B9sCP9guOqxw2jnQHVzEnzII/5yEnptar0GqRU1a3lwDE2f3bGEcNap8n5I
ofafJswCHi6i9Pk0ar3q4qqk9CfHdYF0av/a28zI/MlfP7dlUPd3xMOOWCt8
0nXMQh+9yUsjBS2tKZHZ6EVBSrZk3L+mMz0Hnbcl04joLb68sTSXGv9BSp5k
nD8Z8iSP2j9r3mjdJ839dwfzqfcve1qJqHYFsi69QL3PvtOm5FAUbYf4RXT1
7uP2pINLN0f3Ero+95kjkbwh+8njClrqLJ8DiTbjU9h7lVrfN0kr8ugz656c
6+jiw6+0yPrE0Qd3blDnkT4vQJjC3ate3aTu8+MzW0hNzUOX8XL0y3f1JmSF
U3nRytvovff/7dftR96YTCW6/NyoMyk5cVTDtAo9caLYmczJRh32q0FbVfrb
kx3NXs8Ta6n76BpkTPJ9LQQKCHXej5QUyRiLun9dPZXT07cQ3XNi5d0N6CWT
GhYkffuquV+N6F7TElfyoeO3Me8j/F5LbXnJIMoRn08qP6b2u+2QH0lc9aLX
+gm1n7M3fMmra7WbQ5+hfUxO0omESXFEchv6z6khGon6lFl35QVa4ehJffIw
Pp794Svq+7RtnwpZJxhs/7GDui+fS02Jf5Vj/t/X1Pe4vdiF3KXpfxXsRnc4
KPkQ9u/yqhq9uL5I63UBxDltQ7zTO3RchW8AuSrN1hLVh/VvWzh9yUtBvdnQ
j2j/blYPMrd6v1xAP1r9xRkbsmlxtQd9AK2YqaVDrKYmj7sMUt+/krN6JOar
Yr3dEJrbXtqeXOgN+W4xgvOJVZvRSUtbsZjRKOahV7n8yWRDvz2Moz9bmDGJ
cKXoYfUJ9OtsaSYxuepeqTiJ/nmI+JGwvJwv0lNozU9vvEjuifb14tP//z3s
tyONiVzmgjPU8yzOMSDfdlvu5Z1DZ53+YUTWMY+WrJpHnzrd4kB03RvfLmMx
XFhfAenyJkHWLKsXsS6YZcjsWQDJ1NfSnVmM+faD64JJ7daY8B9smL+1GAgi
A1K3C0eWoWVP7AggXILjrz4vx3qfP1reZPtqObb3HJj7HuFwIAzWQLWulei5
qUATkvrzYsCL1eiYaglzUjn4PqeFG23Dae5M3vcItDxYg/Z5avnvebY5zdby
Yv/HK/yZRLkhU66SD3P605oQ4n6nzePmBvQrrdgQcriY40SxANrFsDqQlJ41
qb8ghOPXiUYySNfxg99zRTBfPLrGibAm/k8sayN6pkTIgsjunrVPE0e3ntGw
IrRA9cNHNqFdla+7kji3yMr4zegG/8u+pNjq5pcYaXSudncQeaE3vD5CFueT
Z6ruJDOqm82D5TGXav0YSiSkfPb6bsF8gjHPJFYC50s8lDCvKErxIf+t6nnr
qIK25Z5yJgWL+FbbbEWvK75kRVom7XTN1NEFx67akB9fjofrb6eeBz3WlQj2
tBRqaqI3vRPxIcatS9tVtXE+nr8XA8iu+/psCjqYd/B5MUnO7Ti1zXqYB7t2
BJCGKzUBogZoz5k9PmQ4dypngxHW6816upG1x5VbeEzQaWvSbQkk7JzlMEMP
lPRak4Coa3JsFmgiqOFM0gMGPOYtsV8pCw+D1LiKnfhlhTkwVQNI/w7P+nEb
6rxyXzHJSr3c71/tMP+xTJFJ1FQ7xT7RqPuzb68foW/mofU6oo0zK7xIMr/V
4Q5nqr6vlkZurUyubHVFrwkStyG9LE1fHrmjD901cyRLJxdtuO+JTvw9QifT
ZTnH++lomdABfzIcumUJuw+ux/GPehB5J9O0R9YP80ta/2OS51/cx6wC0EEK
xX6koeiHbwQTzbjb7UnueCd3nwqm7nfjTXtSLLzRpjoUzS/cYUtye+4+7N2F
5lvl6kZSc6w0WSJwvrd7JX1JvMPnMvEo6j4ckmWSCJ59kibR6G54H0R823jy
gmKo93XbrUDimHqV+3gsesQpwIeYmekmle9Di4SucSVaS1/Ptcehn8+N2BKF
B6ER0wfQ9hrPHIjogSWDAgdx/rqJbjpZo33WQ+cwerPElD9ZOqP0ipGE1hcs
CiLTlc2mR46hE6vPBZGhSC9yNQUdfnDQn7xVnFJ5lob9t7l20snzb6lXx0+g
d+qucCQN18RF1mag831u2pHbATVZ6lnoBBFhN3JFwnaFWzZ669SgD8n98CU+
Lgf7Xx0RYZLU/LifF3IxXxK1Lfjf+8gb/DCPul+pB5gkfH1J32A+ulPthC/x
7dB35LyA9UlvktyJY8abJ1suom8ppNoTU+swPftL1Pek6r4D0eRcdjf6CnVe
N9ToROHxObncq+jxuN9+RPSIamHddfSi6FNMwmPwhO/DDXRX9j0mYWNhpC0p
w/ll1nr7k+naaVapCrTxWUInQ3tOxFjcxvp5lfOOpFdNcnRnJbpna6Y9aftR
65NRhb6rud+NNJTZv7lTg+MPQrYPuR06ZPWmlsrZ9QLJZZmExjmC1rYZZZIz
X/g0RO9T7y+NI5CkFpXeNHiAbvTQ9yFx3kabAh5ivd2NH64kTLg3N/kR9f2s
uWxPfHoiuEofU+9TsYsTccxZfuTFExz/9NMib2LqUDA7+Qzdtsfen2jwqIev
f049H+LEJPJtzwY0X6LN+WYDiWiqr7tXOzpinZcf4TGbfZHYif2Zz/+9v1cU
y+Pyv6DffxZkkJ2833/f/Yp+N1voQlRnFHe/GEZP9D6wJzPvwsaHvqHlg3mc
Sf2DsuAl49hf24jVmxwpHh8QmkB/29fiRyzTFBnqk1j/3S80kPBEhL21mcI8
J25xIOlyLHMOmqbux3iZL8nXHH91cAZ9/5CpF/EVVbQ+N4duWS7jSGTYwloq
56n3y4lBI+Nfbxo9ZzFa8PkXqW6ksnWs/isr2teqjkH23dqitZhtwQcGlxT4
E/2cXXcFl6FP984EEPb9N5XVlqPp7139Sav32A1rDhyf7GnJIFnGW6SZK9Hj
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
EnE7KC0L+/X3L+YWvpdt4f8APOEltQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"ey\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.6733630908632517`*^9, {3.673440686477467*^9, 3.6734406963660326`*^9}, {
   3.6734407373103743`*^9, 3.673440747610964*^9}, 3.6734408148898115`*^9, 
   3.673440874421217*^9, 3.6734409904138513`*^9, {3.673441976590257*^9, 
   3.6734419961073737`*^9}, {3.6734441881877537`*^9, 3.6734442079738855`*^9}, 
   3.6734444102114525`*^9, 3.6734446419747086`*^9, {3.673444688539372*^9, 
   3.6734447404073386`*^9}, 3.6734450149780436`*^9, 3.6734465167309384`*^9, 
   3.673954783145608*^9, 3.6739548788270802`*^9, 3.6739549152501636`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       RGBColor[1, 0, 0], 
       LineBox[CompressedData["
1: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
        "]]}, {
       RGBColor[0, 0, 1], 
       LineBox[CompressedData["
1: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
/CLfdWF93Qho4v/z/wCiu2+L
        "]]}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, AxesLabel -> {
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"skrecenie\"", TraditionalForm]}, AxesOrigin -> {0, 0.4}, 
    Method -> {}, PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
    "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(u1\\)]\\)\"", 
     "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(u2\\)]\\)\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0", ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.6733630908632517`*^9, {3.673440686477467*^9, 3.6734406963660326`*^9}, {
   3.6734407373103743`*^9, 3.673440747610964*^9}, 3.6734408148898115`*^9, 
   3.673440874421217*^9, 3.6734409904138513`*^9, {3.673441976590257*^9, 
   3.6734419961073737`*^9}, {3.6734441881877537`*^9, 3.6734442079738855`*^9}, 
   3.6734444102114525`*^9, 3.6734446419747086`*^9, {3.673444688539372*^9, 
   3.6734447404073386`*^9}, 3.6734450149780436`*^9, 3.6734465167309384`*^9, 
   3.673954783145608*^9, 3.6739548788270802`*^9, 3.673954915271165*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       RGBColor[1, 0, 0], 
       LineBox[CompressedData["
1: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
KglU
        "]]}, {
       RGBColor[0, 0, 1], 
       LineBox[CompressedData["
1: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
h986LbgPCBA1GC/pQ4PPXnz/t3gFkeZC9SFn5RVudsFF86oUfbhaVreO72/v
z0cq0vRhYnUC99CXxGPFGfrQ3cGI15sCb6WTL/L14eORg7iP11+2S6jUh8jz
tbjv+vx2O9OH4onPwevXM16WQOMhfdDJ+4y78L3cdblR1L9jP+42Bs/U1Sl9
ULqzaxMzW8ry14R/+qAvcgW33LjmjN0OA7CkpOA+pBjGKM1iAIFH63FH1+zQ
qd5rACta/FuYs9hMTt0WM4Cpc/q4a61jvU7LGIAJkytummn2rHlNA/jV/wq3
iLpl1Xs9A4gQaMNNinzwI+agAVyfmcUdyi20S+y0AZhekcXr9ccbTVoPzhpA
t/9B3DSrwS6sbgYgPXced9SP7++Xgw1gMiAZN+t7Ve7hmwagfbwBd2LqHY//
UgygtWMBNy9l5nPJSwPoPLQHPx+eOh/iT/tgAMa71HFLmLzwjm01gETv47hz
pOkafYcMwKfmIu7uuKvzycKG0MT7DDf9IjVftYMhvN5dgtsqsec/heeGoKD8
Cne2YkH40wlDKBV8gNu14eV4s4wRRKYF4ZZ2yrXYvGQER8xscdN8K4jIyTcC
rfN6uHsPlheenDKCKGdZ3N+W+TzNFIzhdDwv7o7nwQdIPsZw+ysz7jHZ8eI3
hcbwkosG92rRMaLYgjH8urmBjz9U7WegpaIJLN1cw7391rvkxmUTYLZYxZ3p
axdGXWgC8cb/9yFFY6PQJRNQ4/t/e6YvWt99VE1BW2Md9xd7hYvuPqbwye8f
bi2Go29Kyk3hbO3/+3v1xnNle9sUKic2cf8PNXcWiA==
        "]]}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, AxesLabel -> {
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"predkosc\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
    Method -> {}, PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
    "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(u1\\)]\\)\"", 
     "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(u2\\)]\\)\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0", ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.6733630908632517`*^9, {3.673440686477467*^9, 3.6734406963660326`*^9}, {
   3.6734407373103743`*^9, 3.673440747610964*^9}, 3.6734408148898115`*^9, 
   3.673440874421217*^9, 3.6734409904138513`*^9, {3.673441976590257*^9, 
   3.6734419961073737`*^9}, {3.6734441881877537`*^9, 3.6734442079738855`*^9}, 
   3.6734444102114525`*^9, 3.6734446419747086`*^9, {3.673444688539372*^9, 
   3.6734447404073386`*^9}, 3.6734450149780436`*^9, 3.6734465167309384`*^9, 
   3.673954783145608*^9, 3.6739548788270802`*^9, 3.673954915296166*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       RGBColor[1, 0, 0], 
       LineBox[CompressedData["
1:eJwl13c8ld8fAHBkj2/I3tu17nLtcT4yQyoJmYVKCAlZTckqCVEpaQmlJFTK
ylYiKaREQxmJzFB+5+n3z72v9+t+nud8zvOce87nI+8T4riLhYmJaQf+IL4V
zvy5nidz3zQ2/iM7HM9EDznVZPf5n0FDcTmNNDqg+qi7N0j+V9C6Pgln9jCE
MnW/ePCl3UIBD212vedGqJm6fw+7/z20pfay3OlmUxQnvPpoNf8BakXBEgbp
pig7w9J05fRDdFng9OuxHabo3tpTDYsxT9BTRZmBAh1T1Hqq22ZuTy3qPCrl
/5PXFE2d4P0WVVyPqnpT4qe+mqBDDffUFvIbEJ/01gb1OhOUDfN3Z063oMOF
Lz/LHzRBbYbxjyf2dCKhH/EVPOPG6LbxusM697rQ1y3ad7pbjdH0gN+V8OJX
qH3S5/abAmN0WILz06/810jPY7whwtcY5eQ47Pl5uhfpndFtuzlohNrPDuz/
vucjMpJoXNf1zhAlnc9uy6QNIeX3O8baqgyRpj9y0743hJ4vDmQNXDREYRxn
Y8OKh1Fvvp+Bpbsh+mvJqJnK/4yWnbiSNT4YILGGGPMfp78hs/uHw3S/6iPb
ag6HkT0/kbfnVw06hx6irfrMiUz9RIxUS+m6b7rolJz3S0XjKbTr+xv7kFZd
FO5TFeHUOIVO2l5K1U7RRRYjoY0VPdPIzu7Mou9aXfTpx4edUXMz6OQ1VdZ5
OR30Ni21It1gFqW3Rb7+tEYHtVMMuIoOzSLmbU/vL48wUNn+rNJ+tjlkEXHz
fXkJAx2bs101FJlHJxe5FT1NGEjuz8NLf3QXUee55Rmn3dpIKG/XlHDsIno0
Fvk92F4bcaJ1FuTaRXSL+l68ka6Nfh4NHvey/o3YMmMuKzFpoxpWZcM6lyUU
lr4+6cNlOiq72X26L3cJPdJZ0zCVQEcFVkeHpz4uIcGiWBebYDpKSxpIkvdf
RuHw0q4N0ZEnb0bv8agVxH1gJYMxQkObS5BG7tMVtOuhd+qpLhqycPhx+AHT
H6T6xq2E/oSGNNNtVL4k/UEC4xtigs/S0Mq61XDLC3/Rh3KT9hYzGpoqv9Pq
+eEvynLLyCgn09CXbW5SkfKryG3jpnu/JWnoeU5FQ0HRKqqU0Pp9doGKOvh0
uVg9mYCrl4tL5gEVddsJnn8ZxwRMXVPiTDeoqC95UuXCJSZYuQRteueo6Avb
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
/v8DQRUdbA==
        "]]}, {
       RGBColor[0, 0, 1], 
       LineBox[CompressedData["
1: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
        "]]}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, AxesLabel -> {
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"r\"", TraditionalForm]}, AxesOrigin -> {0, 0}, Method -> {}, 
    PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
    "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(1\\)]\\)\"", 
     "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(2\\)]\\)\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0", ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.6733630908632517`*^9, {3.673440686477467*^9, 3.6734406963660326`*^9}, {
   3.6734407373103743`*^9, 3.673440747610964*^9}, 3.6734408148898115`*^9, 
   3.673440874421217*^9, 3.6734409904138513`*^9, {3.673441976590257*^9, 
   3.6734419961073737`*^9}, {3.6734441881877537`*^9, 3.6734442079738855`*^9}, 
   3.6734444102114525`*^9, 3.6734446419747086`*^9, {3.673444688539372*^9, 
   3.6734447404073386`*^9}, 3.6734450149780436`*^9, 3.6734465167309384`*^9, 
   3.673954783145608*^9, 3.6739548788270802`*^9, 3.6739549153171673`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
X1GwsH9ZRLg6HeV6kwYcvlDQ74HoF8/3NGxpGb05HdOD3baUU1dv0bBjj5+i
T3sPdj5x8BsEGp5f9LCbMtuDzlNmO4aGqXgwKHGnpREVb7psCe9Tp+Lda5yO
d7wk56SeZ55touDLGud/zoZ09G7PCvsbSsGJXVNCCY/peHhF9OTZ2xTU2Vc7
fT+OjkxFw44NAhTsPP6cZ/wnHU+Y1Q6r6XTjGYWCtlevGZh6OEbthWg3utnZ
vq3IYODm1O2ZXv1dmBfbGB5IYeD1dTSRWpcuZClKPpOSZGImK8x2KqsTNet9
P3gnMdGxqaFPwqUTj8y6CGU1M9HLU/Hx/PFOtE4+GnH3GxMPpMnvWdjbgQx/
9pYiZRb2zqg/XyVI6gJHd5cMForNm/Erpbfg69u7py3C2Niy1GKt0+4WXDJ2
atywiI3GuRpyJ0qb8eyCz1G1VDZSLw77uDQ0Ie6uXrplJQejFxsuvc5qQNFD
hpf7nnBw60LOhiWXG1D56dzG5kAObgm5vlejrx7PhkfWqmRy0GgmeOHtoToM
W99J2PRyUDSmd2bNtxrk7NbMLDzARYsj9twA6xpc3rrm7RNDkoNOHXuLvlXj
2ufhC4tvcnFT0Ybt01+rcF+i++FoXy7eezm3b92dKtTwjTx37AMXG1ouxg6P
VOLp4qGgm4VcTGjQsg8fqsACF12jlRyyvd8LLz6zrMBfQ9+Vg8a4eHeH2g6d
OkT+Odav9/Nc9DOv3yFbUoaP3bL4f0sTuCRW4UZ7ZBE+yhqm7DUhUOBAqrV/
YCEe+1h3+N4NAi3H5p1G3hbg1Qfn3dbZk9y5Vzx/9XEejv26/r7tDYE3pi0S
3t3PxdNH6Ty0QAL/mO7JvnIjB697DtwxjCEwfjjTitcgC1ecN/L6mEtyTmzz
mT7tTNy0XmTEpYzAlJu2imMO6ZhYIBbeWEveL7Ar3edyKkZ5xDt7thJov0DT
Nk8nGUtGbt8ppBAY+OJZmaVyIl7k9T52kUUgg59LTxZLQPamiN+2vQSuXiws
5D0XhwtMI87NDpLtN/ukig/E4OuhxYZTowTOV2T/+/g+Cr+nl1Kv/yDQ2MQr
ze9KGJ4MkmnV+U2gyrNOvsVKQWj7aV4ubJLAu1KYtmLSD4VtItqvkNy5ci3b
+7XHW+RblVkRTHJwb7DKb3vx50jLsRg7QnIr/5Bp/iKTR6j14uyZy/+fi3n2
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
iMk4ZL0kG+cXB0yMFRAQ4SY1PvgjE/8DmgTPMQ==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
9sOSJhomvs1MD9jXhfnCacc0/tCQdqDAqL+rExNVX5u91qXj9/8ifqJQJ66b
filI+U5HvScOq4iHFHTJBLVyyW58uOf+u1k9Cg6dO1juqdmNVw3T17eKUvBt
Y4EI27Yba3ydktIy2lGu887yq8nduJImxXWSaMOamHnuWkUmRhZJiZgmtyEl
PrTc6hQTC/W+7pe61YYHtxUZBrkwcbPIsapJ3jasWMn3PT+DiW3bDy2Nt27B
kuYjczLyLBTqF1cc+92MGzQsJV21yXVx8t7B2ifNeKHf0NXcloV1+SfcdyU1
4dPxK/N9USw8v0J75M+3Buy3SvjYv5KN34W48gfdG3Bcsu8ZRZaNp+0OvHDl
bsCid4oWxhpsDF7WstZuUz1Od3pZ8l4nj1fICx84U4uHYhLjNZrYmHLnX3t/
Tw0areOiZfSxMUmz702AYw3GtO6QzJ5hY06IO/Z6VaNJ4PaUy+S+SYJz4w0p
lXhvbpPdzZscdN66aZP2vkrUhKJSs6cczBe0K7lXWoGwyFVZ95qD1aIm+9e0
lSN9LjLpZDEHt9lZfjnYg3hj3WfFkQUOcpoOJ635WYo/Q+xqFARI3aBJ1Dgu
lCClRFtobiOBQnF5KVSxYvQ/Zs7au59AibRXwSNbi3BFjNjXmOMERu5j9kbs
KcROhn9V2GkC38mLqDXr5eMGjLCQukags2Gp+3nTPJxoO1CS4U6gmeWB4FfW
uUh9+V636TGBy1Ika1bczkbPn1SVd6QOisSpbjjxOAvf//6keSaWwHUVcQVa
z7/gD17zxpBPBC7m/7JxepeByzWbmpIKSQ451QwYbP2M8Z33+bZWkpyiO/mp
CKTh7Z3mQusaCfwbmcH9bjIZpeRel92iEPgh0j4lkJmEh9Ncp3QZpM6XXGta
XfEBPaOlgoMJAru+hRXKJ71Hbyblhu5XkuOLpbUjgfE4qltz043kqJ+inb75
zVjs8rjnIUhytKlqQX82IwofuR1/LENyVF76rWPFvdeYSvvoEkdy1Hm3TK7U
sVC8cEH2eCjJ0cHCtYMyAsH4pmLf+MxfAhO5GDfzUnzRKt/mWuv/38vhai/2
veuBn6d3fBIluRg6e3zjHpVr+EKVP7adjEPuJnm8lNCDf7v8jy+Q8crmppFd
sm4grLUq5C0ZT/5V4lHz9ILjq3IDPpEcHXHrMlr50x+Eb17WlCfzf1jzZ+xz
+kvY+XOySIKs/yB5pWjg1zBQG1Nf+XiGwCHVX4MrJd7CEFNwj9kUgSyrudi1
p9/B4A7j4zHjBG65rF5VdzQOeo7TDc6OkT4izNRZwyoBvN7dM3syRCAjYmzy
7J1EsJ157by5n+TqKadZ0ZCPMOsilbuXTaDTj83/OaV8grIceb1cKoFJvk5g
VJUCNDHCMKWVwF2qH4g8Vhqc+3V+UKiOwODY5Mpp7kzSZ6qbqpM+auW3cndT
wS8Q5MNynUsj+xl91morkQV9ns3J/70n+w/8RH+olAPb95Tx/3hB+qRILYNH
B3KhJdgj7r43gakHXg1JHs+DnaONYg9vE1jBfWi7jFkBTH7ZH8SyJH3e2+jQ
excKwSTl6j91IwKjwz8XX7AvArNCI8XVRwiU8Zhvz7tVAsIjV1F4C4H6RRIF
a2rKoOgqaCf0cnB4tuPbdp1y6HT5t/NzKwd9Nige/l1fDjGPFIT3lJA+9++s
1dumCni7mCL1LpyDd27ddvzeXAWT8nsDxY5y0EZofMHSoBoko10ZXxU4+H0i
qtulqRpsngr9UyB9dYqT5lu3+hqI32Z0Tv4byUXVwx5JpXUwc/F28KgXG1fV
2h2K2lMP1W4yAhZX2Ti6uuzmrg/1sPWRUorZKVJ/4j/D9oAGWLgg0TIvyUaT
f5duqRk3gVpnzGmuLywUZ8wJ/qpsgpb7bm+/h7GwwvrwKVXlZpi0F1O1v8vC
cD7aH2fhFri4vFtpHbDwrYZyhHVTKwz++uJ1qpqJ17ewluVJtMGIj1cTJZGJ
qX52tH+n2+C0+Hqe4SdMFIqXFW4rbQPexXe61GNMfGglrGTzqh1O9KzYUFHS
jbclMfLl7g64cEn7v9NRDMyKnb3Ybt0Bw/6GshfdGegXFy9e86oDfigGPOIz
YuDBn8zTjX864K7mZJbGUgYSeuFqigWdwHgz2ituQ0ctm/ncpcOdkH9WJWWz
Gh3tNY5r+oh1wa9KgfTWNXRM9td/9dK9C7Rsj3WtLabhmZeuCuW7qLBX86GB
7loaTqsEiM5YUGGlZuVz9wEqrhiiutGfUWEdg75TP5+Kiqd+N4X0UiF8t+GB
MSsqTi23mO5+QYMtNOtT25O68NPMbYYcnQ68cYet1+7sxNLXyTVqyxnAt/uk
scFkB+5tlPjXvpsBF1Q753eUdKAnw1o07AkDirXc02sMOrBIjeVzcmc3+Bv5
r0+5SsFbShvMfYy7oaRB7uQyJQr+C30jrX6/G07oC+Oy6Xase307aWt9N4jr
6GVxebXjwG5XpyErJoRbfF4hGNqGS5a6pq/1ZsJNn72rG8za0F6ueUv2ByYc
H1Paq7yxDb+43d18dZQJa3Nx7vCRVuwswARPFxaknpDR/H26GWuSisucX7KA
NeWom9/VhKsUZheoGSywMqBsnzBrInWV79ayHyx4FN9GNJ9rxOFsA8lmazY8
Hnz97cq5euzdJulr9ZANZcEXu0UZdWhrO5Zk/ZoNlFQYMTSrwwLrrrHCJjZU
VagKXjhdi+ldcttTd3EgLCqu9MTRajwXGhZRcpwD/nqXvB6XVmF9e+GixnkO
bD/4Ufm0WhVmcnDc25cDA4P21u3/VaLlfFfZNhoHyhqEzgQKleO1dUGXooY5
oPMwdcWQfxnJrYLhB3858LXe9+fE0jKsC6zSfChJQHnbViXtgRJsCThjG/Uf
AcoK639FUYrx35MJ/q0HCbgquzzEvqwIDT3CCJdzBPDrobbz2wK8eLLRZ98V
AjS/5ZTlP81Hq7CeeOtbBIyHC3/1d83DG2XlhycCCdixnTLbo5OD0nxd+qZv
CEjyEbK4sTcbOQdu9m96TwB8vaoVJZmFVvJaHWfSyXpvNs84rviChunTgz/y
CNg64ZM6+CsD/wfsl1Bs
     "]]}, 
   {RGBColor[0, 1, 0], LineBox[CompressedData["
1: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
JNlVYyv+DyapTrw=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
vEy8ZsH7uhz/B09uoXA=
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-0.6781087353204082, 0.6781089908415905}, {-0.6781080849834816,
    0.6781073930893293}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Print",
 CellChangeTimes->{
  3.6733630908632517`*^9, {3.673440686477467*^9, 3.6734406963660326`*^9}, {
   3.6734407373103743`*^9, 3.673440747610964*^9}, 3.6734408148898115`*^9, 
   3.673440874421217*^9, 3.6734409904138513`*^9, {3.673441976590257*^9, 
   3.6734419961073737`*^9}, {3.6734441881877537`*^9, 3.6734442079738855`*^9}, 
   3.6734444102114525`*^9, 3.6734446419747086`*^9, {3.673444688539372*^9, 
   3.6734447404073386`*^9}, 3.6734450149780436`*^9, 3.6734465167309384`*^9, 
   3.673954783145608*^9, 3.6739548788270802`*^9, 3.6739549153901715`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
9sOSJhomvs1MD9jXhfnCacc0/tCQdqDAqL+rExNVX5u91qXj9/8ifqJQJ66b
filI+U5HvScOq4iHFHTJBLVyyW58uOf+u1k9Cg6dO1juqdmNVw3T17eKUvBt
Y4EI27Yba3ydktIy2lGu887yq8nduJImxXWSaMOamHnuWkUmRhZJiZgmtyEl
PrTc6hQTC/W+7pe61YYHtxUZBrkwcbPIsapJ3jasWMn3PT+DiW3bDy2Nt27B
kuYjczLyLBTqF1cc+92MGzQsJV21yXVx8t7B2ifNeKHf0NXcloV1+SfcdyU1
4dPxK/N9USw8v0J75M+3Buy3SvjYv5KN34W48gfdG3Bcsu8ZRZaNp+0OvHDl
bsCid4oWxhpsDF7WstZuUz1Od3pZ8l4nj1fICx84U4uHYhLjNZrYmHLnX3t/
Tw0areOiZfSxMUmz702AYw3GtO6QzJ5hY06IO/Z6VaNJ4PaUy+S+SYJz4w0p
lXhvbpPdzZscdN66aZP2vkrUhKJSs6cczBe0K7lXWoGwyFVZ95qD1aIm+9e0
lSN9LjLpZDEHt9lZfjnYg3hj3WfFkQUOcpoOJ635WYo/Q+xqFARI3aBJ1Dgu
lCClRFtobiOBQnF5KVSxYvQ/Zs7au59AibRXwSNbi3BFjNjXmOMERu5j9kbs
KcROhn9V2GkC38mLqDXr5eMGjLCQukags2Gp+3nTPJxoO1CS4U6gmeWB4FfW
uUh9+V636TGBy1Ika1bczkbPn1SVd6QOisSpbjjxOAvf//6keSaWwHUVcQVa
z7/gD17zxpBPBC7m/7JxepeByzWbmpIKSQ451QwYbP2M8Z33+bZWkpyiO/mp
CKTh7Z3mQusaCfwbmcH9bjIZpeRel92iEPgh0j4lkJmEh9Ncp3QZpM6XXGta
XfEBPaOlgoMJAru+hRXKJ71Hbyblhu5XkuOLpbUjgfE4qltz043kqJ+inb75
zVjs8rjnIUhytKlqQX82IwofuR1/LENyVF76rWPFvdeYSvvoEkdy1Hm3TK7U
sVC8cEH2eCjJ0cHCtYMyAsH4pmLf+MxfAhO5GDfzUnzRKt/mWuv/38vhai/2
veuBn6d3fBIluRg6e3zjHpVr+EKVP7adjEPuJnm8lNCDf7v8jy+Q8crmppFd
sm4grLUq5C0ZT/5V4lHz9ILjq3IDPpEcHXHrMlr50x+Eb17WlCfzf1jzZ+xz
+kvY+XOySIKs/yB5pWjg1zBQG1Nf+XiGwCHVX4MrJd7CEFNwj9kUgSyrudi1
p9/B4A7j4zHjBG65rF5VdzQOeo7TDc6OkT4izNRZwyoBvN7dM3syRCAjYmzy
7J1EsJ157by5n+TqKadZ0ZCPMOsilbuXTaDTj83/OaV8grIceb1cKoFJvk5g
VJUCNDHCMKWVwF2qH4g8Vhqc+3V+UKiOwODY5Mpp7kzSZ6qbqpM+auW3cndT
wS8Q5MNynUsj+xl91morkQV9ns3J/70n+w/8RH+olAPb95Tx/3hB+qRILYNH
B3KhJdgj7r43gakHXg1JHs+DnaONYg9vE1jBfWi7jFkBTH7ZH8SyJH3e2+jQ
excKwSTl6j91IwKjwz8XX7AvArNCI8XVRwiU8Zhvz7tVAsIjV1F4C4H6RRIF
a2rKoOgqaCf0cnB4tuPbdp1y6HT5t/NzKwd9Nige/l1fDjGPFIT3lJA+9++s
1dumCni7mCL1LpyDd27ddvzeXAWT8nsDxY5y0EZofMHSoBoko10ZXxU4+H0i
qtulqRpsngr9UyB9dYqT5lu3+hqI32Z0Tv4byUXVwx5JpXUwc/F28KgXG1fV
2h2K2lMP1W4yAhZX2Ti6uuzmrg/1sPWRUorZKVJ/4j/D9oAGWLgg0TIvyUaT
f5duqRk3gVpnzGmuLywUZ8wJ/qpsgpb7bm+/h7GwwvrwKVXlZpi0F1O1v8vC
cD7aH2fhFri4vFtpHbDwrYZyhHVTKwz++uJ1qpqJ17ewluVJtMGIj1cTJZGJ
qX52tH+n2+C0+Hqe4SdMFIqXFW4rbQPexXe61GNMfGglrGTzqh1O9KzYUFHS
jbclMfLl7g64cEn7v9NRDMyKnb3Ybt0Bw/6GshfdGegXFy9e86oDfigGPOIz
YuDBn8zTjX864K7mZJbGUgYSeuFqigWdwHgz2ituQ0ctm/ncpcOdkH9WJWWz
Gh3tNY5r+oh1wa9KgfTWNXRM9td/9dK9C7Rsj3WtLabhmZeuCuW7qLBX86GB
7loaTqsEiM5YUGGlZuVz9wEqrhiiutGfUWEdg75TP5+Kiqd+N4X0UiF8t+GB
MSsqTi23mO5+QYMtNOtT25O68NPMbYYcnQ68cYet1+7sxNLXyTVqyxnAt/uk
scFkB+5tlPjXvpsBF1Q753eUdKAnw1o07AkDirXc02sMOrBIjeVzcmc3+Bv5
r0+5SsFbShvMfYy7oaRB7uQyJQr+C30jrX6/G07oC+Oy6Xase307aWt9N4jr
6GVxebXjwG5XpyErJoRbfF4hGNqGS5a6pq/1ZsJNn72rG8za0F6ueUv2ByYc
H1Paq7yxDb+43d18dZQJa3Nx7vCRVuwswARPFxaknpDR/H26GWuSisucX7KA
NeWom9/VhKsUZheoGSywMqBsnzBrInWV79ayHyx4FN9GNJ9rxOFsA8lmazY8
Hnz97cq5euzdJulr9ZANZcEXu0UZdWhrO5Zk/ZoNlFQYMTSrwwLrrrHCJjZU
VagKXjhdi+ldcttTd3EgLCqu9MTRajwXGhZRcpwD/nqXvB6XVmF9e+GixnkO
bD/4Ufm0WhVmcnDc25cDA4P21u3/VaLlfFfZNhoHyhqEzgQKleO1dUGXooY5
oPMwdcWQfxnJrYLhB3858LXe9+fE0jKsC6zSfChJQHnbViXtgRJsCThjG/Uf
AcoK639FUYrx35MJ/q0HCbgquzzEvqwIDT3CCJdzBPDrobbz2wK8eLLRZ98V
AjS/5ZTlP81Hq7CeeOtbBIyHC3/1d83DG2XlhycCCdixnTLbo5OD0nxd+qZv
CEjyEbK4sTcbOQdu9m96TwB8vaoVJZmFVvJaHWfSyXpvNs84rviChunTgz/y
CNg64ZM6+CsD/wfsl1Bs
     "]]}, 
   {GrayLevel[0], LineBox[CompressedData["
1:eJw0mwc01u/7x40kqdCQop0yspIyqqvSHkhpKCKyMjIaZomUUCQjW9lb9rzs
vceDZ30iyt4qGf0/3/85P+c4x/s8nvu+Ptd13+/XdT+fz7PrvoX6AzYWFhY2
TvKX5X8/3+B/fy3zMjTL/hFQz+74r9nQAmordU25SG004/bc1/A5nIu4caRz
iYAjkvtY9LxeQ87meyXCiwRM/DF+GWnwHlrc5tcuzBPAeBPrmhHuC2Xrn4to
/CYg/2dGUp1HAHB47Nl6aJaACz5VQq+fBgPvqbnxgEkCnFzi83ruh0Mfk575
YpSATkUisycmEsz2h9qP/ySAxSXkLVvIF2CWt13v7SOA59GBdsI7Gkr+zly7
zSCgZax1hcmrWGA1UHt3o4sAVi7egE+28UCJ4BXsaSHAdK6KzdAsEVipn3zM
ywiobg+/WnQtFbybxr465xOQZHYgQPBLGuyJz/fb+pUAS935hwIh6UCZ2biH
GU7Ovzmj4ZRXBhzlHdjA5U+AC8cehtGrTHh596t6vgcZv88+BjhmwYWbM5pp
jwng+BFROvUwB446qtnOGRPQl7njUOX9XKi3c3hfqkWALEP7q+LtPBhYu1t3
QpmAiwM3lxZPFwCD3146djUBt90OX326GWFaSidAdIEJxo6CTbYcJWD3azbi
0AgTavvuKfx1KoHM2T7fgVomGPom+ihalsKO57925zsz4YN69DU39XII+P29
8I05E74FXEncU1cO1xuubu7TZAK/4LoKm5MVQFReOH74IBP0R2W4xaUqgXNU
ntuMxoBgqfKZrJXVsHX52rWgCgbMS29QQ/tq8DwaM3w9mQG6BooHzSer4fXS
JQtrRwZsj5VzyequARmaJLeOAAOuHd//Ki+qDngDkmZUFOhglPJaa5NoEzyK
NOP8I0AHhrXvwYmIJnDxryJ2/aFB/92NN44LNINA7knZv5k0sJyfXRPE1gJJ
baflmkRosDJE9d2u0RaY3t8t8W4FDXbO8JlXCbeCtFJyUztBhamE0dht91pB
nt01avojFXR6M4SIllaY5Ay+5TPfAyYXJxd90tpAcWOOkk9rD+zR0fZP/tkG
KR9k5ITie8DDKPKj9fZ22PhX8CLlRg+ckNnQ+/dtO8g0b3ObSOoGhZ/X/9Lu
dUClYIeo7ukuuOxv9Hjzn04Y4m/LM93UBVdXrfMxEqWAlY5/Gc8PCgivP6yu
oUmBcIZo0A43ChQ8TVJbzqdA2RG9C06lnWBwJsrmydMusBQzs9N63wkWao4/
PKO7QLHBdTXtbidQNO1Oy7d3gd0aa3rmrw7Yq/TR46JEN6wQVc9eFO4ARaue
nefo3RDNF3JqcLIdEtoVS8dX9oCNfPZL24J2EBR+t1ZYpgcOfSv96a3aDmeC
bFMVXXvgLoff9hTrNhg325c2t5cKe/q9lxyTWmDp9aDkOjUaTN9Q0RB40gKT
neG2849okOz1K9USWqCtjd38mQ8NThzbFlL7uRncfl67LtVKg/yox6tq+xvh
hOA6W+tLdCie3eG2zaYRMs8+Nxw3osMqm6yCJbZGEExLOzD/ig4DqZSLRjsa
IHTjI6vCYjrIW9bC5mt1UMNb2TQmxoCTGQPZf5m1wJnmcZF2mgGdqsWrn5nU
gll3i7yGNgOGB7banXtRA3BIlT76nlyHWpR9prFV0B3OSI0YY4An69T+q9JV
kHdveM9PdiZEbNV5z8ythHKdIwI5W5jgFEednK+pAKl702LTykz4voGv32Cg
DLYkPWFt+MAE1ZBfM2UPy+DpzivWGtFMEA4/cpEyVQpNB/gGH+QwQf7cFTWx
pRKgb18s3kplQo0af5X5yxLwW7E9sHiYCa05G9dZcZaAQrjw/cG/TJiyzL9p
u6sYzj53r2/YQgDd9HI4j1gRdCdMTLqJEOAeva/84MFCEFa4uqHqMAG1sxEj
kifzwYpz2qLtKumjUtZBPOfzYL+4EYRrk76S2m7rqZILwdsvHJ40IcBZd1HK
RDMbOFdm92x7SUD23NmitntZsONQidhfTwJshFYO/tDPhGc8sqO3Awg4f+qz
zy7zryA48nD7lwQCnmSYtKpapUMJzzplzwwClpfvSSs8SYOpG23wp4AALe5X
GZ/+JsHhwbTjt+oJaF4nR1tiSYQNqwVWXG4j4M6DJIPfK+Ph65iSSFk3Ad/D
Uve8WxMLs/xBPvlMMn4d995avmjoNo4Qkesn4/cZefSV/wt4vU7ukhkix7Nr
+aIqGAkde/g80sYICCZygtQhDArU18ikTxGgX/XM5d25IEhras2TnSMgbxTs
1fX8oafRb7/YHwI+XVh0KnX6AA4XKs7E/iXgxm+HuA5ZL1iOGVmdSHJpT98p
lxzjVzBXZmAht0zA4M0Lih+O28OedVpmZ0muXWOpEAhRN4TEL2UsTFLL8Gis
2aCrig9u3dq/SGq7FVJjLs7WaF6e+C2C1OHcSvlXPJyxFTZLNpDjhbTLjPhr
uKPJz9L1TiQXI6WWFvG9N466hftmLxDwchmSHtt8REGPRzmPSS4GPD5TxLgV
iPt/lroV/CLgtZLAw6GjIXhidpT7zQzJvQre+dO8EXjl4uZrtAkCVn2SPt/N
+hk7fQ6aZI0QUNDcdmr/zBfkV13U4Se5eOhnr7tYfzReilk6v9xLciPcEKkd
sbhri4ecGZ2AveNxbtKV8ah1rEJJj0KAxcRJ171ZiZht6mv1rZmAmOaT2qlR
ycg0S57uryFAp7Jhz+HSNFw36KbomkcAP2t057ncdMyNjDi6I52s93bhi/yp
X5G7NXfxZBwBRT9WU6nBmXhg9Ajs8CMg7ZdfbK1PFir5Kq2mviVA3lgqxOB1
Nk6tf7J32wuSe3nND0MsczFqUW3kKMnFI8/T2CQN8vCCPo5vIbn4hNtC/p5m
Prre+Df+XI0ATtp7zg8nC7FQYjHmpxwBUQkKRp6HinCm8Ev50H7y+kse/tq8
vxiVkyZjHpP7q2WiY5sJRwlyiYWEiZPc7Cr1/r7sWIL5O4eFb5DcjB9x36jx
qwR7fPNvc9OY8O91lP/xH6X4UHQI+fOYYN1jbdhRVo4Pbn/JzrVgwjZqecMp
hQq09fpdCXeZMLPV1kY/tQLjYsojrp1nQv5vGY/8oEo8+5w2uHsHEy4oXdni
bFaN1VltVkbVDBjJM2+81VuNLP/SnbXTGHDQsf975/UaPL7rxOD3QAbkbj+m
k6dYi/EnrHaHGTHg4u2yf3Os9ajmfteKysaAbQnuVtcd6jE/LOUb7w867Kp8
Ki7/qx77b/05U1VDh1i+P5Nugw1opdfNluZJh4pV1KaV1U247mzgznfr6NAd
YWZ0/Vgzupz7zFc/RoNXbode8Wc04/ELsioeDTTo623meqbSgtUZI0sBb2gw
cNi5mTjUipsjjBan/1KhMPe4ZKFZKy6l8PzTpFCh7/5E/sWYViyrmD1wKZ0K
E5PGZnb8begm4Pi56gEVPPc9mlg104azVYbeR2t7wO2Q7siakA50O+n+D+26
wTqZbTiwuQMFVYaLF1W6gV/o0WI1Wydq8wjMNuzuhnJhkQZuI1L7jVDEarvg
FkF/zidJwYloizfTvF0govbILlSbgrvv9Ux/66VAjrCob+U7Cp6fuyJj/JUC
759lVvwYo2DAwg/7i+oUWPq4YsON2C4UlxnvN/TqBOomR0ZiRxdW/pF6cfRO
J7jtHoIA1m5cdC7CdJFOKFeXTRLX7MYtdhszncs64GrK/ni5lT3o+s/tdctU
O5QsueWLXKCiVDA99ze0ge+1oelpUypSDtatXOZuA/aHygY3vKm4f/apcHFX
KwSunuj+0UlFOZFxNgvzVti6fUR5x10aOtD88+IDW0DdYTosyoGGcncusvrd
b4GTfVc3YggNOZbEvU8caAGTW9fuptNoKKkp+SXHsRl+DRTtdLpOR4+mq49t
yhohI9KbLdySjnGp/Fuc1BvBvZb17NV3dLx4azpjU18DHNq/Ss6oio52I6ei
5/7Vg7ON7dA1GQYOJGamxR2ugwG1O2yzFxkYZHxJSb28FsaFYqR26zMw0sf9
Y4BqLSiWOZ7c78dA1pTKwkWDGtB8+Wu+doqBfbWLdvd9qmBwb6NuCycT7aSz
VwoJVsEbqvc/3W1MfO/PFfQ8qhLiFXe+Fz7HxHTVgbWXsyvARYf7lLAfE3v9
ro4doJQBh7+vt0MsE9voDyyMtcpgsytv3N08JgZS/F5p95dCp3DstmwaE3n9
LtbZTpXA26W7C1VbCaypNhhQ4yuGXefn72qJEkjFNQH5gkXwhsXynd0RAm8l
lG/MEC6Eolyl1+fVCdw9oWJ8Tz4f9LXUfvzRJlBH5Wvx1pN5MKdSeVrqIYGF
rvsZ1hdy4YZCurLESwIDjsq5rLudDW7mRW9nPQnUv3TZ76ZOFmyt1Nh+MoBA
iT/XX10xzITLba2exgkEVj5y2a1q8xVUBA5tO5NBoOGOU/r37dIBSnY+iC4g
MDZ7ZbLMizR46n4geKaOwPBVEnz7+ZNBm6kv/aiNwOdcXJ+v/UoAdZYl0zs9
BMZ7Z6/hoMTBa7qmTBZB4NSwGueZrBj43uig4zhAYK/r/IVtH6PAZtdfImOY
wHNuie8CrD7DxvfsgbcmCFR+wONTpBYB4jF61g9nCLT8HiJ0UCsEXkk+vzf6
i0C7jAZ3Q4FAuO2ocZk2T+A3tflByXZfuFX84oD8IpnfhZonRwTfQ5/04Tm2
ZQKt9tA4Xd67gfrts2FK/whUNevd2rzSAbT3bdvdR2rnkfCz0vQH4Lu6zPEX
qYv9vrMqJ97CQa7utGekjujnsQ1VfooPCkKLjMjxvOWrfv+TcMWB42NxVeR8
b6Mec3bmeeLPfUftPvwlMLnmrqXv5w/46kawUsNvsn5qbid//vTHR+3Z89az
BK53sLVqOxCMWzw7y90nCXyqdMP1pGU49vL1JK4dJcfPzHPwpkai9bljVf9+
EDgweCdRcvELyrILiOn0EmgcMO9juS0GG6MFpiRpBOm3gk9Uj8fh96jXR0w7
CEz5vjm8WDsBe7nOCgk0Evjl3fEbWU5JONHfUHKwksCeDxw/RcNScEPmgQuF
heT6yw5SdddOQ+viNfRMsv76yW9/fjVLx4063TUz4QQ6Fp6yWu+Rgersyw6K
fgQ69GsUHv+UiQla/JOT7qRWZ59aE5uF+eOD35MtCdzfF061L83BzePW7Zn6
BMqnnZtd35SLKUo+9w7cJLBsaV+ZPDUP8wtUz5krEth6J+L2tqkC7GiV36cg
TuBy2vbAtoVC7Ig+GfdYkFzf0TU27CuLcf1TpdzTf5noZDHw6v6aEhSbPfJa
OZ2JFXZKCZGCZXgnMnP0SygTceV+z7iwMqzdtGz/zJ2Jfzud7mvuKscm6szb
5/eYOPxIKShLuAJXDl3ZysvBxMRDrGpcYlVoEP7eVGiMgZO5fAP7EqpwiG1o
XUQHA1/t+DNLF63Ga88SOXg+M1CZZcCYS6QG90gEvQ88zEBTTq/re3fUYfd7
d2JyKwNdV7X7On+qQ5Xf9mtrl+nI7zyXa7yhHp86mcz9raBjqMLu620cJPfO
/lhLnjvwRt3+sLr+RmxwHbzRLU5H7VHXptN3mlB85lVQKTcdD2ikaiq0NuHz
f+Xnd9fR8HNKyEP3gmYMsVuheOAkDfMl9EKqKlrQyzDgZOk2GlrZqbG0LrWg
UHbLIHOeilG7I/29D7di5QpR7+w0KhY8MLYRj21FVf1OriEBKjYkGs1murah
6Rjl0UR7N9a/CnylLN2Bpo+dvt+N78aKNs5RSf0OfOeuWKHl1I3ZTvu9SgI6
sIwxVSW0vxtHvo/Mti2RnOx1m4+y7sJPK2iDwZWd+Nun7XfZmS50EX0YF/Gr
Ex/s+Opst7kLuWNmsk/vp+Dl5mmjvDwKGjrxmBi+puCywIqjXvOd2H9n834W
5S70OcB18l1NJzaUuVwdfNSFY/LUe1IBnZi98sMF47AuZOMbvKoh24ncFrwu
B/904XrOcNnzhh34+A3tS0NMN66mSD72Lm5DO0uOEduJHtz2t2NNgkcbWsQl
1f/eQMUNdPMgh1ttaLyNUc0nT8U9+WlxqlOtONgpO7L5ORWFS9eeLt/Riq21
NULaq2jkfjE9nD/cghVnddeliNLwRk7nnUdZLXg+On/G7yINn/ySt9x2sQWH
U3m/iHvQsF6xKGF3bxP6CE5I6HLS8USCT4u0dRMKb9S8rCdMR/mbeep1K5rQ
2up20PwpOupFXOKK2deIb+q1WHsd6PixzXJE8kE9Fg2+XXw3QkdbCUvfqpk6
xEUDr30rGdifmLT0y7kO7QZ6J1V2MpDTQGpYJLQWmzs+RqhdIznYaCrN2lyN
USO9/GszGXj7/s3Rd5rVOFHBHb2znoFycsdkyweq8CinyoayXgbq7O7R2bdQ
idoZ648kr2Xi1JyZ/ardFai5zstTUIeJXf+wciGhHO3snFj8rJl4Q+9R3hfZ
cuS8p9z8yY2JBq/DywROl+FDwfA7pxOZqFIJEbW6JejhLh+zaYKJSyOTfSKt
iDG5knf6lpko27M3+jST7H/jtDXk1xF4U05u47bfheh0TEH6OekDV6x2cvey
FeLv2OIICwUCeUaasxTWFeDx1XJPBs8SuCga1ZCzJw89Tl53sdIhUC829X2/
RC4OD4vcdjElkJkunZl5JAdfJZ5rEXxGoAA7G3HlYhYu87pN93kR2L5D9dz2
a5nIyaF4kS+QwN8SEx0RdzJQZlw3pCqSwMg7GjL1D9Px1sNtoZWkL9q9Mvnu
Svpkw2yi2X++yWF5JXsoMgVrl8Yv7SV9td7+ejK4JWG77ur1Sw0EnhAPFNtk
koAdjjEhZ0lfbhbhSrW+EocqzZN1LKRvL/9JLdKXjkGpNyFO4qSvh+99SZta
H4UXNn8PriJ9f+etI+/3zkWiZbQrV9sI+f65o2VrUsLx0OuatCskN9Y7D2Sd
tAxGmS+OjgokV/Ya6vIsyAbgysa/Wn4kd+5aU35c+vUB+zbuUNYluRR66WXS
u0deGMWtvjOU5NbCjWPTLLOu+GnBZeQ8yTUFuJMmOv4M6zdJhur/x8WH2nWu
zfdwyFddepLUygZ1Cvxr70Npk8PnEVL31r6rbGKxA/ULpTM3SJ0xXh2r4vgK
TNKK9h0kx8tU99ndOe8FP5oCTziS86Wq/b08rOgLT56wXZAn46G99Hno+ywA
2LVkL+qR8WpOH2hvywqGL+Ojassk922eVj/0mw4H4Y22plzk9V7nrObR3/wZ
FMbjU1zJfDB/Bo2Jy0XB3lc94o/IfCWPilQHqsfANrOhv/XfCIzz79gUaREH
8vdOyQVSCZQ8UXVdyTMBFqvaf3W0E7hiaROrdlwSvD69QfslWS+i0ULNwyIN
2KrWRUmR9bVtoTc0OKRDEYdagxRZ/6Yil1fo/hVSX5+XiIwnsMP0DUZ/zoTA
d7znuz8SaCqT1PQ+JQuKMx3vhZFcNLQqkRPIz4bOPJoJxZFc3/yBClPNuXDP
SPRQKMlFhuA3S5KD4FOcqfcfFynSlxW4+/PhxRUDE8kLJOfZ35ed+FUIc48b
FjzI/bAk3Jpw6G0JRK46kJo5xMQ9chvPn1lbCm6CKzj7upioPvpjM5d3KZhe
1bB2rWTiUeMCociPZWC3M5MiGs5EU5P2+LZPFXDud5sZy2UmZr0VKD26tRK2
9BcsEXJMfMel3XAuqBLO2DfbH9nBxI9qlUVHPlUBfS0fQ3WSgS+8+Q1OfKiB
9w/sZmQ8Gbjy59tjwpy1IPbEKC3CmoGdp00osfa1EJeo1hqsycDmGS+R53p1
sNE6oVZ+PwPFRpsTTks2gKWHZqlAAR0/d8YSA+ENcNLRoXgujI7rH3zK4edr
BMdUg/v3X9LRlUNZd+d0I9RR53VGz9Fx+NtTqy8pzbD/cvBQcyMNa5qcK8+v
awFeTr3Swyk0XPpwoZ7lTAsErJqflH5Hvn5XwjgtvQU+7+RU671M+jfTNuXX
61a4+0VX7kQlFQs5N1UY7W8Hi08Xpc0+96CZRuHsGs12EH+eyH7eoQe7Q6sl
H3i2g8nT+IZijR7sq8yLl5xsh8dO/GEvOXuw+rKBEW9mB6x+UC9qY9CNchY2
7tDfAbqntN7CsW68+c01TmhjJ9xd+FaRuKEbtdYbTTOsOqF4HccNY+zCBn92
W6MDFPAvu7jNY30X7mU/fGbmNgVEgpKfWvygIP9Kx+v7XlNg5bXUsXmSk54L
E09ffqNARxXrILsOBUfdnUv+veuCN1tWvvwX24lFo3E6dtRu8KgaZZcT6cCs
3yc5rFh7IF/th0bt73akun68zi3SA2vkG6+tr27Htxdvpey06QHpHH/ZSv12
DK4pyavipML2YrvespA2jFQkNhWKk+foMKMhXpM2zDAyy1FRpUL281jbLUfa
UOL2q4wLflSooUvJabW0ov+u1ONvhGhwAYTvVfxrwcbmQw9vH6PBw6f8Qwt1
Ldgh/KujXIsGKdpKW2b9WvD3No9n90NpcKXijJeoeAtm+Uuy5G+mQ5kLFjtG
NyGyxIpY/KHDQZ6tZV6S9RgxG3M4bD0DDBW4V7UW1WHW6MeAewcY8FhSwzT1
ch3mFx1qDtBmQOlhr6OnjWvxyypbWnsRA/61wIql0GrM5QxQ8uhgwNiTjUrn
xarxtt+6DW3DDODt37TuaHYVOvd69qzhZ4KvLqfu3sZKfHW0eFHCkAl7mmuG
9/8uR6XgNadv2TEhZ2ROdPBFOdq3KfjweDHhWfqbTu3V5Sh87+nevelMaKdF
WjwRKsNTCyZ9L8qY0G0YR2yNLsWaZQ5/43YmbPjKiQ4SpeirUvqNMcOES3a1
Pc+PlWB1o9WSETsBZ4e4jl14i7h7cGLr8/UEsIfa1wl+KsaToPPkkhQBRaqa
YiZZhfhwrXufth4Bk6u+DPEM5SLzmdGA/CMCxqL2ep76loPudx5ceO1AwKfH
nsLcXdl4lv767gtfAnxyjsQ8Ks9Em82x0WJhBLgY6Fbx52WgWG23y/k4AgJa
Nqo+SPmKRYEHVJj5BOQOim9bF5iGNyYqfmqUEzCiq6T6XSAVX4RoWZ6oJ0DJ
XuDCTtZkbPZvqg5tI2CZ/Yo1fTABY4bu15n1EGA3bSW4qyUObc72aKYRZHwL
h31+Z8cgn4e+1oMBAh4rSu0zDo3CI8eScj2HCbCsS5d47vIZ+RYaNPZNEKCn
k7h4yjgCv3+7tfPgDAGvk0fa7ENDsOz7zZVpvwgwN9MKmDYMRP1d5/+EzxPw
4Ingn0WZj7iwd/sQ6yIBjUfG1O78fo/Cu840/Xf/bz9HSL7k29c4sT08XPAf
mR+ZyYOyCk7YvevVzXZSn1zYYs5RYIIzJ6qn//sc9en3IJYLM5dgXVbSo0BS
L/FwW5/RtIFvtJm26GUCfEPupn8Pegnq0m3bhMnxaRLVq9RXeUD9kdmb/AsE
XFA4LBqV7wOe+o5vbf8QYG3g6tMy6QdbxzhLVeYIeLTI5R68LwjyAqO4/KcI
UA+Q1Zq+EwbTL6g2qmMEiDbmSuqejwSJmphN9oME/AusNHO4/wXunXFg3fKd
gNKoP34nHaKhcq+ymiiDAJ78Vddi/WIhz/GWUBKFgJ8PrqtHpcRDOMPrZWQz
AfH3uJWlqhPhe7XIZ64aAk4M3qQcJ5JBvX7A/2AOuZ4SBDW/r0yH45Gt2TPJ
BFA/Kx3mX/8VBiWzhEWiCLic4ND6RygDeikdESPvCNik1lyaL5MF4it0ue1d
CGgKpnZ7K2XDFVMXZ6enBDzU2iO74kwOfJH6YdinRcD3pLhzaTfyYKGq74Ky
GgEeRR9aCe18uC4wunXLKQLSBI4fDzIogKvKkm/27iWv7/6yTahNERyasojX
3EhAmTvrDoZdMVR+bSxfuYLMx1TdQ78XCOd0VVaV9TKBW8jku2RlCVxoiqxr
bWaCbNqA3sFzpSCdaJF9q4gJ22vfiwzVlEIlL5tGoz8TmpVePTesLwP1X6xH
7ygzQXPNk3yjhgpgOil+S5Zkwu/m92mnlSuBk+dsi8cWJqSNfrRoyquEPaus
6cNjDIi0ObezP7oKnOQC2MGHARRzUYcftjXwSd3u1twzBuzk/vNteYzk5mRn
joIOA06zLn3L1q2F42yH+c0lGJBXq5u9fK4Olh03ynqX0eFRuoBwEU8DuC9s
Ty+NocPq61tqIl80QJiToYHrWzqY/CyVE5hqAPr+XRKoRod7t6/HZrQ0Qprp
4Vf83TR4kO2Hj982w9snCt6ZbVQIa1WovG3dCk1BBy9Kp1GB21TB8ldsK8xX
xrad9qJCoIh8twq9FeSs400Vz1KhMjMqRep0Gwwe+D5skNEDj+4YhwTztkO9
fKhsrlcPyB4yl2dRbofI4bnkGMMeMk/bNLc+bgf2IzWvtLb2wL7RbBHT7nbo
HDaRV7bvBtmS/NWWwR3wp57P7p16N8zFH+g3rSf1rblUe9FuEJcf0xBY6ID+
3O2Pj1O6gPfGpd32tztBp0FC6Kl4Fwz5XnK5u54C6nIy/OcqO2Hf46ScGesu
OJfZbC3g2wkTlvJxwp+7ILh3qOG1TicclSpRGG3ugieLB1ef/tsBAyrNrIfE
uqHrze5jl0U7IDr8w7eAnm540az1a99sO7j26LvdWtEDZFewKra4HdymWFxj
JXtATK6ZPVi9HWTES1+POfdAq/nWa2ZP2kBP6684xx4qHMqXRq/jbaA6nLi4
5yIVBvpWnr+zsg2ofSxa9Y+osGtzfAqrXytMy5/mTS+kQlDSns2BKS3wvYXT
t1KFBvfWK4tFxTZC8+5zJa536DBv/Y/HSbIRBJZa/jDt6MDj16TbntkAod/s
G3M+0cG6dGH8D9aDdeSE0PdOOlxJ0c80bamFax6bPvCdZ8ABtfpx7Wu1sGvO
pOeqHgPO8M5tYXbWwNNvrSFrnBhQte2qhGdPNbDTbTIn0hmwnaGy6wetElif
rn98bwMTbploJzndqQQvaXOqgRgTAt1cpbKpFbBXTU924AQTeG8LnebuLgeD
2QrRM6ZM2JJfYCpxoxyG/+xi2+fMhPy9uQW/28vAom9R2cGPCZt/fVjzrqkU
Bs15/F4XMmF3x+av2pdKoVqrf1qJ3Jcx/jKV36pL4P6EzU19ct/qxO3m5yD3
8QmBy2M85L4+9KnPafF2AQh67P1eS/qCydZDFVuu54OK0w+NDtI3lE29Ssuv
5MFMnVWChjYBkS9p3c2QA6FQsK7w6X++VzClKJ8NhqdOpEaQviQ7e7XktHQW
CCjtubZA+tYxlavvz+7IgEEL1298pK+5LMwGn+P/Cg/LkswaSd8TtA19Mr8m
HUbq35xZziZgvGE6Toc9DeKfUSEKCRgqq7Znn0mG3sLyw1hNckxZ2KWMmQgB
itUrVUmfvbTzxUvOunhYpNe8u0b6cFTaI39aZiwYGq9La6ATkJ3ryDgXHg3f
OE6o5PcR0GU/+1TD/QsoZRmpCpE+311V8nqtdSQU1vwKnh4lwP2Hu850bhio
nSvcfozkhFON3gFljyA4fXGiYmGWgDMLRcU7tPzhraqYkyTJmUMHTj8IkvwA
b51Nj3b+JeDVh1Dm238eYDK7ZXaC5OK1FOE7BpEuMNi9EOxEcsxs+mx116sn
kBZ1QsL5P+51eg+y7L4JitIOX36T+rnF2MXeoQe4py52sZfU8t02HjJf7ZH3
xG6FE/9xNOyCv8MRN+RmpN5ZT443NN+y47nfOzTWsjO+Rc63UTGdcLT1Rclu
XpP1ZDyRkhLDP2IDcDrU0PDEb7IvIZ7rDHYGo+rabrM+kvOXD9T+zWGNwLq7
Oz3/kH0AX6xMqpzAZzyvqdf+coTUweKi+pJRuGqnyE3nHwQoilecUTwdg9vw
tsTsNwIS9Ty+p9yOQ3virDmNSuZDX19Y1SUJRZMdQzkbCWA6eL43CkjBjwnq
NZcrCbClpLI7aaThg5I/lJVFBBSLidw/bPQVjfqXD1ITSM6NjEwKWmbgJcp0
80wE2Yct8d9Lss1Er0vMiZf+BMxdcCstcM9GjxqKJdsLcn7l6GQZnxxc52xy
eMaagP7gVcYnAnNRwIJVWdOQgMw6GTX+6HzMCZXb4HmZAJGmSeeOhAK8YCBz
+eZxMn9da99vSStEG6uRnE9k3/e3zk9rX14xhiUJHnjFS4D2Li+5gULEWcG4
QkkWktOSfB5rdEowc0nIW22CCRr7xwUN75cird5JdLme7GNL1h6z1SvHZ0X1
9VzPmWAvIFyqSS3H1LSy1P6H5P9nCiVMqlWQ5/AteZduMcHFUC/04LFKjKGJ
GqEUEzzi5ccZfNW4MiOg8UwPA3Rb3z6RcavGfcdOGLwtY8BaJy8j8b/V2C6i
FK+VyIBgU9Uo7t4afMnC8E63Z8CJ0umXVxLq8G9XwG+BzQzALc03owTr0Zqn
/Cd9kQ5PCx9N+nrWY6ATn/XBPjq8sZbNPmzWgJtjJqZ9E+nwo7hp9I5oE66y
7NtyVIEOsZu+fKZWtmC/cof2yxM08OziEx3624JPdA33+u6gAUyJceRIteLm
wMqwo8tU2HpsLsgrsBULOk+l3smngujtsw68hm1omr7xZbcEFUatCwfZg9pQ
emzFviIuKiTocjilNbShyIXOiOMDPRBpd3DnQZl2zNCxO781uAeWl6Qflv1q
x9OCpyeU2Xpg57/9YLK/A0M/nmjeTuuGHxtfq1fe7MBkbd+VwRndEB7HeetD
TgdW9vhQbPW64aD7ApuNdSdqcYnX9hZ3Qcgk91g+jYKcvTeoA/oUMHsg2zq2
uguHtW03qh+iwO8SE7s8hS7ccl2wU5OdAmpjF7o2+3ehOmXN7TMRndBacPUE
9UI3pvIUdvp3dsCzzTOVhY+7UcMpKvJfZAfpF2dzZCK7sWXIfJnbvANevTjc
0fyrG2WYijwbODrg/C3zfTUhPXjb2MpgVrIdbtm5iItW9iDxtsjN908bWGuH
FPGP9aDOlrp4RmkbnOHWxY9KVDR9ubLpybU2mHxuIsrVTsXdy555XVatsKaD
b/zkCA1H2cp49M82w4PpUUuhNXT0tteKHG9ugqKnh1RtD9DxXJKe6MStJlD7
ptKR85COr6UdrTWNG2F2e3eufD8dWUqT2za61oO+5FAcPysDc3YdHXLnqgf7
iqE4q20MPPUkmHj1rg7ezTYzP19noE7sldWCAbWw4L2lkVLIQOZ9xx2/P1eD
4saMroBOBkrvfTxG7K2GlBMKiu1jDMRHJ9boxlTBvmyRmzlCTMyKJwTk4ipB
LftAtKgNE6XUHnTdjy0HuPhow9c3TLw5tufN5X3l0P/mZE56CBNHeZvMv0WV
AUXno9KmciYW630c54ksBb+yQVZ9LgIPHkr8EySOcFBmwcFTgECv+OkywcPF
sPYJI0hpP4Gd7c1f9p0ogqDLKbQDygQ+nmhNGFIvgPvP3vmYqxH41objRvwd
knu39vAe1iJQ2b5pF5t+HlSXVUdqPCZQ5fPA4XfWObApM+1G8gsCmbJNfLV2
2WDjzybw1oNAjgg96STnLCjNkhBoCyfw1s5BE7t3GbAsRHAeiyewbnDvHrOP
X6F1OeHBga8EbjnpeXNzUDpcCPrdG1BG4FjiutlTF1JB2/t+yYY6Ah1inLeu
v5YMW22KPDe0EvhpQ3Sj+d1EWLU+Rzygi8DVB47k6DyIBw1Gn0sYg8CTk/4v
J8xiYfW1PEfR72Q88jH03U+igaYRyC4/SGBuSaI1m9MX8H9Zzlo3SmCsjNxv
v1eRIOeob0BMEth+eFqqbks4mB322PVslsB745Y8E/uDYURUUvjjbwKXFc9O
x8sFgKCf2APZv+R4VsawWtkX3GJOd2kskvPNmBcfj3gHJdH7rReWCMw8ovdk
Ks8NpjcYHNz7j0B9X67f/jGO8LPClreF1CebuL1T0h9C8WT56n+ktnAS3v3z
KuC2414700m9ldPuzZpyS2Sp5Lj2Y5nAkOGNMZo1L3Dj6jPRYeT4Yg6Zr8dS
3mD89AUh6gKBE/bBXN4XvVEy/W9x4DyBzi2b842PfcRzCXv9qb8IHGHjM52V
CsTH6g5J4TMExog45uzcHYKnV4SuG5wgsFu/N2iCKwL3Nq+qzxgh82v/94Q3
22csOy4yzfaTwH8pr0OG/37Bha0X/Tt7CRSS2bL0azoaLXZ+qRenk/lwt8hI
Ho7FL+lX4jgoBHoHfuLj7IvHnBcXTus1E7jj/fqHC92JWD6XuCehhED3g6kP
/CtTUWS7e4RvLoEFO/9S/RlpyBH/RZU1jcASsgna2Z2OS+qnG4xDCbT67hl0
ryEDC65p9un7EnicJZpnbVUmct1rKOh/Q6DwlalHxpiFavK+2tZWBMKoW8WO
9Bw88/H585cGBNo+u7TTKj4XO0rm1m/WJLDq3C0l/cg8JA/gGq1AoMHsko+A
dwE+rh/k8uYgcGE1y5VbRoiJJVZr7GaZyLtQ9bZbvgTfflgpR+ljosqO0EDF
ohJkMsSP/yhiInO+5Ah/ZSnqRm+JNTdj4oum1JdDLeV4oKHh+MxNJo5ZyYqy
XqvA0RdttaMnmXjGazipoKMCz69YrXZiIxMreArYebsqyT5GotzmKwPdPmrf
nKNU49V/S+5JgQzUr/14+rtGDYYZxqbddWJgZfSlZN2OGnwhepRN5DwDbUw+
969sqUXHNEunZ510PGLJz5lZWo/b2RtHnnTRsHyVvny8ZzPeOvDWwiqLht+O
rZyuZW3BinWu8+MfaJgjnz02d7QFe49tCDa7TEN9z3vBZl9bcDXX6PiHPCr2
fn7qUPypFfMOMMzjfKk4zcyLqm9rxU2dLMKnzaiY5zu94zV3G1Yalc/x7qCi
gB+VhcOhDQundk5scOxB737LOyy32/GW0pEu82s9SFeVZ9F/347xlPE0DdEe
zFr/ic28sh2naxeO17V3oy8/KFtKd+DqIEsd/T3dGKFtz7GVrRMF973cy5tC
QXOW6pi9vhS0+xooZOpEwWuTQaqhZRR8LkzJ1Veh4FKwtkX6FAVX+W6Qlhrr
RM37UZ1xKl3Yent77ol9nWix12isiL0bg/soep9mOhDTR6YWpLqRTTDLxa+k
A2MmbHc03/nvPmVnjP3tDhTTOD4l87UbT55kdRF43Y4yHI25Hbd7cELnT0P0
1XYsZSiein3Zgxu0j5UyBNvxwSoU4krsQUlpfZ2rqW248+Xzpad/e9BeLqNZ
l8zb2IfLhhNkHs2vB2Quc7Wg0bV0pYw0GkaKie9SD29G5qr9/uJtNDQopYsJ
ijXjhfff1ojO0NB6ouLy+uNNqJ1yd3W6LB27RBz/Nd5rwKo9S7SBFDr+Yu0y
Wv5Rj8xPVyKeNtAxPtD2Q4ZZPX5edV7q7RAdzb+Wvs60rcON4uXJUrsZaL3G
ZdNlzxrUu2qaZO7FwJkje7wYPDVo+fvG4fkYBo4mJhes8K3GkXfFlSwlDFxa
JcEQCqzCS6fXHHs1SWqDtdNpoRVoNS/PcesSE1eYbOs4sL0CL8vQd6MOE+tV
1/aohpWj8KcHfBGPmXjr6OGdH0PLsCctYLoxlIkxGT8qrwWWoGthzcmWn0z8
wVAZYdtRgpMDGlE9v5nYou4uOXgRUSRuYP4hJ4Gbjk9GntMrwr45fW8xYQIP
fWHhbTAvxLLaBe0bsgT6nVOU/m5bgElOA0qrTxI4q15xvPtdHnYY1qly3SFw
s0K9ZxHZH+9607n7uiFB7o/Ll09/zsHG3utH91kTeEBSbOJ0ZhbyiBe+u+dO
YPjcp2NVhZnIkXzIqor0HYdBj/bfFRn4oVN5KoP0pbFjCXl2HemYeUVNfDfp
Wx+THJzaaWn45a51+GfS19LNWAcppM9JRdruiid9r39INMWzPRlPzr/5IFdD
+rInR33zt0Scdw3pPEf6pEQfURA7Fo/y/K+aiU4Co6wj/gn+jUXxT0MGSzQC
Pf4m8x9aGYOFj8+5RpA+fOpt68vffFE4NDTNV/uDQPP0LdVm2z7jDq3Ni09I
H48KKjIME4lAq6Qc6QTS57WusnTsMgxBtEgJv09ywHPjvrhPDoFYcyRFMYLk
hHnozO0Mn48oUnly7j7Jkbzxnj+OMd6oIN9QkUByJplzVozviTt+V3CPeEpy
KL6982VFmDOqbvNyriU5Raj/UzJ6Z42OfyvuR5Ac+7ytclffbxVsKv11YpHU
7yL1xJYiDEH/fOlWBqmbZL3ZG57bw+MrIZOnSC2b8IhxM+AV2D/rrpAgx5uV
1cp9Yu4FKmrhwf/dT9yRfunIh88fYL/4zP8/B2M7NmYe6eUPrptTTdb8IfDm
Ks6Z28+CYLrIzYZ7jlwfKymZSffDoFZpZdT7KQLL3ntfO7MvEop++az8NEbg
9cYj96a3fgFTY4PE/UNk39Qc+UeDJxpqBgO+KPUTuIJDLMSIPRZM769n62QS
2NIkO+8wnADVilVnA9vIevXOpFswkoC9ePXdsnoCVVvfWM80p0Bac7KcVQU5
3/MQ3prb6cBudztOL5NAo8iZNVfUv0LhcaHn0YlkPqb1gzwuZkDjYpqf2WcC
zwoZvtinmAXJaf18Pu8InHHKMbSXyYY0Dmb5qAuBD8uKluxEcqBv9K5K8zOS
413bdR9uyoOllNhPoroEiop8cI4fLoToeEkR+QMEnp8Szn42UwRGY58ifIXI
9XrC2adkoRgKrkg5319D4GnTmbprr0rgnxPr5zvDTJwbHjWJ8y6DJva65fJw
JmosPAlMX18Oklc+K5d7MPEOu5if/sdyeKiy7rn8UyY+4hPvLPavgG/fdFTd
LjOxbVQmb0VAFWjyDmzKJ/0h/eyxcCH+aigQOlRs3c1AiWdeMg0fq8FbX/91
DJJ9sfIPkyHvGuA6KwC2ngys4TbmZrrUATVyjeC3HQwco4zsevyvDqyJYW8L
dgZqm0Qe+WBXD8fizw/b/6BjZMijdA2LBqguEtZYm0jHcaWNPpXqTaB622Jk
lyQd+7a1nVara4KTW9ZdiV1Lx6wdth2qJ5thpT59MHmUhn73n/u08beA/8bL
wifjaXgj2Uk4518LsDGc3L2FaPiE52PjQYVW4Ezrc5X+Q0WR4rcROuS5g03v
asQN8hxiEjZR3PS9FT7SfNqPvKFi+2qVme4y8pzSFzqoM9qDVqeil2vn2+Dz
5oMfTleQPMhJu/BAuh2sWlTrM4J78LfQnUr/kHb4+uZx/ZELPbjzys/sukcd
cObkEe/hsG5k39TYF8NJgSvrajbHyHWhfl/7cU85ChTpp69Ari4sKv64base
BXiUjKUdGRQ8y9Xif6CIAgHinP9GXChIeH+U2GLWBVxTGr0xDZ0YZmB7SSqw
C470HNyzFNqJp8p5ng6WdUHd046jy+adGLvT6+bJzd0QZqDAYOftRIGLsdL2
Bd1wZouNnoxKB37XYo8O+N4N4iU7RqaFOnCN3du16tw9cGa/1pEHI+048D34
YtjtHjh1OED8HslJ4QPfs12meuCbjLJIcUEbpn4XcWVdR4N7Aw+Nevhb0eZX
2MkcKRr0Wnie5+htwSwLix+sV2lgJ1mQMJ7QgoLqMrRrH2hQW/j+4tKxFuQK
YjrTechzuizvauWyJuy0vfpcXJIOEscDf0WqN2GmT5Et92U67HV+ZeHe14jX
K555O7jRIVw1c/wPSyMSjWlt/L/oUHTnJvFWvh4ZBgoKvbwM+NM5ztSurEP3
I9E7FMQZ0JXQZFR7tQ65oLXpvTYDaJMXFY2Na/Fxg3NDIzKAP+foipUfq1E4
mVCapzCAGv/ermRbNfoertyeOsYAj9+933bEVmHzDSFa7hYmTD3a29CRW4kv
8326FE2ZoD3b8u5idznmTYl2qD5ngtjm1+4luuVYe0ru9pQPE/Cv1u6x4TIs
Oijb353FhMxza49YLpaihq7c/e3VTAgM7lBocC3Fzvr6WxNdTKgX8xrsX1OK
3lj29eAfJhhuiL9/Q6gEeU4sBkdxEqD0Ps72wTlEhzxHrkh+AioHB0piNYqx
+uwub3lZAu6+6LrR9agQU2N4X9ENCJDN4d577nMu8oy9LQqxIuBrhumPtOQc
/Ch4ZWDAkYBDb4zZSnOzUSzJ+fZ63/+e25+u7GvMxCrbWo25EALE/iymLnRl
4O7DHJE6MQRExLs+q+39imIKzwKacwgQqoo8/GE2DfOFUljakSD95OCEyEIq
5u2mHNKuJuNZbXonc00K/nXU2WzZREDRzhVsTduS0HLU1Yu7kwB6RuEhR8kE
DBJSdpKgEXBnavhs7fE43L1Gr43yjYAhjTteeSox2HzvsQ3nDwIsR+S0NbSj
MD6zXQ2HCRB+2ccbZfYZ7w1HaCyPE9DSP7qU5BCBQwa1VhXTBETztS2N84ei
4TX2IL5fBNjYpNA3HfqEim1NxQN/yHy84VVlqPnhDcknlBMLBHyUZF973cwH
29jXde9eImBj4qtwvg0eGKP7uNBj+b/vcXB/2XjJBTP6NZzs/xFg2swrF8rx
FMfr92ydJvXZyTWDP9u0sJ1j+7sJUs812/1+K68Dq46oUK1JvcC0PLov+SnI
579heU6OtyXAMIkS5gJ7P5mu4CPnU/xmPtVs4AHTTnojomQ8wzuzC6QDfCD+
S2RhLRmv8z+2gWw7PxhPE3aenCNf1zArGNH6BL/Cc5XDyOtV1/jjVnIiFFK8
x3jbyXxsNHI/7+sTAbuCdv1+R+bL/Knhh9cvPwP/R/uVbQNk/Sc8q+Wso+Bn
z4haCJnvwQLb9/56MRC08sDwGJXUE20fPl+LA9E/4zr7yfqVXsfZsINJYGHR
Ys5D1nfsiVrii10pcN7++IHnZP2vp5Xs+8OZBhyyG8R+pRCwofQMd8pcOsSF
bYxfiibg+dSj1r2jX+GmTNd1L3J9re5YMXOtLwMq990sP/OGgIQpsbyGxixg
4f5BODoQEC66rZDalQ047pcq+oiAq34ucy97c+BG2euzDA1yvXh6vHs/kwcp
+OflwDmyfurqmcML+XC/8cfd+woEvGKyhDayF0JwmOp4/lYCVoR13hZYXwzU
b7qSAasJkFxBrHgqgHCpZdu2oXkm3My45y3MUwI3l88cnKAw4YHC/bydG0sB
ix1mPN8y4Y3iinLrreWw55GQ2o4nTIiwa7qhEFwOvvFzk6K6TJCIuOMVK1gB
Gc+OP42XY8JSsuyMjWAlRArv1r3bzYCYsvfmfiRHzfsnPhWQ/nMmtpKqS3L0
wfNkZf8YBry8c0+ukq8GTow/TkIrBritKVw8x10LN/6wRU+sYEDvzwwp1vk6
GKF+23dkkA5tvJu1z1vXg7cuG3Wpjg4DEc+VNo3Vg/GRA8Tq93TIVwh7e4Ro
ACErE6mDfHRQKeKP0ytqgoKMqTnnSRr86GE3D5VtBmHzF8c0mmlwzblR/HJ8
M6jQ9ke+8aBB29YpqRcXWuBt3ZKp7DIVvjuzPqmUagWOY73M1B4qNBJcrZ+M
WmH858GkzEwq/LDu/LQzshU8Lt0cv21Mhd4fPm4n+dpg3NA+ULixB5ZW7Q/I
GmsDwZmcB3efd8M1w4EIH/8OGPMScgm70Q0mlr7PEqs64Ng8RfKlRDc4R9xL
t/nVAXCCkiZN7YKXLB266zU6wXFHt9hRqS6ouaVTYbCOAht8kx1C2LugbUPu
559KFEh00HzxpYsCsxI0hfXGFBguFbwQ50SBD1cqKLplFJhJXscMr+kE06eX
Z7oedYFW9MDX80GdkOO9Icc3uAvWYHpG6MNOuJn/jzlT2QWex+rXqa7tBPnB
sbqwLd2Q8lfv/PfLHbC+5Y2FV2E36Ij/TH1S1Aap2fNuZyZ7IJmrq0PhbRv8
+jYauLSRCuE2x1Zl3WgDUa9Nj9UUqHDG/kABZbwVLv0su13xggryfG5WDMFW
+NrnWt+5mgbXl/X3Pv3RAk57TAU1DtAg3DPgZHNaC6TqvZ83uUKDEL7af0Wn
W+D85k86t97RQNayVOh2exO5Px0PHeCmg+a+WIlI/SaoWuw/oy5KB0Ou3SrW
c42gxd3Gw32ODv5cqo6FmxrBsPo9q6wzHfp/cx1cf7UeXt4wEFGbpMOZKBM1
KrMOngXLF/9bzYCqh6miiqZ1cCypI+K4MAP81GNYa17VgmEYZhvdYkAEx3aV
K5nVcLiL21wvjwGd4bcCxOWqoX4k19WsjQFruT5ujsiqgrSzckkTwwxwv6ff
cT2rEpYOSVpqbmWCpVzROYm0cjBVeX2o2IoJF090KS9JlINBodRux9dMCLt6
uv1xYhmsYtz8mRbMhKRHLvPG0aWw99mlt4/LmHD56M44EEewE5EtMuYiQPqo
QMTIrmJ4kLZEVG4hoL3p9fF1AkWwQtMRPooSoBMRqlPHVgA3Z6b93UjfuGW9
dN/sdx6IKhqtTCB95VCeEFfQSC7sRN/I43oEnBJp1/jSlg1XXiw9yCd96Xvx
Pw/3yix4s2+DYCTpW7/Wjbiuyc0E08n3G/6QHL2t+WuNTEIGuPmUC2IYAWza
MtMLwV/hD8WL7VccAYYmp1dYeaWDwet7n0K+EkB5rLkx0CkNJI4oZX4tIICv
wH12XUkSSHz403aggYD5K2bTmREJUHAUPbzbCdB+aePd+yIOPivdOahH+rQD
n4NjmE4MMBa/xkaRPv6oVctkDqJgPZ5qvk5y0/11Bdfk9s/gtWHbe+sRAkKN
/+2QXggHs+sjzSyTBKzLTnkwnhMMbDzjDoszBOy0RHVJmwB4cH/JxeA3+X6W
oJvs0r6goO7eefwv2RdICTWydnlB4Nog/VeLBKzdN/vD5sorkBVr2af43/cF
lWob1762Bb92/Y1aJPfM/ZW/2w3oQNi4qMg4qc+sNOmxUtbFTTJv743995xM
6NfpVdm2+ETCPV+T1E0/T3yZ0n+FTPVypcPkePN1Mucdx71QpNds8Dk532XH
FVCi5ItirTdqjpDxBKW8kRx+HoD70/sHtMh42d01WeLLg/HBY36VafJ6ylK5
P9uwR+DEURfeuQkCBtKaKuv3fkbX1ZpgQOYjfNNXuZYzUZhrqTtxhsxXaLTJ
sWcGMQjyv498JPM5oqUulu8Wh8YjPLJXyXxfjf54yTMmASnGh5ccyHo8fqY5
3V+ZhHd1PbI2k/Wie/6yzO9PwZ2lFY67KghYk7XK29k5Dad3SNgFkfUVKTRJ
0PRORwb/l9aXZP3dBS5+25ycgQFc6xU/k+vFiOsX58rsTMw1d9dY+5HMz+Pr
Bz8VZ6Htc5usMXK97eXXMwxpykHJFS9W8ViS+QrQus9OyUUVYyd9NX0CTrJW
n1ii52H8+wQK502yT1h6ExIwVID8FjeHehTJ/Hju2yI1UYg3/kVxzImTXHzV
//TcbBGeIXKkXgsR8ManZGpwETF/XXwx3yLJvW3U+Vz2MsT10pXVmUyQ/hhf
fcG1DFXSI49+iWTCi+hVR91XlKPv8Ktdf7yY8L3nwGXuFRXY6e7/nucBEy4I
PK1iLldidcIm1n9rmCDZEW8f61CF1eW7u1PnGJDuftRg7d8q/CHPy8tgMCCr
49PJuJlqfGVqfS4liQEW7GPHmb216L7hXseR0wzwMlIqvX63Dg/K+X3uEmFA
cbCMzU1KHZo7h2j8XkNyNvTf2vmaepR/LXkjt50OtlXdU1ZxjehitpyqcocO
enmWDbw7mtBu66DLghIdjovuUhfza8L/q9i8A3L6wjieUaRIUUJLoiQKkYgH
pYhIkRRRhBCpFNESMpKG9h7S3ns97b17e/f7Xg2lIiNpKP3u78/ve+97znOe
89zn85x7zp0r2qenJMEGgbaMow2u7Xhoj9rP9SwWhLm87Nj/sQMf3np0UtOQ
BTSGxMlLnzrw97+I19IqLNgruTZOdW0nZtaNGz0TZMHjqOw5ntedqFI2vnyk
mgnytlY3Jm50oevzTb5q25jgpEXzfbSaghU32efujtBBpOXKz6VHKSin8GLL
XBXJQU8duu4DCiZutLywLYwO8lH+pv0UCsp2tyvb69LhIef7OUOfHjQX785J
jafB1M3NfFfLe/DceKrpeScauOs7hUl/7UGBhh6dxNM0WHrGrSRcm4p7tCed
YJoK8n2tC95PUvGPWYzjuWNU2Ka4btGULA1zdyVe1VpPhWvLEgIXnaIhX3xb
J/dbDzS5lvaviKPhkZdVo+J+PRBKj7s9cIyOkasqzPKoFIg1vGy20IOB2ZNP
Hm870w1/9o+YBSQy0KRc96WCdDecFdl8qq6Vgeliya7Mr//vD76vnBdjomXl
EZXrnl0g33uvtTKeia+tCvt3FHVCEst+2e56JtaIq72cftYJ1OH0scPDTBRe
skjNRb8Tpt4Vf9isxMLD2+nUSpKTaU+vji9PY2GSxyO9Yys7oJUv6tmhFhZq
LYikSuS2g67cedrSURau6tYeVNZph6xS9a/G8mz88ity8c/bbaAxrG0yEsrG
GgPj3cszW8BptKXFzpqD2dsZybJyjfAqTRronhyMPMDLu/FjA+yQkJooiOFg
gE/4u9wtDdBid+TSUDcHX+pvXPJ+Wz0cf+s1Pb2DixI7m6KeqtRCq8XFs0rH
uOi4Of6dbmYN+BmZ+lEvcfGB7BP3POUa0JGqU/X15GKQpp+9M8m9LZzZRQEU
LgpP6ewQ3VQJMv1HjJ8MclHp88ly1dgK6OuTaaBPclFxpbEnv3QFjB75VfNd
nMCkt3uXFSqXQzl7S1mSAoGOgW+zSuXLYJHbs480NQKV7N6cPChdCjWHlbW8
zxIYnq8w3iRYDMMe9x6IWRBos2nVaWJhEXw1yQsUvkfg2TAR8JgqAMoyq6rL
ngROTyr7efXlgcfOoMvZfgQW77967i81F7Ic9UQcIwh8KZF6R7A5B3Zd3j19
LovAncFnbylkZ0HqVjHKvWICc3N+lml8yATLv1zhv1UEsiRGXAVVMoDmouA1
2URg6Pbes6tE04Cydrm0ZReBegEW94Omk4HzbEuSJoNARabhqVhOIuy5GiHg
TxD47VnJ9QOVCZDcKqBo+JlADZdANdv4eFjeFTbiMUJqqzTQ9YyFm0NTuzd9
J1B40mq+zSoauo0MJ/eME7je3PjnquBwWBZyRaLoD4FhtnCJ/2IwhCSaBqRM
E8gjLXvCV/o91B/jPbdilkBnEYE3zrXvYP3heP3eOQJP1S/LOn7CE3ze8rr9
vz94wGj6qEmMM9h7POHQSJ2aXTWhdt4KPo/0Wf4lNb3k+wrrLWdwRjBE/B2p
qYI31eHQA/TPfz7p94/AmOAFPb3rPLBJWWzJErL9adu3204FvEEhhYOnRmcI
/LFN/2jUEj8cCnSkwhSBAyrGVtpagWjkW5WyeILAfoEXjq/cQvHbqg9s9Z8E
Fg0euX6uNBLdKxWdiK8ElqYtCWp+HINvAweCJoYI9Hb5OiAZEodHfb+ceNJH
YPTwx/Xi+R9Q91Rnuh2bnN/BiJLMro+4OrSMxeoh8MzqYW3uWBIunzz9I7eN
wGVXnh8OWpaKZmfcDIvLCaxL8Wg/IpOJOQaPo9zzCTxfV9Flsz4LM3x+5bak
EaigGk0xFcvGeb/4urFQArfc2e50QSAXZZRrBet8yPiUDbS7xpuHwoFKmRte
EJi5VGWN5HweRt+7W3CdjMfdmVzRlz8L0DpY317/KmmfYkXHzpFCzA3zPIRG
BErLv5l43FeEV+4XtSppEPh7x+OTzM4SzBf28ddbQKCDjbLapRTEHQEnAi1/
cnF+h1nUMf0KjO/zur64l4t5V93KYpsq8NrkWltaORebbX60vCuvxF3fVqcz
7blYQ5MUWhtXjR6J2S9VzLm47FFJnuv6GtyVlGwppMfFyxsTQ4P8a9DtLuOq
1UYuDmjL1Xc/rUXN6tGnQU0c7Eo46Kl7qR4DjPUeHMzhoHt62u8l3fV4w8B4
1f0wDlopOgrfPNaAgpXrGp1ucXD9fPhW/p2NuPvqtjLFRRz0PtT1J5ynGUMv
7Y5V/8JGjb6B4QN2zVjjK3qK1sLGsro8Y7vPzfjWUyap4j0bk86NpL1vaMGN
e//4n5dmo3bohly3V214Mlmh+QsPG31Nzk6+n2pDnidqhoJ9LPx158uo8o12
dOQT3y8Yx8Imx/X+jzZ04COxUwJz0iys5SbOwEwHehoz1oryMbH7SdnaDVFd
mDlrdLu6l4E2d/7IP+7swhDenWdWljHw2Nd/V7wXdePN1X8XvbRlIE9lmAXn
ejfq3ud7/I9OR5Wbxsf5FSlY6/+CmZlFx9JvW06Km1DwaciYNt9rOo7EzOQw
X1GwsH9ZRLg6HeV6kwYcvlDQ74HoF8/3NGxpGb05HdOD3baUU1dv0bBjj5+i
T3sPdj5x8BsEGp5f9LCbMtuDzlNmO4aGqXgwKHGnpREVb7psCe9Tp+Lda5yO
d7wk56SeZ55touDLGud/zoZ09G7PCvsbSsGJXVNCCY/peHhF9OTZ2xTU2Vc7
fT+OjkxFw44NAhTsPP6cZ/wnHU+Y1Q6r6XTjGYWCtlevGZh6OEbthWg3utnZ
vq3IYODm1O2ZXv1dmBfbGB5IYeD1dTSRWpcuZClKPpOSZGImK8x2KqsTNet9
P3gnMdGxqaFPwqUTj8y6CGU1M9HLU/Hx/PFOtE4+GnH3GxMPpMnvWdjbgQx/
9pYiZRb2zqg/XyVI6gJHd5cMForNm/Erpbfg69u7py3C2Niy1GKt0+4WXDJ2
atywiI3GuRpyJ0qb8eyCz1G1VDZSLw77uDQ0Ie6uXrplJQejFxsuvc5qQNFD
hpf7nnBw60LOhiWXG1D56dzG5kAObgm5vlejrx7PhkfWqmRy0GgmeOHtoToM
W99J2PRyUDSmd2bNtxrk7NbMLDzARYsj9twA6xpc3rrm7RNDkoNOHXuLvlXj
2ufhC4tvcnFT0Ybt01+rcF+i++FoXy7eezm3b92dKtTwjTx37AMXG1ouxg6P
VOLp4qGgm4VcTGjQsg8fqsACF12jlRyyvd8LLz6zrMBfQ9+Vg8a4eHeH2g6d
OkT+Odav9/Nc9DOv3yFbUoaP3bL4f0sTuCRW4UZ7ZBE+yhqm7DUhUOBAqrV/
YCEe+1h3+N4NAi3H5p1G3hbg1Qfn3dbZk9y5Vzx/9XEejv26/r7tDYE3pi0S
3t3PxdNH6Ty0QAL/mO7JvnIjB697DtwxjCEwfjjTitcgC1ecN/L6mEtyTmzz
mT7tTNy0XmTEpYzAlJu2imMO6ZhYIBbeWEveL7Ar3edyKkZ5xDt7thJov0DT
Nk8nGUtGbt8ppBAY+OJZmaVyIl7k9T52kUUgg59LTxZLQPamiN+2vQSuXiws
5D0XhwtMI87NDpLtN/ukig/E4OuhxYZTowTOV2T/+/g+Cr+nl1Kv/yDQ2MQr
ze9KGJ4MkmnV+U2gyrNOvsVKQWj7aV4ubJLAu1KYtmLSD4VtItqvkNy5ci3b
+7XHW+RblVkRTHJwb7DKb3vx50jLsRg7QnIr/5Bp/iKTR6j14uyZy/+fi3n2
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
iMk4ZL0kG+cXB0yMFRAQ4SY1PvgjE/8DmgTPMQ==
     "]]}},
  Axes->{True, True},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.6733630908632517`*^9, {3.673440686477467*^9, 3.6734406963660326`*^9}, {
   3.6734407373103743`*^9, 3.673440747610964*^9}, 3.6734408148898115`*^9, 
   3.673440874421217*^9, 3.6734409904138513`*^9, {3.673441976590257*^9, 
   3.6734419961073737`*^9}, {3.6734441881877537`*^9, 3.6734442079738855`*^9}, 
   3.6734444102114525`*^9, 3.6734446419747086`*^9, {3.673444688539372*^9, 
   3.6734447404073386`*^9}, 3.6734450149780436`*^9, 3.6734465167309384`*^9, 
   3.673954783145608*^9, 3.6739548788270802`*^9, 3.6739549154781766`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 49.95999336242676, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 50}}, Typeset`size$$ = {432., {137., 145.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$10616$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$10616$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{
         Plot[
          $CellContext`vu[$CellContext`t$$], {$CellContext`t$$, 0, 50}, 
          PlotRange -> All, AxesLabel -> {"t", "v"}]}, {
         Graphics[{
           PointSize[Large], Red, 
           Point[
            Dynamic[{$CellContext`t$$, 
              $CellContext`vu[$CellContext`t$$]}]]}]}], 
      "Specifications" :> {{$CellContext`t$$, 0, 50, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{489., {184., 189.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Print",
 CellChangeTimes->{
  3.6733630908632517`*^9, {3.673440686477467*^9, 3.6734406963660326`*^9}, {
   3.6734407373103743`*^9, 3.673440747610964*^9}, 3.6734408148898115`*^9, 
   3.673440874421217*^9, 3.6734409904138513`*^9, {3.673441976590257*^9, 
   3.6734419961073737`*^9}, {3.6734441881877537`*^9, 3.6734442079738855`*^9}, 
   3.6734444102114525`*^9, 3.6734446419747086`*^9, {3.673444688539372*^9, 
   3.6734447404073386`*^9}, 3.6734450149780436`*^9, 3.6734465167309384`*^9, 
   3.673954783145608*^9, 3.6739548788270802`*^9, 3.673954915490177*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 50}}, Typeset`size$$ = {432., {212., 219.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$10637$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$10637$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Show[{$CellContext`curvsu, $CellContext`curv1u, $CellContext`curv2u, \
$CellContext`curvd}, {
         Graphics[{
           PointSize[Large], Red, 
           Point[
            Dynamic[{
              $CellContext`x1u[$CellContext`t$$], 
              $CellContext`y1u[$CellContext`t$$]}]]}], 
         Graphics[{
           PointSize[0.02], Black, 
           Point[
            Dynamic[{
              $CellContext`xd[$CellContext`t$$], 
              $CellContext`yd[$CellContext`t$$]}]]}], 
         Graphics[{
           Thickness[0.006], Green, 
           Line[{
             Dynamic[{
               $CellContext`xu[$CellContext`t$$], 
               $CellContext`yu[$CellContext`t$$]}], 
             Dynamic[{
               $CellContext`x2u[$CellContext`t$$], 
               $CellContext`y2u[$CellContext`t$$]}]}]}], 
         Graphics[{
           Thickness[0.009], Red, 
           Line[{
             Dynamic[{
               $CellContext`p1x[$CellContext`t$$], 
               $CellContext`p1y[$CellContext`t$$]}], 
             Dynamic[{
               $CellContext`p2x[$CellContext`t$$], 
               $CellContext`p2y[$CellContext`t$$]}]}]}], 
         Graphics[{
           Thickness[0.009], Red, 
           Line[{
             Dynamic[{
               $CellContext`p3x[$CellContext`t$$], 
               $CellContext`p3y[$CellContext`t$$]}], 
             Dynamic[{
               $CellContext`p4x[$CellContext`t$$], 
               $CellContext`p4y[$CellContext`t$$]}]}]}]}], 
      "Specifications" :> {{$CellContext`t$$, 0, 50, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{489., {259., 264.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Print",
 CellChangeTimes->{
  3.6733630908632517`*^9, {3.673440686477467*^9, 3.6734406963660326`*^9}, {
   3.6734407373103743`*^9, 3.673440747610964*^9}, 3.6734408148898115`*^9, 
   3.673440874421217*^9, 3.6734409904138513`*^9, {3.673441976590257*^9, 
   3.6734419961073737`*^9}, {3.6734441881877537`*^9, 3.6734442079738855`*^9}, 
   3.6734444102114525`*^9, 3.6734446419747086`*^9, {3.673444688539372*^9, 
   3.6734447404073386`*^9}, 3.6734450149780436`*^9, 3.6734465167309384`*^9, 
   3.673954783145608*^9, 3.6739548788270802`*^9, 3.6739549155841827`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"td", "[", "t_", "]"}], "=", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", " ", "=", " ", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], "+", 
       RowBox[{"d", "*", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "0"], "[", "t", "]"}]}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"y", "[", "t", "]"}], "+", 
       RowBox[{"d", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "0"], "[", "t", "]"}]}], "]"}]}]}], ",", 
      RowBox[{
       SubscriptBox["\[Theta]", "u2"], "[", "t", "]"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{
      SubscriptBox["\[Theta]", "u2"], "[", "t", "]"}], "]"}], "+", 
    RowBox[{
     RowBox[{"Cot", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}], "]"}], 
     RowBox[{"Sin", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", "u2"], "[", "t", "]"}], "]"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q0", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0.1"}], ",", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "0"], "[", "0", "]"}], "\[Equal]", 
       RowBox[{"-", "0.0"}]}], ",", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "u1"], "[", "0", "]"}], "\[Equal]", "0.4"}], 
      ",", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "u1"], "[", "0", "]"}], "\[Equal]", "0"}], ",",
       " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "u2"], "[", "0", "]"}], "\[Equal]", " ", 
       "0.4"}], ",", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "u2"], "[", "0", "]"}], "\[Equal]", "0"}]}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "<", "4"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", "i", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xd", "[", "t_", "]"}], ",", 
          RowBox[{"yd", "[", "t_", "]"}]}], "}"}], "=", 
        RowBox[{"osemka", "[", 
         RowBox[{"t", ",", "1"}], "]"}]}], ",", 
       RowBox[{"i", "\[Equal]", "1"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xd", "[", "t_", "]"}], ",", 
          RowBox[{"yd", "[", "t_", "]"}]}], "}"}], "=", 
        RowBox[{"kolo", "[", 
         RowBox[{"t", ",", "3", ",", "1"}], "]"}]}], ",", 
       RowBox[{"i", "\[Equal]", "2"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xd", "[", "t_", "]"}], ",", 
          RowBox[{"yd", "[", "t_", "]"}]}], "}"}], "=", 
        RowBox[{"liniaX", "[", 
         RowBox[{"t", ",", "3", ",", "1"}], "]"}]}], ",", "True", ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xd", "[", "t_", "]"}], ",", 
          RowBox[{"yd", "[", "t_", "]"}]}], "}"}], "=", 
        RowBox[{"kwadrat", "[", 
         RowBox[{"t", ",", "4", ",", "10"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"wd", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xd", "[", "t", "]"}], ",", 
        RowBox[{"yd", "[", "t", "]"}], ",", 
        RowBox[{"td", "[", "t", "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"test", ",", "sterowanie"}], "}"}], "=", 
      RowBox[{"wyliczSterowanie", "[", 
       RowBox[{"wd", ",", "w", ",", "1", ",", "0.5"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rozwiazanieu", "=", 
      RowBox[{"rozwiazRownania", "[", 
       RowBox[{"sterowanie", ",", "test", ",", "q0", ",", "tmax"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"wyrysuj", "[", 
      RowBox[{
      "rozwiazanieu", ",", "w", ",", "wd", ",", "tmax", ",", "False"}], "]"}],
      ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.670614054761261*^9, 3.6706140795976815`*^9}, {
  3.6706141929981675`*^9, 3.670614261261072*^9}, {3.670614302801448*^9, 
  3.6706143746735587`*^9}, {3.6706144268715444`*^9, 3.670614431966836*^9}, {
  3.6706144652357388`*^9, 3.6706144746162753`*^9}, {3.6706145271792817`*^9, 
  3.6706145613752375`*^9}, {3.673444990568647*^9, 3.673445005637509*^9}}],

Cell[BoxData["0"], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.67344499253776*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Det", "::", "matsq"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\({\\(\\({0, \\(\\(\\(\\(Cos[\\(\\(\
\\(\\(\[Theta]\\_0[t]\\)\\) + \\(\\(\[Theta]\\_u1[t]\\)\\)\\)\\)]\\)\\)\\\\ \
\\(\\(r\\_1[t]\\)\\)\\)\\), 0, 0, 0}\\)\\), \\(\\({0, \
\\(\\(\\(\\(Sin[\\(\\(\\(\\(\[Theta]\\_0[t]\\)\\) + \\(\\(\[Theta]\\_u1[t]\\)\
\\)\\)\\)]\\)\\)\\\\ \\(\\(r\\_1[t]\\)\\)\\)\\), 0, 0, 0}\\)\\), \\(\\({0, 0, \
1, 0, 0}\\)\\)}\\)\[NoBreak] at position \[NoBreak]\\!\\(1\\)\[NoBreak] is \
not a non-empty square matrix. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/matsq\\\", ButtonNote -> \
\\\"Det::matsq\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6734449925967627`*^9}],

Cell[BoxData[
 RowBox[{"Det", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}]}], "]"}], " ", 
       RowBox[{
        SubscriptBox["r", "1"], "[", "t", "]"}]}], ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}]}], "]"}], " ", 
       RowBox[{
        SubscriptBox["r", "1"], "[", "t", "]"}]}], ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}], 
  "]"}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.673444992597763*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Inverse", "::", "matsq"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\({\\(\\({0, \\(\\(\\(\\(Cos[\\(\\(\
\\(\\(\[Theta]\\_0[t]\\)\\) + \\(\\(\[Theta]\\_u1[t]\\)\\)\\)\\)]\\)\\)\\\\ \
\\(\\(r\\_1[t]\\)\\)\\)\\), 0, 0, 0}\\)\\), \\(\\({0, \
\\(\\(\\(\\(Sin[\\(\\(\\(\\(\[Theta]\\_0[t]\\)\\) + \\(\\(\[Theta]\\_u1[t]\\)\
\\)\\)\\)]\\)\\)\\\\ \\(\\(r\\_1[t]\\)\\)\\)\\), 0, 0, 0}\\)\\), \\(\\({0, 0, \
1, 0, 0}\\)\\)}\\)\[NoBreak] at position \[NoBreak]\\!\\(1\\)\[NoBreak] is \
not a non-empty square matrix. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/matsq\\\", ButtonNote -> \
\\\"Inverse::matsq\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673444992932782*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Dot", "::", "dotsh"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tensors \[NoBreak]\\!\\({\\(\\({1, 0, 0, 0, 0}\\)\\), \
\\(\\({0, 1, 0, 0, 0}\\)\\), \\(\\({0, 0, 1, 0, 0}\\)\\), \\(\\({0, 0, 0, 1, \
0}\\)\\), \\(\\({0, 0, 0, 0, 1}\\)\\)}\\)\[NoBreak] and \
\[NoBreak]\\!\\({\\(\\(\\(\\(\\(\\(-\\(\\(1\\/2\\)\\)\\)\\)\\\\ \\(\\(Cos[\\(\
\\(t\\/2\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\(\\(Derivative[1]\\)\\)[x]\\)\\)[t]\\)\\)\\)\\), \
\\(\\(\\(\\(Sin[\\(\\(\[Pi]\\/4 + t\\)\\)]\\)\\) + \
\\(\\(\\(\\(\\(\\(Derivative[1]\\)\\)[y]\\)\\)[t]\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(Derivative[1]\\)\\)[\[Theta]\\_u2]\\)\\)[t]\\)\\)}\\)\
\[NoBreak] have incompatible shapes. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Dot/dotsh\\\", \
ButtonNote -> \\\"Dot::dotsh\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673444992961784*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Dot", "::", "dotsh"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tensors \[NoBreak]\\!\\({\\(\\({1, 0, 0, 0, 0}\\)\\), \
\\(\\({0, 1, 0, 0, 0}\\)\\), \\(\\({0, 0, 1, 0, 0}\\)\\), \\(\\({0, 0, 0, 1, \
0}\\)\\), \\(\\({0, 0, 0, 0, 1}\\)\\)}\\)\[NoBreak] and \
\[NoBreak]\\!\\({\\(\\(\\(\\(\\(\\(-\\(\\(1\\/2\\)\\)\\)\\)\\\\ \\(\\(Cos[\\(\
\\(t\\/2\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\(\\(Derivative[1]\\)\\)[x]\\)\\)[t]\\)\\)\\)\\), \
\\(\\(\\(\\(Sin[\\(\\(\[Pi]\\/4 + t\\)\\)]\\)\\) + \
\\(\\(\\(\\(\\(\\(Derivative[1]\\)\\)[y]\\)\\)[t]\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(Derivative[1]\\)\\)[\[Theta]\\_u2]\\)\\)[t]\\)\\)}\\)\
\[NoBreak] have incompatible shapes. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Dot/dotsh\\\", \
ButtonNote -> \\\"Dot::dotsh\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673444992975785*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Dot", "::", "dotsh"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tensors \[NoBreak]\\!\\({\\(\\({0.5`, 0.`, 0.`, 0.`, \
0.`}\\)\\), \\(\\({0.`, 0.5`, 0.`, 0.`, 0.`}\\)\\), \\(\\({0.`, 0.`, 0.5`, \
0.`, 0.`}\\)\\), \\(\\({0.`, 0.`, 0.`, 0.5`, 0.`}\\)\\), \\(\\({0.`, 0.`, \
0.`, 0.`, 0.5`}\\)\\)}\\)\[NoBreak] and \[NoBreak]\\!\\({\\(\\(\\(\\(0.` \
\[VeryThinSpace]\\)\\) - \\(\\(Sin[\\(\\(t\\/2\\)\\)]\\)\\) + \
\\(\\(x[t]\\)\\)\\)\\), \\(\\(\\(\\(0.` \[VeryThinSpace]\\)\\) - \
\\(\\(Cos[\\(\\(\[Pi]\\/4 + t\\)\\)]\\)\\) + \\(\\(y[t]\\)\\)\\)\\), \
\\(\\(\\(\\(-0.4`\\)\\) + \\(\\(\[Theta]\\_u2[t]\\)\\)\\)\\)}\\)\[NoBreak] \
have incompatible shapes. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Dot/dotsh\\\", ButtonNote -> \
\\\"Dot::dotsh\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6734449929907856`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Dot :: \
dotsh\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6734449930057864`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(Inverse[\\(\\({\\(\\({0, \
\\(\\(\\(\\(Cos[\\(\\(\\(\\(\\(\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\
\\)\\) + \\(\\(\\(\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\
\\)\\)\\)\\)]\\)\\)\\\\ \\(\\(r\\_1[t]\\)\\)\\)\\), 0, 0, 0}\\)\\), \\(\\({0, \
\\(\\(\\(\\(Sin[\\(\\(\\(\\(\\(\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\
\\)\\) + \\(\\(\\(\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\
\\)\\)\\)\\)]\\)\\)\\\\ \\(\\(r\\_1[t]\\)\\)\\)\\), 0, 0, 0}\\)\\), \\(\\({0, \
0, 1, 0, 0}\\)\\)}\\)\\)]\\)\\) . \\(\\({\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)}\\)\\)\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6734449930587893`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(Inverse[\\(\\({\\(\\({0, \
\\(\\(\\(\\(Cos[\\(\\(\\(\\(\\(\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\
\\)\\) + \\(\\(\\(\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\
\\)\\)\\)\\)]\\)\\)\\\\ \\(\\(r\\_1[t]\\)\\)\\)\\), 0, 0, 0}\\)\\), \\(\\({0, \
\\(\\(\\(\\(Sin[\\(\\(\\(\\(\\(\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\
\\)\\) + \\(\\(\\(\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\
\\)\\)\\)\\)]\\)\\)\\\\ \\(\\(r\\_1[t]\\)\\)\\)\\), 0, 0, 0}\\)\\), \\(\\({0, \
0, 1, 0, 0}\\)\\)}\\)\\)]\\)\\) . \\(\\({\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)}\\)\\)\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6734449930767903`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(5\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\(Inverse[\\(\\({\\(\\({0, \
\\(\\(\\(\\(Cos[\\(\\(\\(\\(\\(\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\
\\)\\) + \\(\\(\\(\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\
\\)\\)\\)\\)]\\)\\)\\\\ \\(\\(r\\_1[t]\\)\\)\\)\\), 0, 0, 0}\\)\\), \\(\\({0, \
\\(\\(\\(\\(Sin[\\(\\(\\(\\(\\(\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\
\\)\\) + \\(\\(\\(\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\
\\)\\)\\)\\)]\\)\\)\\\\ \\(\\(r\\_1[t]\\)\\)\\)\\), 0, 0, 0}\\)\\), \\(\\({0, \
0, 1, 0, 0}\\)\\)}\\)\\)]\\)\\) . \\(\\({\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)}\\)\\)\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6734449931137924`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6734449931307936`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Inverse", "::", "matsq"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\({\\(\\({0, \\(\\(\\(\\(Cos[\\(\\(\
\\(\\(TemporaryVariable$37702[t]\\)\\) + \
\\(\\(TemporaryVariable$37703[t]\\)\\)\\)\\)]\\)\\)\\\\ \
\\(\\(TemporaryVariable$37695[t]\\)\\)\\)\\), 0, 0, 0}\\)\\), \\(\\({0, \
\\(\\(\\(\\(Sin[\\(\\(\\(\\(TemporaryVariable$37702[t]\\)\\) + \
\\(\\(TemporaryVariable$37703[t]\\)\\)\\)\\)]\\)\\)\\\\ \
\\(\\(TemporaryVariable$37695[t]\\)\\)\\)\\), 0, 0, 0}\\)\\), \\(\\({0, 0, 1, \
0, 0}\\)\\)}\\)\[NoBreak] at position \[NoBreak]\\!\\(1\\)\[NoBreak] is not a \
non-empty square matrix. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/matsq\\\", ButtonNote -> \
\\\"Inverse::matsq\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673444993153795*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Inverse", "::", "matsq"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\({\\(\\({0, \\(\\(\\(\\(Cos[\\(\\(\
\\(\\(TemporaryVariable$37702[t]\\)\\) + \
\\(\\(TemporaryVariable$37703[t]\\)\\)\\)\\)]\\)\\)\\\\ \
\\(\\(TemporaryVariable$37695[t]\\)\\)\\)\\), 0, 0, 0}\\)\\), \\(\\({0, \
\\(\\(\\(\\(Sin[\\(\\(\\(\\(TemporaryVariable$37702[t]\\)\\) + \
\\(\\(TemporaryVariable$37703[t]\\)\\)\\)\\)]\\)\\)\\\\ \
\\(\\(TemporaryVariable$37695[t]\\)\\)\\)\\), 0, 0, 0}\\)\\), \\(\\({0, 0, 1, \
0, 0}\\)\\)}\\)\[NoBreak] at position \[NoBreak]\\!\\(1\\)\[NoBreak] is not a \
non-empty square matrix. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/matsq\\\", ButtonNote -> \
\\\"Inverse::matsq\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6734449931897964`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Inverse \
:: matsq\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6734449932047977`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvdae"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system as differential-algebraic \
equations. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote \
-> \\\"NDSolve::ntdvdae\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6734449933028035`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "icfail"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Unable to find initial conditions that satisfy the \
residual function within specified tolerances. Try giving initial conditions \
for both values and derivatives of the functions. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/icfail\\\", ButtonNote -> \
\\\"NDSolve::icfail\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6734449936938257`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"ex\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.6734449936998262`*^9}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"ey\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.6734449937058263`*^9}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, AxesLabel -> {
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"skrecenie\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
    Method -> {}, PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
    "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(u1\\)]\\)\"", 
     "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(u2\\)]\\)\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0", ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.6734449937278275`*^9}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, AxesLabel -> {
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"predkosc\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
    Method -> {}, PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
    "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(u1\\)]\\)\"", 
     "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(u2\\)]\\)\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0", ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.673444993753829*^9}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, AxesLabel -> {
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"r\"", TraditionalForm]}, AxesOrigin -> {0, 0}, Method -> {}, 
    PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
    "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(1\\)]\\)\"", 
     "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(2\\)]\\)\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0", ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.6734449937748303`*^9}],

Cell[BoxData[
 GraphicsBox[{},
  Axes->True,
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0., 0.}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.6734449937838306`*^9}],

Cell[BoxData[
 GraphicsBox[{},
  Axes->{True, True},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.673444993831834*^9}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.673444993834834*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Det", "::", "matsq"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\({\\(\\({0, \\(\\(\\(\\(Cos[\\(\\(\
\\(\\(\[Theta]\\_0[t]\\)\\) + \\(\\(\[Theta]\\_u1[t]\\)\\)\\)\\)]\\)\\)\\\\ \
\\(\\(r\\_1[t]\\)\\)\\)\\), 0, 0, 0}\\)\\), \\(\\({0, \
\\(\\(\\(\\(Sin[\\(\\(\\(\\(\[Theta]\\_0[t]\\)\\) + \\(\\(\[Theta]\\_u1[t]\\)\
\\)\\)\\)]\\)\\)\\\\ \\(\\(r\\_1[t]\\)\\)\\)\\), 0, 0, 0}\\)\\), \\(\\({0, 0, \
1, 0, 0}\\)\\)}\\)\[NoBreak] at position \[NoBreak]\\!\\(1\\)\[NoBreak] is \
not a non-empty square matrix. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/matsq\\\", ButtonNote -> \
\\\"Det::matsq\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6734449938878365`*^9}],

Cell[BoxData[
 RowBox[{"Det", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}]}], "]"}], " ", 
       RowBox[{
        SubscriptBox["r", "1"], "[", "t", "]"}]}], ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}]}], "]"}], " ", 
       RowBox[{
        SubscriptBox["r", "1"], "[", "t", "]"}]}], ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}], 
  "]"}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.673444993888837*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ntdvdae"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot solve to find an explicit formula for the \
derivatives. NDSolve will try solving the system as differential-algebraic \
equations. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote \
-> \\\"NDSolve::ntdvdae\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6734449942468576`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "icfail"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Unable to find initial conditions that satisfy the \
residual function within specified tolerances. Try giving initial conditions \
for both values and derivatives of the functions. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/icfail\\\", ButtonNote -> \
\\\"NDSolve::icfail\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673444994567876*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"ex\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.673444994574876*^9}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"ey\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.6734449945808764`*^9}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, AxesLabel -> {
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"skrecenie\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
    Method -> {}, PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
    "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(u1\\)]\\)\"", 
     "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(u2\\)]\\)\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0", ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.673444994624879*^9}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, AxesLabel -> {
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"predkosc\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
    Method -> {}, PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
    "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(u1\\)]\\)\"", 
     "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(u2\\)]\\)\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {}}}, 
                 AspectRatio -> Full, ImageSize -> {20, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"Directive", "[", 
             RowBox[{"RGBColor", "[", 
               RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
               "]"}], "]"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.6734449946328793`*^9}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, AxesLabel -> {
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"r\"", TraditionalForm]}, AxesOrigin -> {0, 0}, Method -> {}, 
    PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
    "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(1\\)]\\)\"", 
     "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(2\\)]\\)\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0", ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.6734449946498804`*^9}],

Cell[BoxData[
 GraphicsBox[{},
  Axes->True,
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0., 0.}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.673444994656881*^9}],

Cell[BoxData[
 GraphicsBox[{},
  Axes->{True, True},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.673444994695883*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.673444994698883*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Det", "::", "matsq"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\({\\(\\({0, \\(\\(\\(\\(Cos[\\(\\(\
\\(\\(\[Theta]\\_0[t]\\)\\) + \\(\\(\[Theta]\\_u1[t]\\)\\)\\)\\)]\\)\\)\\\\ \
\\(\\(r\\_1[t]\\)\\)\\)\\), 0, 0, 0}\\)\\), \\(\\({0, \
\\(\\(\\(\\(Sin[\\(\\(\\(\\(\[Theta]\\_0[t]\\)\\) + \\(\\(\[Theta]\\_u1[t]\\)\
\\)\\)\\)]\\)\\)\\\\ \\(\\(r\\_1[t]\\)\\)\\)\\), 0, 0, 0}\\)\\), \\(\\({0, 0, \
1, 0, 0}\\)\\)}\\)\[NoBreak] at position \[NoBreak]\\!\\(1\\)\[NoBreak] is \
not a non-empty square matrix. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/matsq\\\", ButtonNote -> \
\\\"Det::matsq\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673444994745886*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Det :: \
matsq\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673444994762887*^9}],

Cell[BoxData[
 RowBox[{"Det", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}]}], "]"}], " ", 
       RowBox[{
        SubscriptBox["r", "1"], "[", "t", "]"}]}], ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}]}], "]"}], " ", 
       RowBox[{
        SubscriptBox["r", "1"], "[", "t", "]"}]}], ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}], 
  "]"}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.673444994764887*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndsdtc"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The time constraint of \[NoBreak]\\!\\(1.`\\)\[NoBreak] \
seconds was exceeded trying to solve for derivatives, so the system will be \
treated as a system of differential-algebraic equations. You can use \
Method->{\\\"EquationSimplification\\\"->\\\"Solve\\\"} to have the system \
solved as ordinary differential equations. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ndsdtc\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6734449961219645`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "icfail"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Unable to find initial conditions that satisfy the \
residual function within specified tolerances. Try giving initial conditions \
for both values and derivatives of the functions. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/icfail\\\", ButtonNote -> \
\\\"NDSolve::icfail\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6734449964319825`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: icfail\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6734449964379826`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"ex\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.6734449964469833`*^9}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"ey\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.6734449964519835`*^9}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, AxesLabel -> {
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"skrecenie\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
    Method -> {}, PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
    "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(u1\\)]\\)\"", 
     "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(u2\\)]\\)\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0", ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.673444996467984*^9}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, AxesLabel -> {
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"predkosc\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
    Method -> {}, PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
    "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(u1\\)]\\)\"", 
     "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(u2\\)]\\)\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0", ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.6734449964859858`*^9}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, AxesLabel -> {
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"r\"", TraditionalForm]}, AxesOrigin -> {0, 0}, Method -> {}, 
    PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
    "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(1\\)]\\)\"", 
     "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(2\\)]\\)\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0", ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.6734449965029864`*^9}],

Cell[BoxData[
 GraphicsBox[{},
  Axes->True,
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0., 0.}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.673444996510987*^9}],

Cell[BoxData[
 GraphicsBox[{},
  Axes->{True, True},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.673444996531988*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.6734449965349884`*^9}],

Cell[BoxData[
 RowBox[{"Det", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}]}], "]"}], " ", 
       RowBox[{
        SubscriptBox["r", "1"], "[", "t", "]"}]}], ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "0"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "u1"], "[", "t", "]"}]}], "]"}], " ", 
       RowBox[{
        SubscriptBox["r", "1"], "[", "t", "]"}]}], ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}], 
  "]"}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.673444996550989*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndsdtc"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The time constraint of \[NoBreak]\\!\\(1.`\\)\[NoBreak] \
seconds was exceeded trying to solve for derivatives, so the system will be \
treated as a system of differential-algebraic equations. You can use \
Method->{\\\"EquationSimplification\\\"->\\\"Solve\\\"} to have the system \
solved as ordinary differential equations. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::ndsdtc\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6734449978840656`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"ex\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.6734449985271025`*^9}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"ey\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.673444998531102*^9}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, AxesLabel -> {
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"skrecenie\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
    Method -> {}, PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
    "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(u1\\)]\\)\"", 
     "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(u2\\)]\\)\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0", ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.6734449985501037`*^9}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, AxesLabel -> {
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"predkosc\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
    Method -> {}, PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
    "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(u1\\)]\\)\"", 
     "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(u2\\)]\\)\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0", ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.673444998592106*^9}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, AxesLabel -> {
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"r\"", TraditionalForm]}, AxesOrigin -> {0, 0}, Method -> {}, 
    PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
    "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(1\\)]\\)\"", 
     "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(2\\)]\\)\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0", ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.6734449985991063`*^9}],

Cell[BoxData[
 GraphicsBox[{},
  Axes->True,
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0., 0.}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.6734449986051064`*^9}],

Cell[BoxData[
 GraphicsBox[{},
  Axes->{True, True},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.670608255736596*^9, 3.670608309316661*^9, 3.670608374820407*^9, {
   3.670608469868844*^9, 3.670608506703951*^9}, {3.670608635864338*^9, 
   3.6706086405926085`*^9}, 3.670610053616861*^9, {3.670611411973445*^9, 
   3.670611431222492*^9}, 3.670611462302556*^9, {3.670611503609644*^9, 
   3.6706115170656714`*^9}, 3.6706140989697895`*^9, 3.670614146896531*^9, {
   3.6706141959823384`*^9, 3.6706142617871017`*^9}, {3.670614304829564*^9, 
   3.6706143749615755`*^9}, {3.6706144185660696`*^9, 
   3.6706144322648525`*^9}, {3.670614522335005*^9, 3.6706145620212746`*^9}, 
   3.6734449986721106`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1904, 955},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification->1.2000000476837158`,
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (November 20, 2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 160, 2, 35, "Text"],
Cell[720, 24, 187, 4, 36, "Input"],
Cell[910, 30, 43759, 1095, 2912, "Input"],
Cell[CellGroupData[{
Cell[44694, 1129, 6655, 149, 290, "Input"],
Cell[51352, 1280, 1101, 26, 50, "Print"],
Cell[52456, 1308, 1228, 30, 126, "Output"],
Cell[CellGroupData[{
Cell[53709, 1342, 37084, 614, 278, "Print"],
Cell[90796, 1958, 38328, 634, 274, "Print"],
Cell[129127, 2594, 34772, 598, 294, "Print"],
Cell[163902, 3194, 38336, 657, 294, "Print"],
Cell[202241, 3853, 28628, 498, 289, "Print"],
Cell[230872, 4353, 149612, 2463, 441, "Print"],
Cell[380487, 6818, 75168, 1238, 440, "Print"],
Cell[455658, 8058, 2630, 52, 384, "Print"],
Cell[458291, 8112, 3805, 85, 534, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[462145, 8203, 5098, 141, 336, "Input"],
Cell[467246, 8346, 643, 10, 26, "Print"],
Cell[467892, 8358, 837, 15, 26, "Message"],
Cell[468732, 8375, 1584, 40, 26, "Print"],
Cell[470319, 8417, 843, 15, 26, "Message"],
Cell[471165, 8434, 967, 18, 45, "Message"],
Cell[472135, 8454, 967, 18, 45, "Message"],
Cell[473105, 8474, 960, 17, 45, "Message"],
Cell[474068, 8493, 529, 11, 26, "Message"],
Cell[474600, 8506, 1318, 22, 26, "Message"],
Cell[475921, 8530, 1318, 22, 31, "Message"],
Cell[477242, 8554, 1318, 22, 31, "Message"],
Cell[478563, 8578, 530, 11, 31, "Message"],
Cell[479096, 8591, 925, 17, 31, "Message"],
Cell[480024, 8610, 927, 17, 31, "Message"],
Cell[480954, 8629, 533, 11, 31, "Message"],
Cell[481490, 8642, 511, 10, 31, "Message"],
Cell[482004, 8654, 569, 11, 31, "Message"],
Cell[CellGroupData[{
Cell[482598, 8669, 963, 21, 345, "Print"],
Cell[483564, 8692, 963, 21, 345, "Print"],
Cell[484530, 8715, 4839, 105, 348, "Print"],
Cell[489372, 8822, 4832, 105, 348, "Print"],
Cell[494207, 8929, 4815, 105, 348, "Print"],
Cell[499025, 9036, 832, 19, 524, "Print"],
Cell[499860, 9057, 812, 17, 524, "Print"],
Cell[500675, 9076, 644, 10, 31, "Print"]
}, Open  ]],
Cell[501334, 9089, 837, 15, 31, "Message"],
Cell[502174, 9106, 1584, 40, 31, "Print"],
Cell[503761, 9148, 511, 10, 31, "Message"],
Cell[504275, 9160, 567, 11, 31, "Message"],
Cell[CellGroupData[{
Cell[504867, 9175, 961, 21, 345, "Print"],
Cell[505831, 9198, 963, 21, 345, "Print"],
Cell[506797, 9221, 4837, 105, 348, "Print"],
Cell[511637, 9328, 4096, 86, 348, "Print"],
Cell[515736, 9416, 4815, 105, 348, "Print"],
Cell[520554, 9523, 830, 19, 524, "Print"],
Cell[521387, 9544, 812, 17, 524, "Print"],
Cell[522202, 9563, 644, 10, 31, "Print"]
}, Open  ]],
Cell[522861, 9576, 835, 15, 31, "Message"],
Cell[523699, 9593, 527, 11, 31, "Message"],
Cell[524229, 9606, 1584, 40, 31, "Print"],
Cell[525816, 9648, 699, 13, 31, "Message"],
Cell[526518, 9663, 569, 11, 31, "Message"],
Cell[527090, 9676, 534, 11, 31, "Message"],
Cell[CellGroupData[{
Cell[527649, 9691, 963, 21, 345, "Print"],
Cell[528615, 9714, 963, 21, 345, "Print"],
Cell[529581, 9737, 4837, 105, 348, "Print"],
Cell[534421, 9844, 4834, 105, 348, "Print"],
Cell[539258, 9951, 4815, 105, 348, "Print"],
Cell[544076, 10058, 830, 19, 524, "Print"],
Cell[544909, 10079, 812, 17, 524, "Print"],
Cell[545724, 10098, 646, 10, 31, "Print"],
Cell[546373, 10110, 1584, 40, 31, "Print"]
}, Open  ]],
Cell[547972, 10153, 699, 13, 31, "Message"],
Cell[CellGroupData[{
Cell[548696, 10170, 963, 21, 345, "Print"],
Cell[549662, 10193, 961, 21, 345, "Print"],
Cell[550626, 10216, 4839, 105, 348, "Print"],
Cell[555468, 10323, 4832, 105, 348, "Print"],
Cell[560303, 10430, 4815, 105, 348, "Print"],
Cell[565121, 10537, 832, 19, 524, "Print"],
Cell[565956, 10558, 814, 17, 524, "Print"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
