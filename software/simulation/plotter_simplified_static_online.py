import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

file = pd.read_csv('output.csv')

plt.figure('trajectory')
plt.subplot(2, 1, 1)
plt.plot(file['xd'].values, file['yd'].values, label='xy reference', color='black', linestyle='dashed')
plt.plot(file['x'].values, file['y'].values, label='xy', color='red')
plt.xlabel('x [m]')
plt.ylabel('y [m]')
plt.gca().set_aspect('equal')
plt.grid()
plt.legend()
plt.subplot(2, 1, 2)
plt.plot(file['t'].values, file['thetad'].values, label='$\\theta$ reference', color='black', linestyle='dashed')
plt.plot(file['t'].values, file['theta'].values, label='$\\theta$', color='red')
plt.xlabel('t [s]')
plt.ylabel('$\\theta$ [rad]')
plt.grid()
plt.legend()

R = 0.05

thetau1 = np.arctan2(np.sin(file['theta1'].values), np.cos(file['theta1'].values)*np.sin(file['phi1'].values))
thetau2 = np.arctan2(np.sin(file['theta2'].values), np.cos(file['theta2'].values)*np.sin(file['phi2'].values))

ru1 = R * np.sqrt(np.cos(file['phi1'].values)**2 * (np.sin(file['theta1'].values)**2 - 1) + 1)
ru2 = R * np.sqrt(np.cos(file['phi2'].values)**2 * (np.sin(file['theta2'].values)**2 - 1) + 1)

plt.figure('control signals')
plt.subplot(4, 1, 1)
plt.plot(file['t'].values, thetau1, label='$\\theta_{u1}$')
plt.plot(file['t'].values, thetau2, label='$\\theta_{u2}$')
plt.xlabel('t [s]')
plt.ylabel('[rad]')
plt.legend()
plt.grid()
plt.subplot(4, 1, 2)
plt.plot(file['t'].values, ru1, label='$r_{u1}$')
plt.plot(file['t'].values, ru2, label='$r_{u2}$')
plt.xlabel('t [s]')
plt.ylabel('[m]')
plt.legend()
plt.grid()
plt.subplot(4, 1, 3)
plt.plot(file['t'].values, file['eta3'].values, label='$\\dot{\\phi}_{u1}$')
plt.plot(file['t'].values, file['eta5'].values, label='$\\dot{\\phi}_{u2}$')
plt.xlabel('t [s]')
plt.ylabel('[rad/s]')
plt.legend()
plt.grid()
plt.subplot(4, 1, 4)
plt.plot(file['t'].values, np.degrees(file['phi1'].values), label='$\\phi_1$')
plt.plot(file['t'].values, np.degrees(file['theta1'].values), label='$\\theta_1$')
plt.plot(file['t'].values, np.degrees(file['phi2'].values), label='$\\phi_2$')
plt.plot(file['t'].values, np.degrees(file['theta2'].values), label='$\\theta_2$')
plt.xlabel('t [s]')
plt.ylabel('gimbal angles [deg]')
plt.legend()
plt.grid()

plt.figure('reference tracking error')
plt.subplot(2, 1, 1)
plt.plot(file['t'].values, file['x'].values - file['xd'].values, label='$e_x$')
plt.plot(file['t'].values, file['y'].values - file['yd'].values, label='$e_y$')
plt.xlabel('t [s]')
plt.ylabel('error [m]')
plt.grid()
plt.legend()
plt.subplot(2, 1, 2)
plt.plot(file['t'].values, file['theta'].values - file['thetad'].values, label='$e_\\theta$')
plt.xlabel('t [s]')
plt.ylabel('error [rad]')
plt.grid()
plt.legend()

plt.show()
